{
  type: 'comment',
  raw: '##################################################'
}
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '## Forgotten Island, written by Josh Goebel' }
{ type: 'newline', raw: '\n' }
{
  type: 'comment',
  raw: '##################################################'
}
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'global', raw: '__game_name' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'Forgotten Island' }
{ type: 'newline', raw: '\n' }
{ type: 'global', raw: '__game_version' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0.9.0"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'comment', raw: '# not yet releasted' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'start_at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'washedashore' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//template = talp' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'game_type' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'verb_noun' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'game_information' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '\t' }
{ type: 'ident', raw: 'game_name' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '${{__game_name}}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: ' \t' }
{ type: 'ident', raw: 'game_shortname' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'ForgotIsland' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '\t' }
{ type: 'ident', raw: 'written_by' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'Josh Goebel' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: ' \t' }
{ type: 'ident', raw: 'uuid' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'cf74ec25-337d-454f-9a0c-273d4c6bb604' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '\t' }
{ type: 'ident', raw: 'year_of_release' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '2022' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '\t' }
{ type: 'ident', raw: 'game_version' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '$${__game_version}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '\t' }
{ type: 'ident', raw: 'copyright_message' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: 'Copyright (C) 2022 Josh Goebel. Not for commercial use. Do not redistribute.'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '\t' }
{ type: 'ident', raw: 'short_synopsis' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'Discover the secrets of a forgotten island' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'loading_screen' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'loading_graphic' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//on_debug {' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'on_startup' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_theme' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"main_theme"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_false' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tutorial_on"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//  :gosub "title_screen";' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//  :gosub "ask_fantasy_violence";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask_tutorial"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"bootup"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"auto_music"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: '  \n\n  ' }
{ type: 'comment', raw: '//:goto "beach";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:pocket "chest_key";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:pocket "candle";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:pocket "matchbook";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pocket' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"medallion"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:pocket "spyglass";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:goto "shipwreck";' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:goto "cliffs_e_clearing";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:pocket "red_marble";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:pocket "blue_marble";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:goto "quiet_grove";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:goto "beach_ww";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'comment', raw: '//:gosub "dream_of_storm";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:goto "quiet_grove";' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:goto "village_square";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:goto "beach";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:goto "western_heights";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:pocket "chopped_oak";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'comment', raw: '//:goto "cliffs_e_clearing";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:pocket "msg_bottle";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:goto "village_hut";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:pocket "oar";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:create "wolf";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//:goto "cliffs_e_clearing";' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '######################################' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '#  Strings                           #' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '######################################' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'strings' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'str_arg1' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tmp_string' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'status' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'blank' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'last_soundtrack' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'soundtrack' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'sound_volume' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"normal"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scope' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"survivor"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'award_name' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'prompt' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"[]: "' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'flower_color' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"yellow"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'lost_jungle_desc' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//treasure_score: string "{until_wave}";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'header_text' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dynamic_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'h' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<5>>"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{
  type: 'comment',
  raw: '//status_prompt : dynamic_string { (has_status ? status : blank) }'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'status_prompt' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dynamic_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"[]: "' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{
  type: 'comment',
  raw: '// changes after one sees the statue and gets the idea these might be eyes'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'reminds_of_eye' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dynamic_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" with dark veins running thru it"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'if_only_had_spyglass' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dynamic_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"spyglass"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ternary', raw: '?' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" If only you had a spyglass."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_room_description' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dynamic_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You're deep in the jungle.  Huge tropical trees surround you on all sides. It's easy to get lost here."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'beach_cave_description' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dynamic_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_candle_lit' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ternary', raw: '?' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"There is nothing here."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"It's too dark to see much."` }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' \n  ' }
{ type: 'ident', raw: 'candle_lit_desc' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dynamic_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_candle_lit' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ternary', raw: '?' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" (lit)"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' \n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '######################################' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '#  Booleans                          #' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '######################################' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'booleans' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tmp_bool' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tutorial_on' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"true"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'is_debug' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"true"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'always' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"true"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'never' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'has_status' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'fantasy_violence_ok' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'has_set_initial_thirst' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// system' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'is_sound_muted' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// is' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'is_wolf_awake' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'is_candle_lit' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'is_flashback' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'is_reading' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// has seen' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'has_won_game' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'has_seen_cliff_steps' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'has_seen_wolf' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'has_visited_grove' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'has_dreamed_of_storm' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'has_seen_altar_flashback' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'dream_intro' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'ident', raw: 'knows_to_swim' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// tutorial flags' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tut_look_debris' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tut_look_gull' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tut_eat_gull' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tut_catch_gull' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tut_look_around' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tut_look_sand' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// cutscenes' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cutsceen_grove_destroy_seen' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cutsceen_plant_acorn_seen' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cutsceen_signal_fire_seen' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cutsceen_wizard_staff_seen' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'boolean' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'integers' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tmp_int' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'max_achievements' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"17"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'inventory_limit' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"15"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'ident', raw: 'number_of_stones' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"89"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'until_wave' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'dream_counter' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'thirst' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'hunger' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'lost_jungle_counter' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'oar_hit_chest_count' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tutorial_progress' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'wood_count' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'kill_chance' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'total_inputs' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'total_looks' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'total_rooms' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'collections' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tmp_list' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'list' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'awards' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'items' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openArray', raw: '[' }
{ type: 'closeArray', raw: ']' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'themes' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'dream_theme' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'theme' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'extends' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'main_theme' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'colors' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'paper' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"#333"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'main_theme' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'theme' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'lister_exits' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'ident', raw: 'exit_list_capitalization' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'lower' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'ident', raw: 'experimental_enable_direction_arrows' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'false' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'ident', raw: 'is_list_enter' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'true' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'lister_objects' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'ident', raw: 'experimental_auto_group_singular_objects' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'true' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'ident', raw: 'list_type' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"single_line_no_article"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'lister_inventory' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'ident', raw: 'experimental_auto_group_singular_objects' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'true' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'system_messages' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'tutorial_message_prefix' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '// on_get = "You got it!"' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'question_prompt_char' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"choice?"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'object_list_end_text' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'exit_list_end_text' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'inventory_list_header' }
{ type: 'whitespace', raw: '        ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"CARRYING: "' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'inventory_list_empty' }
{ type: 'whitespace', raw: '         ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<NOTHING<10>>"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '// exit_list_end_text = " {status}"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//prompt = ">>xx "' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'prompt_expression' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'status_prompt' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'prior_prompt' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"{ has_status ? `({status})` : blank }"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//object_list_header = "<…<#888>> "' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//object_list_header = "<you see:<#777>> "' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'object_list_header' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<seen:<#777>> "' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'object_list_separator' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" , "' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//exit_list_header_concise= "<+<#666>>' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{
  type: 'comment',
  raw: '//exit_list_header_concise= "<obvious exits: <#777>>"'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'exit_list_header_concise' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<exits: <#777>>"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'exit_list_sep_verbose' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '", "' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      \n    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'colors' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//yousee_item_pen = 5' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'status_bar_paper' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '#36c' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//  exit_list_item_pen = #999' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'pen' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '7' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'exit_list_item_pen' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '#393' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'exit_list_punctuation_pen' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '#fff' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'tutorial_pen' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '4' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'border' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '0' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'header_pen' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '5' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//status_bar {' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '// : header_text;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '// : treasure_score;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '// : dynamic_text "score_topright" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//extends = two' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'screen' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '// padding_horz                 = 24' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'status_bar_padding_bottom' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '1' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'status_bar_padding_top' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '1' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      \n      ' }
{ type: 'comment', raw: '// padding_horz = 0' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'theme_settings' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//capitalization   = upper' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'textbox_capitalization' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'original' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'font' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'userfont_antic' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'columns' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '65' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '// space_normalization = raw' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'auto_beta' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//clear_screen_enable = false' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'enable_prior_prompt' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'true' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'success_jingle' }
{ type: 'whitespace', raw: '  ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'on' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '// wingame_jingle  = on' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'failure_jingle' }
{ type: 'whitespace', raw: '  ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'on' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{
  type: 'comment',
  raw: '// layout  = SB G D X O SEP "adv_line_red" LOCK'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//layout = SB G LOCK D O X' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'layout' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: '  ' }
{ type: 'string', raw: 'P* "header_text"- G D- X O ' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'keyboard_click' }
{ type: 'whitespace', raw: '  ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'off' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'default_delay' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '0' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'parser_delay' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '300' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'on_describe' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"reception"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' \n    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"When ready to depart, type <THE END<6>> at any time to finish."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'locations' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'placeholder' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dummy location for fake connections"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'reception' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The small cast of this grand narrative stands before you."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Meet and Greet"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"r_stranger"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"talk stranger; look stranger"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'verb_is' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"talk"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'append' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You approach the stranger."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"<As you stare, smoke rises; then a sudden bright flash... and he's gone.<13>>"`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"...in his place stands the wizard."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'swap' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o1' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"r_stranger"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o2' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"r_wizard"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"shake hand; shake hands"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You walk about shaking hands with everyone, the wolf even raises his paw for you."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The seagull merely looks at you quizically."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"the end"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"the_end"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"kiss wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You lean in for a kiss..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"...the wolf happily licks your face and slobbers all over you."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"pet wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You pet the wolf and rub in behind the ears affectionately."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"It whines happily then gives you a growl just for show."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"hug wolf; snuggle wolf; cuddle wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You squeeze the wolf tight.  It's fur is incredibly warm and soft."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You let go right as things were about to start getting awkward."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"talk wizard"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"I'm quite pleased to make your acquaintance."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"Sorry about my 'pitiful pet' smack down earlier, merely playing my role to the fullest, ya know how it is."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"talk firstmate"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Ahoy, mate."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"talk captain"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"It was my honor to be your captain thru the storm."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"Remember... I told ya \\"We'll be fine\\", didn't I?"`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<The captain winks.<13>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask tree"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<question. done.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"talk tree"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<greet you. pleased.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"talk wolf; talk seagull; talk ape"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// beach' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'beach' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A beach of beautiful white sand extends along the shoreline to the east and west.  Further to the north is the jungle."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Southern Coast"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"search debris"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'beach_w' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"A beach of beautiful white sand."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Southern Coast"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'beach_ww' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A beach of beautiful white sand. There is a rocky outcropping to the north."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Southern Coast"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'beach_e' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"A beach of beautiful white sand."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Southern Coast"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'beach_ee' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"A beach of beautiful white sand."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Southern Coast"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'beach_ww_rocky' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A small crevice disappears downwards into the rock."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Rocky Outcropping"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"go crevice; enter crevice; wiggle crevice"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"beach_ww_cave"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'beach_ww_cave' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You are standing in a small cave. {beach_cave_description}"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Small Cave"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_tick' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_candle_lit' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"shadow_bear"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"As the light fills up the small room, the bear disappears; it was just a shadow."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"shadow_bear"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'ident', raw: 'waters_edge' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You washed ashore here. Further south out to sea a half sunken shipwreck rises from the waves."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: `"Water's Edge"` }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look waves; look sea"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"The waves look a bit angry."' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x ship; x shipwreck; x south; x flag"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A black skull and crossbones flutters in the wind. You wonder if you could swim that far."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"south _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' \n        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_worn' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"medallion"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'knows_to_swim' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You swim out to the ship."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"shipwreck"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"How? You can't exactly walk to the ship."` }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"swim _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_worn' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"medallion"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"knows_to_swim"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You swim out to the ship."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"shipwreck"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"It's pretty far out.  You aren't feeling strong or lucky enough at the moment."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'washedashore' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You wake up with a mouth full of sand; your body half in, half out of the cold sea.  You have never been happier to be alive."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"The Cold Sand"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"n _; stand _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You can barely stand. Perhaps crawl?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'failure' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look *; examine *"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You can't see anything from how you're laying but sand."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"s _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"How? Swim?  Perhaps another day."' }
{ type: 'semicolon', raw: ';' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"spit _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You spit out some sand. You're very thirsty."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"swim _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"You aren't feeling that lucky."` }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x sea"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"You're flat on your face, but it's cold."` }
{ type: 'semicolon', raw: ';' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"crawl _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You claw your way slowly out of the water and onto dry land...\\n ...then collapse exhausted."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'success' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'tutorial_on' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Exactly! This game uses a simple parser; commands are 1 or 2 words, always. Most commands will be verb/noun pairs, such as <EAT FOOD<6>> or <ATTACK BEAR<6>>."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Some time later..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'tutorial_on' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_set_initial_thirst"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"thirst"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"75"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"beach"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// village' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'village_square' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"The village surrounds you on all sides, but it's far too quiet - like a ghost town."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Village Square"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"get fruit; get fabric; look fruit; look fabric"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"It's far too old and decayed to be of any use."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x ghost"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"No ghosts here."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Ghost Busters"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"drop stone; drop pebble; drop rock"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You find a small pebble nearby and drop it into the well.  You hear a splash."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Wishing Well"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'village_n' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"To the north stands a large hut."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Village"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"go hut"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"village_hut"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'village_s' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Small huts surround both sides of the street."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Village"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'village_e' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Small huts surround both sides of the street."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Village"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'village_w' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Small huts surround both sides of the street."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Village"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'village_hut' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"This hut is homey, yet spacious - larger than the others. A thick layer of dust covers everything."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: `"Village, Elder's Hut"` }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x dust"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You swipe your finger across the top of a surface.  Yep, dusty."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"enter fireplace"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"It's small and you wouldn't fit.  You don't possess the Christmas magics."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Jolly Old St. Nicholas"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"sit bed"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"It's more comfortable than you expected."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"sleep bed"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Ok, but just a quick nap..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Zzzz..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// jungle' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_edge' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A small footpath leads north into the jungle.  To the south is the beach."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: `"Jungle's Edge"` }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look water; drink water; get water"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"There is no water here, you'll need to find some elsewhere."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_entrance' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"{jungle_room_description}"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_w' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"{jungle_room_description}"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// TODO: better description' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'south_of_grove' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Jungle surrounds you.  To the north is the sacred grove."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Jungle, Outside Grove"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"north _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'cutsceen_grove_destroy_seen' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"quiet_grove"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_ww' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"{jungle_room_description}"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_e' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"{jungle_room_description}"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_ee' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"{jungle_room_description}"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_ne' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"{jungle_room_description}"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_n' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"{jungle_room_description}"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_nw' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"{jungle_room_description}"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_exit' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"{jungle_room_description}"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'lowlands' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"There is a small village here."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Lowlands"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"go village"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"village_s"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look village"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'sloping_hills' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Gently sloping hills rise up to great heights further west. You see a village further east."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Sloping Hills"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'western_heights_dream_e' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'comment', raw: '// dummy exit to the east' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'western_heights_dream' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A full moon hangs high above.  The wind whips at you, threatening to cast you off the cliff and into the sea."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Western Heights"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"touch altar"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' \n          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Touching the altar brought you here, but it does not seem to be how you must return..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"listen spell; listen incantation; listen words; listen _"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"You can't make out the words."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"east _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You can't seem to physically move from this place."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Yet somehow you are certain you could leave at anytime, merely by closing your eyes."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"close eyes; shut eyes; blink eyes"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You close your eyes... slowly the cold wind and rain recede until there is only silence..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_theme' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"main_theme"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"main_music_theme"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: '  \n          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"western_heights"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look injury"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You're not certain of the injury, but the wolf looks like it's in pain."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"save wolf; help wolf; free wolf; unbind wolf"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"The urge to intervene is strong..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Yet some part of you knows these events cannot be changed."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"attack wizard; fight wizard; hit wizard; stop wizard; throw knife; stab wizard; kill wizard"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"The urge to intervene is strong..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Yet some part of you knows these events cannot be changed."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'western_heights' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"This seems to be the highest point of the entire island, allowing you to see for miles.{if_only_had_spyglass}"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Western Heights"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_tick' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look altar"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'has_seen_altar_flashback' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<You have a sudden desire to touch the altar.<#9f9>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x view; x point"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The highest point of the island, the view is spectacular."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look crack"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'has_not_created' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"red_marble"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Wait a minute..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"There is something hiding at the very bottom of the crack."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"red_marble"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<you notice:<#777>> red marble"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"touch altar"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You feel a strange tingling..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"...then a sudden headache..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_theme' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dream_theme"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"...and suddenly you are here, but not here."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_seen_altar_flashback"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look down"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"It looks to be a sheer cliff dropping hundreds of feet to large rocks and angry ocean below."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look south"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A white, sandy beach lays to the south.  Further out to sea a half sunken ship sits in the waves."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look north"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The northern part of the island appears to be dense jungle. You can barely make out movement."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"spyglass"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"spy north"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Dense jungle.  You see a large ape swinging among the trees."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Planet of the Apes"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"spy shipwreck"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"A half-sunken pirate ship that's seen better days."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"spy village"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A small rural village consisting of many huts."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"spy ocean; spy sea"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Nothing but beautiful blue as far as the eye can see."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"spy down"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Angry ocean beats agaisnt huge boulders, so close you can almost taste it."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"spy _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You spy nothing out of the ordinary."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look west"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Ocean as far as the eye can see."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look east"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The heights slowly slope back down slowly to gentle, rolling hills."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cliffside_east' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A three foot wide ledge, perhaps long enough that you could lay down, perhaps not. Vines cover much of the cliff face."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Eastern Cliffs, Ledge"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x vine; x vines"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"As thick as your arm."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"swing vines; swing vine"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Are you Tarzan now? Perhaps you might climb them though."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Tarzan"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"go vines; climb vines; go vine; climb vines"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cliffs_e_vine_top"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cliffs_e_vine_top' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You cling to the vine, it's a long way down. The safety of the ledge is beside you to the west."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Eastern Cliffside"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cliffs_e_vine_m' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You cling to the vine, it's a long way down."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Eastern Cliffside"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cliffs_e_vine_b' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You cling to the vine, it's still a long way down. A dark crevice seems to lead directly into the cliff."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Eastern Cliffside"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cliffs_e_cave_entrance' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The passage narrows then heads downwards into the rock. Behind you are the vines."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Eastern Cave"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cliffs_e_cave_rear' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The room is filled with treasure.  Too many chests to count, each one bursting with gold, gems, and precious metals."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Eastern Cave"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look dragon; find dragon"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You search, but it seems there truly is no dragon standing guard."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Paranoid Much?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_tick' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Treasure Island"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'ident', raw: 'cliffs_e' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The jungle ends abruptly with a two-hundred foot plunge to rocky shores below. There is no obvious way down."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Eastern Cliffs"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look shores"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Rocky."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x cliff; x edge; x plunge; x down"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You approach the edge and peek.  Seems like a long ways down..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cliffs_e_clearing' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You stand in a large clearing, bordered by dense jungle to the west. A huge boulder clings resolutely to the edge of the cliff."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Eastern Cliffs,  Clearing"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_tick' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"sit stone; sit stones"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You sit down for a moment and ponder the life choices that led you to this point..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"push boulder"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"It's massive.  It doesn't budge."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'has_seen_cliff_steps' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Something seems a little off."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x cliff; x edge"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You approach the edge and peek.  Seems like a long ways down..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"count stones"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"24."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x circle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"circle_stones"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x boulder"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_seen_cliff_steps"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'lost_jungle_e' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'lost_jungle_w' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'lost_jungle_s' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'lost_jungle_n' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'lost_jungle' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"{lost_jungle_desc} You are lost."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Deep in the Jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'quiet_grove' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You stand in a quiet grove filled with flowers. A single massive tree stands at the center."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Quiet Grove"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'burnt_grove' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You stand in a burnt grove filled full of nothing but ashes and acrid smoke."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Burnt Grove"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look staff; get staff"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"broken_staff"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cutsceen_wizard_staff"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"win_game"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'dream_ship' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You stand resolute at the helm as a wave unlike any you've ever seen rushes towards you. Your old grand-daddy told tales of waves like this - <ship killers<15>> he called them."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"The Storm"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_tick' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look stranger"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"<You've been meaning to speak to them, but never found the time.<13>>"`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"pray _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"\\"Dear lord...\\" You whisper your fearful request to a higher power and hope someone is listening. "'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"God-fearing"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{
  type: 'comment',
  raw: '// prevent us from dropping things in the dream'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"drop _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You can't really drop anything in this place..."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"north _; south _; up _; east _; west _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You dare not leave your post."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"up _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"But why in the heck would you want to be up in the air in a storm like this?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"down _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Retreating below deck sounds great, but you dare not leave your post."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"hit captain; punch captain"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You consider assuming command by force, but have second thoughts.  Is a mutiny truly the answer?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Bad boys, bad boys, what ya gonna do"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"mutiny -;kill captain; attack captain"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You reach for your knife... but have second thoughts.  Is mutiny truly the answer here?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Bad boys, bad boys, what ya gonna do"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"abandon ship"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"No, duty compells you to stay.  That's the Captain's call, not yours."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"walk plank; jump overboard; jump water; jump ship; swim _"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"Surely things aren't that bad yet?"` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look ship; look boat"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"The Drunken Revenge. She's gotten you thru thick and thin in the past - perhaps she'll pull thru yet."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x wave; x waves; x sea; x water"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The wave approaching must be at least as tall as four of your own vessel stacked mast to mast. A huge wall of angry water."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"piss pants; pee pants; wet pants; pee yourself; wet yourself"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"The firstmate looks at you a awkwardly."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"...but at least the warmth running down your leg briefly wards off the chill of the night air."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give speech"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You clear your throat."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"\\"It's been an honor..."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pause' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'millis' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"1000"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"...my friends\\""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pause' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'millis' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"1000"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You were never one for long speeches."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"d_stranger"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"talk stranger; speak stranger"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"(too far away without yelling)"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"They stand at the railing, staring into the ocean, seemingly unbothered by the violence of the storm."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"yell stranger; scream stranger; shout stranger"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You yell, casting your voice towards the stranger."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Slowly they turn and you see eyes..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pause' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'millis' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"1000"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"...like staring into a deep, dark abyss with no bottom."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<A spider web of lightning flashes across the sky.<14>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"...and when you look back the stranger is gone."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"d_stranger"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Your momma always told ya get a grip on that overactive imagination of yours."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"talk firstmate; speak firstmate; look firstmate"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"\\"Ain't never me seen a storm like this, oh the stories we'll tell!\\" says the first mate with a silly grin."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look helm"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"d_wheel"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look deck"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You recall the beautiful, sunny days you spent swabbing that deck in the past. You should have appreciated them more."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look leviathan"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You don't see one (yet), you just thought you heard one."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Could also be your overactive imagination..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"listen _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Wind. Rain. Waves. Shouts. Meows."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look cats"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You notice several of the felines hiding under a tarp."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look tarp"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Just a tarp. Cats are hiding under it."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look nest; look crowsnest"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Up high above.  You can see it periodically when lightning flashes across the sky."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look killer"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The only killer you see is the wave in the distance."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"kiss captain; kiss firstmate"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Is this really the right time to share your feelings?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"talk captain; speak captain; look captain"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"\\"Don't worry kid, we'll be fine,\\" he boasts."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Yet you see the fear in his eyes."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"turn wheel;spin wheel;steer ship;turn ship"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You spin the wheel trying to alter course, but deep inside you know it won't matter."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"close eyes; give up; wake _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You close your eyes and try to will yourself awake."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"until_wave"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"1"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'dream_ship_placeholder' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'comment', raw: '// fake room for dream ship connections' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// shipwreck rooms' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'shipwreck' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The ship is half sunken, but the skull and crossbones still flies high. To the north is the beach."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Shipwreck"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'ship_crowsnest' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The skull and crossbones still flies proudly in the wind."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: `"Crow's Nest"` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'ship_captains' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'location' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Half the room is submerged beneath dark water."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'header' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: `"Captain's Quarters"` }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look water"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You wonder what could be hiding beneath the surface."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"swim water; check water; feel water; search water"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'has_not_created' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"chest_key"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You feel around beneath the water and grasp a small object."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"<you've found:<#777>> key"` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chest_key"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You feel around beneath the water, but find nothing."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// flashbacks' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'objects' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// RECEPTION' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'r_seagull' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"seagull"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"reception"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"The seagull slightly dips it's head as if taking a bow."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'r_captain' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<captain<#c6c>>"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"reception"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"A patch covers one eye and a parrot rests on his shoulder. Yes, the captain is a bit stereotypical, but you'd never say that to his face."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'r_firstmate' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<first mate<#c6c>>"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"reception"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A bit of blond sandy hair escape from under a red bandana. His smile may be missing a few teeth, but is as still friendly as ever."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'r_stranger' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<stranger<#c6c>>"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"reception"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"The frail old man wears in a dingy cloak.  He leans on a gnarled walking stick, as if it were a cane."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'r_wizard' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<wizard<#c6c>>"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"He wears a black cape and grips a bloodwood staff.  He smiles and makes a very deep bow."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'r_wolf' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<wolf<#c6c>>"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"reception"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A dire wolf with a light grey mane and deep <golden<#fc3>> eyes.  It yips at you and wags its tail in a friendly fashion."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'r_tree' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ancient tree"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"reception"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"It towers above you, with smooth white bark and light crimson blossoms.  Every so slowly the limbs drop a bit and then rise again."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'r_ape' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ape"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"reception"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"The ape scratches it's head and looks back at you."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// VILLAGE' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{
  type: 'comment',
  raw: '//bucket: object "a bucket" at="village_square" msg="Likely used for drawing the water up from the well.";'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'well' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a well"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"village_square"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"It looks like hasn't been used in some time. Seems deep."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'vendor_booths' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"vendor booths"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"village_square"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"You see the remains of fruit that rotted long ago and faded fabrics."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// elder hut' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'bed' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a bed"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A cozy small bed."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"village_hut"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'kettle' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a kettle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"A large kettle hangs over the fireplace, smells like grandma's chili."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"village_hut"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'fireplace' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a fireplace"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"Looks like it hasn't been used in many years."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"village_hut"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tome' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a tome"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A large book, very old."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"village_hut"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'village' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"village"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"Appears to be a small, primitive village, but it's too quiet.  You'll need to enter to learn more."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"lowlands"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'elder_hut' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"large hut"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"The hut before you is larger than the rest, but otherwise similar."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"village_n"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// western_heights_dream' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'wounded_wolf' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<wolf<#c6c>>"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"The large creature is bound upon the altar and appears injured. It looks towards you, or is that merely your imagination?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'evil_wizard' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<wizard<#c6c>>"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"He wears a black cape and holds a bloodwood staff. He is slowly speaking the words of some sort of incantation or spell."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'bloodwood' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"bloodwood"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"Very rare, from the Blood Forest. It is said that removing a single limb from that forest traps and binds the tree's soul to the wood for eternity."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'bloodwood_staff' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a bloodwood staff"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"The bloodwood staff is at 7 feet long and a dark redish brown. Red mists swirl inside the staff."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'wizard_cape' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a cape"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"The wizard's black cape is blowing about madly in the wind."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'moonstone_altar' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"moonstone altar"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A massive moonstone altar.  It glows a bright blueish yellow in the moonlight."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'moon' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"moon"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A full moon; you swear it looms larger than usual."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'moonlight' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"moonlight"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"The moonlight feels as if it carries a slight chill."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'd_sea' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"sea"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A stormy sea swirls and churns far below."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'blazing_bonfire' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"raging bonfire"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A massive bonfire lights the night, yet provides no warmth."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// western heights' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'charred_ashes' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"charred ashes"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"Appears to be the remains of a large bonfire from many moons ago. This would be the perfect spot to build a signal fire."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'stone_altar' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"stone altar"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A massive moonstone altar. An impossible crack intersects it from top to bottom."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'altar_crack' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a crack"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"It almost looks as if it was violently torn in half. What forces could do such a thing?"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'altar_moonstone' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"moonstone"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"western_heights"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"Slightly bluer than limestone; glows when exposed to moonlight; known to be almost indestructable. The superstitious say it posses magical properties."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// sacred grove' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'wolf' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a <dire wolf<#c6c>>"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"quiet_grove"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A dire wolf with a light grey mane and deep <golden<#fc3>> eyes."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'tall_tree' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"an ancient tree"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"quiet_grove"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"It towers above you, with smooth white bark and light crimson blossoms. It could easily be thousands of years old - or older."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'grove_flowers' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"flowers"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"quiet_grove"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"You wander among the flowers. Such <impossible hues<#r>> and shades of color, and a rich smell of chocolate and sunshine."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// burnt out sacred grove' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'burnt_tree' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a dead tree"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"burnt_grove"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"Dead. The life force you sensed before is gone."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{
  type: 'comment',
  raw: '//dead_wolf: scenery "<dead wolf<#c6c>>" at="burnt_grove";'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{
  type: 'comment',
  raw: '//dead_wizard: scenery "<dead wizard<#c6c>>" at="burnt_grove";'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'broken_staff' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a broken staff"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"You wizard's staff is broken in half and powerless."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// dream ship' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// d_rope: object "a rope" at="dream_ship";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'd_captain' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<captain<#c6c>>"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"dream_ship"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'd_firstmate' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<firstmate<#c6c>>"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"dream_ship"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'd_stranger' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<stranger<#c6c>>"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"dream_ship"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A subject of debate among the crew.  They boarded at the last moment and have kept to themselves.  An old, gnarled walking stick never leaves their side."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'd_wheel' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"ship's wheel"` }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"dream_ship"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"The wheel is hand-crafted with the finest Darkwood from the Isle of blah blah blah... honestly you weren't paying all that much attention when the Captain blathered on and on about it during the tour."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'd_plank' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"plank"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"dream_ship"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: `"You've seen plenty walk it."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'd_mast' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"mast"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"dream_ship"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"It extends upwards into the dark night. You know someone is manning the crow's nest, but don't envy them."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'ident', raw: 'vines' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"vines"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffside_east"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"As thick as your arm."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'medallion' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a silver medallion"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"It's attached to leather cordage and seems cold to the touch."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'get_message' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You suddenly feel luckier."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'wearable' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"true"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffside_east"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// wolf eyes' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'red_marble' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a red marble"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A small, smooth red pebble{reminds_of_eye}. It feels hot to the touch, as if it was alive."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'blue_marble' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a blue marble"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A small, smooth, blue pebble{reminds_of_eye}. It feels hot to the touch, as if it was alive."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// starter inventory' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'your_pants' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"some pants"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Comfortable everyday sailor pants."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'wearable' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"true"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'your_earring' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a gold earring"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A small silver teardrop earring"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'wearable' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"true"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// beach' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'footpath' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"footpath"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"jungle_edge"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A bit overgrown, but obviously it was once a well-worn path."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_beach' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"beach"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"jungle_edge"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"The white sand glitters as if inviting you back to the safety of the beach."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'rocky_crevice' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"crevice"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"beach_ww_rocky"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"It'd be tight, but you believe you could wiggle thru if you gave it a shot."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'rocky_rock' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"rock"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"beach_ww_rocky"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A large outcropping of rock extends onto the beach."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'pool' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a pool"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"beach_ww_rocky"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A small pool of crystal clear water. You see your reflection - not one of your better days."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'knife' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a knife"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"waters_edge"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"It appears quite sharp."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'oar' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"an oar"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"beach_w"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A long rowboat oar; used for paddling."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'broken_oar' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a broken oar"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Broken in half, useless."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'coconut_trees' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"coconut trees"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"beach_w"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"Coconuts are delicious. But they are up too high."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'coconut' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a coconut"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A delicious coconut."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'seagull' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"seagull"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"beach"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"What a beautiful, delicious bird."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'dead_seagull' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dead seagull"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Your stomach rumbles loudly."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'debris' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"random debris"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"beach"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"Assorted debris from the wreck. Nothing useful at the moment."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'seashell' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a seashell"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"waters_edge"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"Reminds you of picking up seashells as a child."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'stone' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a stone"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"One of the stones from the strange pile."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'pile_stones' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a pile of stones"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"beach_ee"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A pile of perhaps 100 smooth, rounded stones."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'shadow_bear' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"huge black bear"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"beach_ww_cave"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'ships_wheel' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"the ship's wheel"` }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"The ship's wheel. You must have never even let go - your grand-daddy would be so proud."`
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"waters_edge"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'bottle' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a bottle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"A beautiful blue frosted glass bottle that looks as if it's been tossed on the waves for years."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'bottle_message' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a message"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"It reads: \\"Trapped on an island - send help.\\""'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'msg_bottle' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a bottle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"beach_w"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"A beautiful blue frosted glass bottle that looks as if it's been tossed on the waves for years.  There is a message inside."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// chest' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'chest' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a locked chest"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"beach_e"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"Massive solid oak chest (locked). Perhaps you could smash it open?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'open_chest' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"an oak chest"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Massive solid oak chest. (open)"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'chest_key' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a key"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A small, brass skeleton key."' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'comment', raw: '// under the water' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'gold_coins' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"gold coins"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A small handful of gold coins."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'matchbook' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a matchbook"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A small book of matches."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'love_letters' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"love letters"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"Poetry and love letters to the Captain's old girlfriend."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// wood' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'driftwood' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"driftwood"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"beach_ww"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"Sunbleached and rough, been drifting a while."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'chopped_driftwood' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chopped driftwood"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A pile of chopped driftwood."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'chopped_oak' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chopped oak"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A pile of chopped oak."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'chopped_darkwood' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chopped darkwood"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"A pile of chopped darkwood."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'signal_fire' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"signal fire"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A huge blaze, it should be possible to see the smoke for miles."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// treasure' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'ident', raw: 'treasure_treasure' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"treasure"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffs_e_cave_rear"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"So much treasure, you half expect to find a dragon lurking around the corner."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n  ' }
{ type: 'ident', raw: 'treasure_chests' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chests"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffs_e_cave_rear"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"There are far too many to count."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'treasure_crown' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a crown"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffs_e_cave_rear"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Fit for a king, or at least a duke."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'wearable' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"true"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'treasure_gems' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"gems"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffs_e_cave_rear"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"So many gems..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'treasure_metals' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"metals"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffs_e_cave_rear"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'conspicuous' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Gold, silver, moonstone..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// jungle' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'boulder' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"boulder"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffs_e_clearing"' }
{ type: 'whitespace', raw: ' \n    ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"It's massive.  Looking closer you notice that rough and uneven steps carved into the boulder lead downwards."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'wolf_statue' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: '  ' }
{ type: 'string', raw: '"statue"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffs_e_clearing"' }
{ type: 'whitespace', raw: ' \n    ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"In the middle of the clearing is a statue of a massive wolf, every bit as tall as you.  Strangely, it appears to be missing its eyes."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'wolf_statue2' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: '  ' }
{ type: 'string', raw: '"wolf statue"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'noun' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"statue"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"In the middle of the clearing is a statue of a massive wolf, every bit as tall as you.  Strangely, it appears to be missing its eyes."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'wolf_statue3' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: '  ' }
{ type: 'string', raw: '"wolf statue"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'noun' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"statue"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"In the middle of the clearing is a statue of a massive wolf, every bit as tall as you. Its eyes are a dull gold color."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'crumbled_statue' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: '  ' }
{ type: 'string', raw: '"crumbled statue"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'noun' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"statue"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"The crumbled remains of the statue litter the clearing."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'circle_stones' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: '  ' }
{ type: 'string', raw: '"circle of stones"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"Two dozen large stones each the size of your head form a circle around the statue."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffs_e_clearing"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// sunken ship' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'spyglass' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a spyglass"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"ship_crowsnest"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"A spyglass, good for looking long distances."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'captains_logbook' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"captain's log"` }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"ship_captains"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"This huge tome is where the Captain logged the missions."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'candle' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a candle{candle_lit_desc}"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"ship_captains"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"Just an ordinary candle, smells like honey."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'charts' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"nautical charts"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"ship_captains"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"For now, scrap paper. Perhaps useful if you ever get off this island."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'book' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a book"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"ship_captains"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Moby Dick"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'moby_book' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Moby Dick (book)"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Moby Dick"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'noun' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"book"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'axe' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"an axe"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"shipwreck"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Good for chopping up wood, you suppose."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'mast' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'scenery' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"mast"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'at' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"shipwreck"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"The Crows Nest is up there."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// shady grove' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'acorn' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'object' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"an acorn"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'msg' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Looks like an acorn. Smells like an acorn."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// flashbacks' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'connections' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'from' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'direction' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'to' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openArray', raw: '[' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'washedashore' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'placeholder' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'waters_edge' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'beach' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'waters_edge' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'south' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'shipwreck' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// dream intro' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'dream_ship' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dream_ship_placeholder' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'dream_ship' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'south' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dream_ship_placeholder' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'dream_ship' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'down' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dream_ship_placeholder' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'dream_ship' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'up' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dream_ship_placeholder' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// shipwreck' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'shipwreck' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'up' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'ship_crowsnest' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'shipwreck' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'down' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'ship_captains' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// beach' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'beach_ww' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'beach_ww_rocky' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'beach_ww_rocky' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'down' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'beach_ww_cave' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'beach' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'jungle_edge' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'beach' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'beach_w' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'beach' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'east' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'beach_e' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'beach_e' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'east' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'beach_ee' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'beach_w' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'beach_ww' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// village' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'lowlands' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'enter' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'village_s' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'village_square' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'village_n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'village_square' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'east' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'village_e' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'village_square' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'south' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'village_s' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'village_square' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'village_w' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'village_n' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'village_hut' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// jungle' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'jungle_edge' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'jungle_entrance' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'jungle_entrance' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'jungle_w' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'jungle_w' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'jungle_ww' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'jungle_entrance' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'jungle_e' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'jungle_e' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'jungle_ne' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'jungle_ne' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'east' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'jungle_ee' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'jungle_ne' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'jungle_n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'jungle_n' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'jungle_nw' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'jungle_nw' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'south' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'jungle_exit' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// lost jungle' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'lost_jungle' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'lost_jungle_w' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'lost_jungle' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'east' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'lost_jungle_e' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'lost_jungle' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'south' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'lost_jungle_s' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'lost_jungle' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'lost_jungle_n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'quiet_grove' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'south' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'jungle_ww' }
{ type: 'whitespace', raw: ' \n    ' }
{ type: 'ident', raw: 'south_of_grove' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'north' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'burnt_grove' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'jungle_exit' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'lowlands' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'jungle_ee' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'east' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'cliffs_e' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'lowlands' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'sloping_hills' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'sloping_hills' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'western_heights' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'cliffs_e' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'south' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'cliffs_e_clearing' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'cliffside_east' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'up' }
{ type: 'comma', raw: ',' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'cliffs_e_clearing' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// vines leading into the cliffside      ' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'cliffs_e_vine_top' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'west' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'cliffside_east' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'cliffs_e_vine_top' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'down' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'cliffs_e_vine_m' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'cliffs_e_vine_m' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'down' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'cliffs_e_vine_b' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'cliffs_e_vine_b' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'enter' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'cliffs_e_cave_entrance' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'cliffs_e_cave_entrance' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'down' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'cliffs_e_cave_rear' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// western heights flashback' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'western_heights_dream' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'east' }
{ type: 'comma', raw: ',' }
{ type: 'ident', raw: 'western_heights_dream_e' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeArray', raw: ']' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'zones' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'village_zone' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'zone' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'locations' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openArray', raw: '[' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'village_square' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'village_n' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'village_s' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'village_e' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'village_w' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'village_hut' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeArray', raw: ']' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'heights_zone' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'zone' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'locations' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openArray', raw: '[' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'western_heights' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'cliffs_e' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'cliffs_e_clearing' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeArray', raw: ']' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'beach_zone' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'zone' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'locations' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openArray', raw: '[' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'beach' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'beach_e' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'beach_ee' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'beach_w' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'beach_ww' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'waters_edge' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeArray', raw: ']' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'jungle_zone' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'zone' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'locations' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openArray', raw: '[' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'jungle_entrance' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'jungle_w' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'jungle_ww' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'jungle_e' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'jungle_ee' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'jungle_ne' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'jungle_n' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'jungle_nw' }
{ type: 'comma', raw: ',' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'jungle_exit' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeArray', raw: ']' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'barriers' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'ident', raw: 'access_to_groves' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'block_path' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'from' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"jungle_ww"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'to' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"quiet_grove"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'block_when_not' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'has_visited_grove' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'show_blocked_exit' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'false' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'ident', raw: 'east_cave_light' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'block_path' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'from' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'cliffs_e_cave_entrance' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'to' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'cliffs_e_cave_rear' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'block_when_not' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'is_candle_lit' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'show_blocked_exit' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'true' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'message' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"It's too dark to proceed any further without a light source."`
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'ident', raw: 'hidden_cliff' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'block_path' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '     ' }
{ type: 'ident', raw: 'from' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'cliffs_e_clearing' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '     ' }
{ type: 'ident', raw: 'to' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'cliffside_east' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '     ' }
{ type: 'ident', raw: 'block_when_not' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'has_seen_cliff_steps' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '     ' }
{ type: 'ident', raw: 'show_blocked_exit' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'false' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   \n   ' }
{ type: 'ident', raw: 'hidden_vines' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'block_path' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'from' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'cliffside_east' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'to' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'cliffs_e_vine_top' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'block_when' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'always' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'show_blocked_exit' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'false' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'ident', raw: 'swim_to_ship' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'block_path' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'from' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'waters_edge' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'to' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'shipwreck' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'block_when_not' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'knows_to_swim' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'show_blocked_exit' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'false' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '// map' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//         VVV  J  -  J  -  J - J - E' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//          V   |           |       |' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//  W - . - . - J   Grove   J       E' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//                  !       |' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//                  J - J - J ' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//                          |' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//                  B - B - B - B - B' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//                          |' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '//                        Wreck ' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '// J = Jungle' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '// B = Beach' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '// W = Western Heights' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '// E = Eastern Cliffs' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '// V = Village' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"sentence_rewriting"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'inputs' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'greaterThan', raw: '>' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '2' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"This game requires only two word inputs."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"help -"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"help"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// HELP FOR USE *' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cheat map"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\s        VVV  J  -  J  -  J - J - E"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\s         V   |           |       |"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\s W - . - . - J           J       E"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\s                         |"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\s                 J - J - J "' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\s                         |"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\s                 B - B - B - B - B"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\s                         |"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\s                       Wreck "' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\sJ = Jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\sB = Beach"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\sW = Western Heights"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\sE = Eastern Cliffs"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^\\sV = Village"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"use *"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Objects may not be \\"used\\". Please try a different verb/noun."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"For example, you might try:\\n"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"- <unlock chest<6>> instead of <use key<6>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"- <light candle<6>> instead of <use match<6>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"- <spy north<6>> instead of <use spyglass<6>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look around"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"Looking 'around' doesn't work.\\nInstead, try just <look<6>> or <look object<6>>."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// TUTORIAL' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tutorial off"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_false' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tutorial_on"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'has_set_initial_thirst' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_set_initial_thirst"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"thirst"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"75"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: '    \n    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Tutorial turned off."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tutorial on"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tutorial_on"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Tutorial turned on."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// VILLAGE' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"village_zone"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look hut; look huts"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The huts appear to be made of a mixtures of straw, mud, and stone."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"village_n"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{
  type: 'comment',
  raw: '//:print "The hut before you is larger than the rest, but otherwise similar.";'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"knock huts"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"No one is home."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// CANDLE' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"candle"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"light candle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"matchbook"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You light the candle."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"is_candle_lit"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Light it with what? You have no matches."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"blow candle; extinguish candle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_candle_lit' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You blow the candle out."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_false' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"is_candle_lit"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"Why? It's not lit."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// manual aliases' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// TODO: fix with real aliases?' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"gold_coins"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get gold"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'get' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"gold_coins"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look gold"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"gold_coins"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// LOVE LETTERS' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"love_letters"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"read letters; read poetry"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You grab a letter and read:"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^Brandy,"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pause' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"1000"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"^c^you're a fine girl,"` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pause' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"1000"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^what a good wife you would be,"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pause' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"1000"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"^c^your eyes could steal this sailor from the sea,"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pause' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"1000"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^but my life,"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pause' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"1000"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^my lover,"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pause' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"1000"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^my lady..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pause' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"1000"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^...is the sea."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pause' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"1000"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"\\nYou blush and decide to read no more.\\nYou never knew the Captain was such a lady's man."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// SPYGLASS' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"spyglass"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// western heights are handled elsewhere' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"cliffs_e"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'or', raw: '||' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"cliffs_e_clearing"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"spy north; spy east; spy ocean"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Ocean as far as the eye can see."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"spy south; spy west"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"You can't, the view is blocked by jungle."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"spy _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You'll too low to spy much here, try again from a greater height."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// MATCHBOOK' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"matchbook"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"light match"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The match burns out almost as quickly as you light it."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// ACORN' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"acorn"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"plant acorn"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"You somehow feel this isn't the time."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// SIGNAL FIRE' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"western_heights"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"place wood"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'drop' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"light fire; set fire; start fire; make fire; build fire; set fire; burn wood"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"wood_count"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"chopped_driftwood"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"wood_count"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"1"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"chopped_oak"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"wood_count"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"1"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"chopped_darkwood"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"wood_count"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"1"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"oar"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"wood_count"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"1"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"broken_oar"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"wood_count"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"1"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'wood_count' }
{ type: 'whitespace', raw: ' ' }
{ type: 'lessThan', raw: '<' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '2' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'wood_count' }
{ type: 'whitespace', raw: ' ' }
{ type: 'equality', raw: '==' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '0' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"And burn what? The ashes?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"For a good sized fire you'll need at least two bundles of wood."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"love_letters"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"charts"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"moby_book"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: '  \n        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You'll need some sort of paper to get the fire started."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"matchbook"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You need matches or some way to ignite the fire."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"chopped_driftwood"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chopped_driftwood"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"chopped_oak"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chopped_oak"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"chopped_darkwood"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chopped_darkwood"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"oar"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"oar"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"broken_oar"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"broken_oar"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"signal_fire"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"love_letters"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"love_letters"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"charts"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"charts"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"moby_book"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"moby_book"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      \n      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Signal Fire"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"matchbook"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"light fire; set fire; start fire; make fire"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Why would you do that here?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// MOBY DICK' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"book"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'or', raw: '||' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"moby_book"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"read book"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Great idea."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You'll put that on your list; just as soon as you get off this island."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Bookworm"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look book"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'swap' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o1' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"book"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o2' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"moby_book"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// THE TOME' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"tome"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get tome"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You cannot.  Some magic ties it to this place."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"read tome; open tome"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"is_reading"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'while' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_reading' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"^n^<Elder's Hut - reading<5>>"` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You sit down on the bed and slowly thumb thru the pages."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add_choice' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a final stand"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"I depart now to face the wizard with what little courage and magics I possess."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"...I fear both shall be insufficient."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add_choice' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"the wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The wolf is as old as time; protector of our people, guardian of the island and sacred grove."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add_choice' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"the wizard"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"This dark figure has held many names and his tales would fill many books."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The wizard tricked the wolf, gouged its eyes (stealing its powers), and then placed it into a dark, dreamless slumber."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add_choice' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a sacred grove"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"There stands a wise, sacred tree in the center of the island that we worship."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Surely the way to the grove will remain elusive to the wizard. It must."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add_choice' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"my people"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"I do not know what has become of my people."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"I fear I will never know."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add_choice' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"a hero foretold"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"All of this was long ago foretold... also that one day a hero would come - to right the old wrongs."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Seek the wolf... and perhaps then the tree would offer help..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add_choice' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"stop (I'm done reading)"` }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' \n            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_false' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"is_reading"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'choose' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<a few stand out:<#666>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<The wolf matches your stare until you look away.<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//:match "ask wolf" {' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//   :print "What would you ask it?";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"talk wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You prepare your best friendly animal voice."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"\\"Hey there wolfy boy. Let's be friends.\\""`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<The wolf just stares at you without understanding.<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"pet wolf; hug wolf; touch wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"It doesn't look like it's desiring your affection at the moment."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// WOLF STATUS - COMES TO LIFE' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf_statue"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'or', raw: '||' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf_statue2"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'or', raw: '||' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf_statue3"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '// we need to alias wolf -> status before the wolf has arrived just to be nice'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf_statue"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf_statue"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf_statue2"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf_statue2"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf_statue3"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf_statue3"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"touch statue; pet wolf; touch wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The stone is smooth, yet also somehow... lifelike...?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"...as if you're feeling real fur, petting an actual wolf."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf_statue"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'or', raw: '||' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf_statue2"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look statue"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf_statue"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'swap' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o1' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf_statue"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o2' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"wolf_statue2"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"insert eyes; place eyes; add eyes; put eyes; fill sockets; complete statue"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"red_marble"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"blue_marble"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The stone eyes snap into place; their colors fading to a dull gold."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<You imagine you feel powerful energies swirling about you.<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"The statue appears to be tensing it's muscles."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Suddenly the statue explodes into a cloud of dust and rubble, throwing you backwards..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"...from inside the cloud two bright, <golden<#fc3>> eyes stare out at you..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf_statue"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf_statue2"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf_statue3"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"crumbled_statue"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'comment', raw: '// crumbled statue' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'target' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffs_e_clearing"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"blue_marble"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"red_marble"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"is_wolf_awake"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_seen_wolf"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          \n        ' }
{ type: 'comment', raw: '// we have either, but not both' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"red_marble"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'or', raw: '||' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"blue_marble"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<You imagine you hear a howl in the distance.<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You slowly insert your single marble, but it seems to do nothing... so you remove it."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Perhaps you need a pair?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look eyes"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The statue has no eyes, only empty sockets.  One socket is pale blue, the other a dark shade of red."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// THE SEAGULL' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"dead_seagull"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"eat bird; cook bird; roast bird"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You tear into the small, but delicious meal."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Perseverance"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dead_seagull"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"seagull"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"kill bird; attack bird"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You imagine dinner, but first you'd have to catch it..."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get bird"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"First you'd need to catch it..."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"eat bird; cook bird; roast bird"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"Yum, but first you'd have to catch it..."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"catch bird"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'failure' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The seagull flies further away and looks back at you."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You imagine it laughing, daring you to chase it."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chase bird; run bird"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You chase the seagull in circles..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'failure' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"...until finally you collapse from exhaustion."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"How could you get the jump on this darn seagull?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"jump bird; pounce bird"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You wait until it seems distracted then jump..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'failure' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"...landing flat on your face in the sand."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Is this gull impossible to surprise?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"surprise bird"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You really wish you knew how."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"In a fair fight you could knock it out with a quick one-two punch."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"hit bird; punch bird; box bird"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You swing..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'failure' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"...and a miss. Perhaps throw something at it?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"throw knife; toss knife"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 's1' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'or', raw: '||' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 's1' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You throw "' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'd' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 's1' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" at the seagull..."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'store_random' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tmp_int"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{
  type: 'comment',
  raw: '//:print {( tmp_int + "  " + kill_chance )};'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'kill_chance' }
{ type: 'whitespace', raw: ' ' }
{ type: 'lessThan', raw: '<' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'tmp_int' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_worn' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"medallion"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"kill_chance"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"10"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"kill_chance"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"5"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'append' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"...and miss. "' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'failure' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'cycle' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'key' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"knife_misses"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'predictable_order' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'skip_interval' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"But it was so close!"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Surely next time."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Never give up, never surrender."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You give yourself a pep talk."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You should have tried harder for your boyscout hunting badge."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Grrr!"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Ungh!"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Darn!"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You retrieve your knife from the sand."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"The seagull is no longer amused."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"...and your blade flies true."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'success' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'swap' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o1' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"seagull"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o2' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"dead_seagull"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"throw *; toss *"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'comment', raw: '//:print {( s1())};' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 's1' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'or', raw: '||' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 's1' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You throw "' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'd' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 's1' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" at the seagull."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"The seagull looks amused."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 's1' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'drop' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// BARRIERS' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"jungle_edge"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'thirst' }
{ type: 'whitespace', raw: ' ' }
{ type: 'greaterThan', raw: '>' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '50' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"north -"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You're dying of thirst.\\nYou really should look for water before venturing deeper inland."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// DELICIOUS COCONUTS' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// TODO: improve crack/open coconut' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"coconut_trees"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"climb tree"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"No way, the coconuts are up way too high. There must be another way."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"eat coconut"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"coconut"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"If only... they are up so high in the trees beyond your grasp."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"shake tree; shake trees; wiggle tree; wiggle trees"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You give it a good shake..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_exists' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"coconut"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"... and nothing."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"coconut"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You've already shaken the coconut from the tree!"`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' \n      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'success' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"A coconut falls from the tree."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"coconut"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"coconut"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"crack coconut; split coconut; smash coconut; break coconut; open coconut"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Your grand-daddy never taught ya to crack open a coconut."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You could just cut into it with your trusty knife."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"knife"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"...but where oh where is your trusty knife?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"stab coconut"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"knife"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Geez!  You want to eat it, not kill it!"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Stab it with what?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"squeeze coconut"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You squeeze the coconut until you're blue in the face."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"eat coconut; cut coconut; slice cococut; pry coconut; knife coconut"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"knife"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You cut into the coconut with your knife.\\nDelicious."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"hunger"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"coconut"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You're less hungry, but still thirsty. Need agua."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cut coconut; slice coconut; pry coconut"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"knife"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Great idea, if only you had a knife!"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Where oh where is your trusty knife?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"eat coconut"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"knife"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You need some way to get inside the coconut."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// THINGS YOU CANNOT HAVE' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get wheel"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ships_wheel"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"It's far too large to just carry around.\\nBesides, what would you need it for?"`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"push wheel; pull wheel; drag wheel; move wheel; roll wheel"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"That seems like a lot of work. Why? You can't imagine what you would need it for."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"driftwood"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"break wood; cut wood"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"If only you had a tool for that..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get wood; get driftwood"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"It's too large to carry as it is.\\nYou'd first need to break it into smaller pieces."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// CHOPPING UP WOOD' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"axe"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chop wheel; split wheel; axe wheel"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ships_wheel"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You shed a tear as you chop."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ships_wheel"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chopped_darkwood"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chop chest; split chest; axe chest"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"chest"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"That might damage it's contents! Perhaps open it first?"`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"open_chest"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You chop the chest into a neat pile of wood."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"open_chest"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chopped_oak"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chop wood; split wood; axe wood"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"driftwood"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"driftwood"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"chopped_driftwood"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You chop the wood into smaller pieces."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// THE LOCKED CHEST' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"open_chest"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lock chest; close chest"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Why bother?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' \n  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"chest"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' \n  ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"open chest"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"It's locked."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"unlock chest"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"chest_key"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"You'll need the key."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You insert the key.  It turns hesistantly, with a final loud click as the mechanism unlocks."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"love_letters"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"gold_coins"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"matchbook"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"blue_marble"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'swap' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o1' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"chest"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o2' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"open_chest"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"hit chest; whack chest; break chest; smash chest"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"oar"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'cycle' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'key' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"hit_chest"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'predictable_order' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"true"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'skip_interval' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'max_loops' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"1"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You give it a good hard whack with the oar.\\nNothing. But perhaps you didn't swing hard enough?"`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You swing harder.\\nThat's it, it looks like perhaps it's giving."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"Third time's the charm?\\nNope."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"The oar cracks in two."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'increment' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"oar_hit_chest_count"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'oar_hit_chest_count' }
{ type: 'whitespace', raw: ' ' }
{ type: 'greaterThan', raw: '>' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '3' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'swap' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o1' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"oar"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o2' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"broken_oar"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'drop' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"broken_oar"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"broken_oar"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Again? Seriously?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You hit it as hard as you can.\\nYour hand hurts."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   \n  ' }
{ type: 'comment', raw: '// FOLLOW THE WOLF' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// is_at("jungle_ee")' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"follow wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"cliffs_e_clearing"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"Follow it where? It's just sitting there."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<With one last look at you, the wolf plunges into the jungle.<13>>\\n You rush after and are hopefully lost in only minutes."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lost_jungle_counter"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'value' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lost_jungle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// LOST IN JUNGLE' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"lost_jungle"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look wolf; follow wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The wolf is just too fast, it knows the jungle."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"You've lost it's trail."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"north -; south -; east -; west -"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'increment' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lost_jungle_counter"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'cycle' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'key' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lost_events"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'predictable_order' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"true"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'skip_interval' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You are so very lost."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Every tree looks the same."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Wait, that Y shaped tree looks familiar."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Nope, just your imagination."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Fear starts to nibble at the corners of your mind."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'lost_jungle_counter' }
{ type: 'greaterThan', raw: '>' }
{ type: 'number', raw: '5' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"quiet_grove"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// QUIET GROVE / ANCIENT TREE' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"quiet_grove"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"talk tree; speak tree"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You have a feeling it's already listening.\\nWhat would you <ask<6>> of it?"`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"touch tree"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You feel briefly feel connected with a life force impossible to describe or imagine."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"It's too much, and you jerk your hand away."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask tree"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Ask it what?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Try <ask (subject)<6>> such as <ask weather<6>>."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'cycle' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'key' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"woods_events"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'predictable_order' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'skip_interval' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Wind whistles thru the branches."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Leaves rustle softly."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"A gentle breeze; the branches dance."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"The leaves whisper softly."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Branches click and rattle in the wind."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask life"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<fourty two<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask wisdom; ask patience; ask truth"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<much good.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask fire; ask earth; ask wind; ask water"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<elemental. power.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask love"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<magic. deep.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask altar"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<tragic. necessary.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: '  \n      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask acorn"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<help. plant.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask plant"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<new life. good.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask help"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<help.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"A small acorn falls to the ground."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"acorn"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask flowers"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<for others<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask island"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<here<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask treasure; ask gold; ask money"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<greed. sad.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask wolf; ask dragon"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<old ones<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask stranger"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<evil one. many guises.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask wizard"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<evil one<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask people"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<wizard slaves<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask ship; ask shipwreck"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<bring hero<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask age"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<long. ago. time.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask name; ask who"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<many names.<14>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"ask _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"... silence ..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"take flowers; pick flowers; get flowers"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<The wolf growls as you reach towards a flower.<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You reconsider."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"south -"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"acorn"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You imagine you see a dark figure out of the corner of your eye..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"south_of_grove"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"inv _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'inventory' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '// buffs' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_worn' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"medallion"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'append' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"buffs: "' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<luck<12>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// THE MEDALLION' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"medallion"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wear medallion"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'wear' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"medallion"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You shiver, but suddenly feel quite a bit luckier."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// JUST A SHADOW' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"shadow_bear"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"look bear; touch bear; talk bear; attack bear; hit bear; stab bear"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Nope, just a shadow."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"shadow_bear"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// POOL OF WATER' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"pool"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"bottle"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get water; fill bottle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You seem to have lost the cork, oops."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"msg_bottle"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get water; fill bottle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"The bottle already has something in it."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"swim -; swim pool"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You wish.  If only the pool was a bit larger..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"drink water; drink pool; drink _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"thirst"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You didn't know water could taste this good."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'has_dreamed_of_storm' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add_choice' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dream again"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_false' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_dreamed_of_storm"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add_choice' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"no thanks, just the water"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'choose' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You recall your memories of the storm..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'has_dreamed_of_storm' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Refreshed, you close your eyes for just a brief moment..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"And soon you're fast asleep..."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dream_of_storm"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: "// CAPTAIN'S LOG" }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"captains_logbook"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"read logbook"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'comment', raw: '// alias: log' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Last entry:"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"I worry we were deceived - that we will never find this dreaded island. Worse, I fear what might be waiting for us if we do."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// PILE OF STONES' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"pile_stones"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x stone"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"stone"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"You examine one stone.  It's a rock."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"count stones"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You slowly and deliberately count each stone. There are exactly {number_of_stones}."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"OCD"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get stones"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"No way you're going to carry them all."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get stone"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'has_not_created' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"stone"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"number_of_stones"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"-1"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You pocket one of the stones."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pocket' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"stone"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// MESSAGE IN A BOTTLE' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"bottle"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"bottle_message"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"read message; look message"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'examine' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Message In a Bottle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"msg_bottle"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"throw bottle; toss bottle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You throw the bottle far out to sea."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"msg_bottle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"read bottle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"It has no label to read. There is a message inside."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//:if (tutorial_on) {' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{
  type: 'comment',
  raw: '//  :tutorial "Did you perhaps mean <read message<6>>?";'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'comment', raw: '//}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"smash bottle; break bottle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Why so violent? Did you consider just opening it?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"read message; look message"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"It's still sealed inside the bottle. You'd first need to open the bottle."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get message; open bottle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You open the bottle and take out the message."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'swap' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o1' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"msg_bottle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'o2' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"bottle"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"bottle"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'pocket' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"bottle_message"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"bottle_message"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '//:match "look message; read message; read note; open bottle" {'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//  :if (verb_is("open")) {' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '//    :print "You open the bottle and read the note.";'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//  }' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//  ' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '//  //:print "It reads:\\n  \\"Trapped on an island. Send help.\\"";'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//  :examine "bottle_message";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '//  :set_string var="award_name" text="Message In a Bottle";'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//  :gosub "give_award";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//  :press_any_key;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"seashell"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"listen seashell"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You hear ocean waves."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// help' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"help directions; help dir"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"<north<12>> and <south<12>> are opposites, as are <east<12>> and <west<12>>.  return to <water's edge<12>> using <south<6>>."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<__<0>>N\\rW + E\\n<__<0>>S"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"stat _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'thirst' }
{ type: 'whitespace', raw: ' ' }
{ type: 'greaterThan', raw: '>' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '50' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"- you are thirsty"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'hunger' }
{ type: 'whitespace', raw: ' ' }
{ type: 'greaterThan', raw: '>' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '50' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"- you are hungry"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// AUTO-LOOK' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'comment', raw: '// in the jungle' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'index_of' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'outer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'pointer', raw: '->' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'd' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'inner' }
{ type: 'whitespace', raw: ' ' }
{ type: 'pointer', raw: '->' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"jungle"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'notEquality', raw: '!=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'minus', raw: '-' }
{ type: 'number', raw: '1' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look jungle"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A dense jungle, of the more tropical variety."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: '   \n    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x trees"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Huge. Tropical."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// zones' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"beach_zone"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"drink water; get water"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"What water?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You know better thank to drink salt water."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dig sand"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You dig for some time, but discover nothing but more sand."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look beach"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Such beautiful white sand."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look sand"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Your average beautiful white tropical island sand, and plenty of it."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"achievements -; achieve -; awards -"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"achievements"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wearing -"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wearing"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"clear -"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"goals - "' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"goals"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   \n  ' }
{ type: 'comment', raw: '// humor' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lol -"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You laugh at loud, then wonder if you are starting to lose your mind."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"touch yourself; touch myself"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Perhaps later?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"pinch arm; pinch myself"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"Nope, doesn't seem like you're dreaming."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"the end"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"A bit premature?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// CATCH ALL' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"push *; pull *; drag *; move *; roll *"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'disambiguate_s1' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"present"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 's1' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Perhaps you could, but why would you want to?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"I'm not sure what you're referring to."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"touch _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'disambiguate_s1' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"present"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:print {( s1() )}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 's1' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You feel nothing unexpected."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"I'm not sure what you're referring to."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"eat _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"Are you sure that's edible?"` }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"about _;credits _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"credits"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// mend, fix, repair' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   \n\n\n   ' }
{ type: 'comment', raw: '// fun utils' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"stats -"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"stats"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"whoami -"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' \n    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"You're asking me? ... ..."` }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Know Thyself"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// TUTORIAL' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'tutorial_on' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"beach"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'tut_look_sand' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"south _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"I'd suggest you finish the tutorial before exploring further. It'll take only a few minutes."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"Otherwise, type <tutorial off<6>> and I'll get our of your way."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'tutorial_progress' }
{ type: 'lessThan', raw: '<' }
{ type: 'number', raw: '4' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"north _; east _; west _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"I'd suggest you finish the tutorial before exploring further. It'll take only a few minutes."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"Otherwise, type <tutorial off<6>> and I'll get our of your way."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'forwardSlash', raw: '/' }
{ type: 'times', raw: '*' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'end' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'of' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'global' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'on_command' }
{ type: 'whitespace', raw: ' ' }
{ type: 'times', raw: '*' }
{ type: 'forwardSlash', raw: '/' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '// on_describe {' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '// :print "sand in mouth";' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '// }' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '// on_pre_describe {' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '// }' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '######################################' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '#  On Tick                       #' }
{ type: 'newline', raw: '\n' }
{ type: 'comment', raw: '######################################' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'on_tick' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"auto_music"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// DEBUG' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_debug' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:print {( "linger" + linger() )};' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// more prominence to wearing' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"x _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_worn' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 's1' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"washedashore"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"(you are wearing)"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// booleans' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_seen_wolf"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"quiet_grove"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_visited_grove"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// somethings wrong in the grove' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"south_of_grove"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"acorn"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'comment', raw: '// wolf is nowhere' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'cutsceen_grove_destroy_seen' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<Smoke rises from the north.<13>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<You hear yelling and a loud commotion to the north.<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_just_entered' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"quiet_grove"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"acorn"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cutsceen_grove_destroy"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// ****************' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//  chase the wolf' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"cliffs_e_clearing"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'linger' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'greaterOrEqual', raw: '>=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '3' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<The wolf looks at you, then darts off to the north<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'target' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"cliffs_e"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"cliffs_e"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<The wolf looks back at you, then lopes off to the west<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wolf"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'target' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"jungle_ee"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"wolf"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"jungle_ee"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'linger' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'greaterOrEqual', raw: '>=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '3' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<The wolf gazes off into the jungle then back, as if asking you to FOLLOW.<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<The wolf gazes off into the jungle then back, as if asking you to follow.<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lost_jungle_desc"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'text' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Wind whistles thru the branches."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// TODO: fix jungle text?????' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_just_entered' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'cycle' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'key' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lost"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'predictable_order' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'skip_interval' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lost_jungle_desc"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'text' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The jungle here is a tangle of confusing branches and paths."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lost_jungle_desc"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'text' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lost_jungle_desc"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'text' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lost_jungle_desc"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'text' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lost_jungle_desc"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'text' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// NPC behavior (handled in on tick)' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"quiet_grove"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look flowers"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'mask' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"<The wolf's gaze follows you.<13>>"` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// TUTORIAL' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'tutorial_on' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// tiny help here and there' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"coconut_trees"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look trees"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Perhaps you could <shake<6>> the trees? IE: <shake trees<6>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// tutorial, step 0 ' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"washedashore"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"north _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'tutorial_progress' }
{ type: 'whitespace', raw: ' ' }
{ type: 'equality', raw: '==' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '0' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'increment' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tutorial_progress"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"Yikes - that normally works. You're in worse shape than I thought.\\nTry entering '<crawl north<6>>' instead."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '// we use thirst to know to trigger the "first arrival"'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '//:if (is_at "washedashore" && thirst ==0 ) {'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '//   :set_integer var = "thirst"  value = "50" ;'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '//   :tutorial "You really should get out of that cold water.\\nType <north<6>> or <n<6>> to move north.";'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '//:if (is_at "beach" && is_just_entered()) {'
}
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{
  type: 'comment',
  raw: `// :tutorial "Glad you're still with us.\\nType <help directions<6>> to learn about directions.";`
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// they figured it out' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"beach"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'tutorial_progress' }
{ type: 'whitespace', raw: ' ' }
{ type: 'equality', raw: '==' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '0' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'increment' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tutorial_progress"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'tutorial_progress' }
{ type: 'equality', raw: '==' }
{ type: 'number', raw: '0' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You really should get out of that cold water."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"Type '<go north<6>>', '<north<6>>', or even just '<n<6>>' to move north."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"beach"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'tutorial_progress' }
{ type: 'equality', raw: '==' }
{ type: 'number', raw: '1' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look debris"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tut_look_debris"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look gull"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tut_look_gull"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"eat gull"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tut_eat_gull"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"catch gull"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' \n          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tut_catch_gull"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Exactly, I think you have the idea!"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look -"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tut_look_around"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'increment' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tutorial_progress"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'tut_look_debris' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"Thank goodness you're still with us!"` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"First, let's have a look around. Try <look debris<6>>."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: '        \n        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'tut_look_gull' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Try <look seagull<6>>."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' \n        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: '  ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'tut_eat_gull' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"Sometimes actions won't be obvious, or might only be hinted at: such as 'delicious' seagull."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Perhaps we could try to <eat gull<6>>."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'tut_catch_gull' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"And perhaps that would suggest <catch bird<6>>..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'tut_look_around' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Type just <look<6>> by itself to redescribe your current location."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{
  type: 'comment',
  raw: '// :tutorial "Not everything you can look at will be listed - remember those blue walls?\\nType <look walls<6>>.";'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// beach part 2 (look sand, go south)' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'tutorial_progress' }
{ type: 'equality', raw: '==' }
{ type: 'number', raw: '2' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"south _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' \n        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"waters_edge"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'increment' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tutorial_progress"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"beach"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'tutorial_progress' }
{ type: 'equality', raw: '==' }
{ type: 'number', raw: '2' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look sand"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tut_look_sand"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      \n        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'tut_look_sand' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You can often look at things not in the 'seen' list as well.\\nPay attention when reading room descriptions."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"For example, try <look sand<6>>."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"North is the opposite of south, as east is the opposite of west.\\nType <south<6>> to return to where you washed ashore."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '//:print {("tutorial progress " + tutorial_progress)};'
}
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '// tutorial 3, waters edge, using items' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"waters_edge"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'tutorial_progress' }
{ type: 'equality', raw: '==' }
{ type: 'number', raw: '3' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Using <look<6>> by itself repeats the location description.\\nTry <look knife<6>> or <look seashell<6>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look knife"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_beside' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"knife"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A knife seems useful.  \\nType <get knife<6>> to pick it up."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look seashell; listen seashell"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"seashell"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Go ahead and pick it up with <take seashell<6>>."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get knife"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"seashell"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"Great! Now what about that seashell?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"Awesome, now try <i<6>> or <inventory<6>> to see what you're carrying."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"get shell"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"knife"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A knife seems even more useful (than a seashell).  \\nType <get knife<6>> to pick it up."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '            ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"Awesome, now try <i<6>> or <inventory<6>> to see what you're carrying."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"drop seashell"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"I believe you have the hang of it!"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"That shipwreck to the south sure looks intriguing. (<look wreck<6>>)"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look shipwreck; look south"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"I'll be much quieter from this point, good luck!"`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Type <HELP<6>> at any time to see help with the basics."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'increment' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tutorial_progress"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'comment', raw: '// to 4' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"inventory _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Notice that some items can also be worn, such as pants."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_carried' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"seashell"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '              ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"But do you really need a shell? Set it down again with <drop seashell<6>>."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"waters_edge"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'is_just_entered' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'tutorial_progress' }
{ type: 'equality', raw: '==' }
{ type: 'number', raw: '3' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Since we just went south, going from here north would return us to the beach. First lets have a <look<6>> around.\\n"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    \n  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// TUTORIAL' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '//' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// [x] movement' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// [x] get/drop' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// [x] looking' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'comment', raw: '// [x] two word parser' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"waters_edge"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"beach"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"washedashore"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'has_set_initial_thirst' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_set_initial_thirst"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"thirst"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"75"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: ' \n\n   ' }
{ type: 'comment', raw: '// dream & intro' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'dream_intro' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'increment' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dream_counter"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'decrement' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"until_wave"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dream_ship"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'and', raw: '&&' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'dream_counter' }
{ type: 'whitespace', raw: ' ' }
{ type: 'greaterThan', raw: '>' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '2' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'comment', raw: '// :print_graphic "storm";' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'cycle' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'key' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wave"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'predictable_order' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'skip_interval' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"0"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'max_loops' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"1"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"You feel ill."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"You imagine you hear the terrifying roar of a leviathan."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"The frigid wind whips through your hair."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"In the distance you hear crashing waves."' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"The ship violently rocks to and fro."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"If there was ever a time for prayer..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"The ship lurches from side to side, almost as if possessed."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"The ship groans and strains, trying to avoid being torn apart."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"You are afraid."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"If there were ever a time for speeches, it's now."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"You fear you may never see your beloved Lucy again."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"You hear a fellow crewmate cry out in the night."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: `"You really wish you'd used the restroom earlier."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"You imagine the ship being torn apart."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"Several cats run madly across the deck meowing fearfully."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"You see your life flashing before your eyes."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_string"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{
  type: 'string',
  raw: '"You regret the life choices that brought you here."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'tmp_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'equality', raw: '==' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '""' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^... {until_wave} ..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^... {until_wave} ...\\n^c^{tmp_string}"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'until_wave' }
{ type: 'whitespace', raw: ' ' }
{ type: 'lessOrEqual', raw: '<=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '0' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"until_wave"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'value' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"255"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_false' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dream_intro"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"At the last moment you close your eyes and attempt to find your happy place - hoping to drown out the terrible noise of the boat splitting in two and the terrified screams of the crew."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Sadly, you fail, but mercifully the darkness soon claims you..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'comment', raw: '// :failure ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'beep' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'millis' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"200"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'pitch' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'beep' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'millis' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"200"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'pitch' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"-3"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'beep' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'millis' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"200"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'pitch' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"-8"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'beep' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'millis' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"500"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'pitch' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"-15"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dream_of_storm_end"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '         ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"track_input_stats"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"update_status_effects"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wiz end"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cutsceen_grove_destroy"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cheat wiz_cutscene"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cutsceen_grove_destroy"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cheat win"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"win_game"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' \n    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cheat plant"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cutsceen_plant_acorn"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"success _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'success' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_present' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"burnt_tree"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"look tree; touch tree"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cutsceen_plant_acorn"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'comment', raw: '// end of global on_tick // ' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'subroutines' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'goals' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"GOALS"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'dream_of_storm' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dream_intro"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"dream_counter"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"-1"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"until_wave"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"26"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_theme' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dream_theme"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    \n    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"d_stranger"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'target' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"dream_ship"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dream_ship"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'dream_of_storm_end' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_false' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"dream_intro"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_dreamed_of_storm"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"dream_counter"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"-1"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_integer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"until_wave"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"26"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_theme' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"main_theme"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"main_music_theme"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: '  \n    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"beach_ww_rocky"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'main_music_theme' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'play_music' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"music_fantasy_overture"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cutsceen_signal_fire' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'cutsceen_signal_fire_seen' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cutsceen_signal_fire_seen"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Smoke Signal"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: '  \n    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cutsceen_plant_acorn' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'cutsceen_plant_acorn_seen' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cutsceen_plant_acorn_seen"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<You suddenly remember the acorn.<13>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Kneeling down you dig a small hole and gently plant the acorn."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "4000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Was this somehow all part of a grand master plan?"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "4000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Were you an ally of the grove or an unwitting pawn of the wizard..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "4000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"...both?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "1000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"...neither?"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"You worry you may never know."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "1000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"award_name"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"Kings or Pawns"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"give_award"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"broken_staff"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:return;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cutsceen_wizard_staff' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'cutsceen_wizard_staff_seen' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cutsceen_wizard_staff_seen"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You notice the wizard's bloodwood staff laying nearby, broken in half."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<A thought enters unbidden into your mind.<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<Might the staff be reassembled?<15>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You imagine the good you could accomplish with such powers..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "4000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You whistle idly as you collect both halves of the staff."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "4000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You depart the burnt grove confident of rescue and oddly certain of long life."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"...and an acorn slowly begins to grow..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'cutsceen_grove_destroy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'cutsceen_grove_destroy_seen' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'done' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"cutsceen_grove_destroy_seen"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '// give us a chance to switch the grove music to action'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"auto_music"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^---"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"A dark robed figure stands before the ancient tree."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "2000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<The wizard laughs maniacally.<13>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"❝A pet human?  How very foolish. "' }
{ type: 'semicolon', raw: ';' }
{ type: 'whitespace', raw: '  \n    ' }
{ type: 'comment', raw: '//:pause millis = "3000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"There was once a time you did not make such mistakes."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "3000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"The grove, so long hidden from my sight."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "3000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Millennia I have slept, waited, and dreamt of this day."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "3000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"I had only to follow your pitiful pet.❞"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:pause millis = "3000" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<The wizard raises his bloodwood staff.<13>>"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"“What began long ago.  Hodie est complevit!”"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<The wizard recites words of power.<13>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Blood red fire rains down, engulfing the massive tree. The ground shakes and you are thrown backwards into the jungle."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The last thing you remember is a vicious growling, as if all the beasts of the earth cried out with a singular voice..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"...and then it all fades to black..."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"south_of_grove"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'redescribe' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'achievements' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^<✜ ACHIEVEMENTS ✜<13>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    \n    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'collection_count' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"awards"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'equality', raw: '==' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '0' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'append' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"No achievements yet."' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'return' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'collection_iterate' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"awards"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'append' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'item' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '". "' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"\\n("' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'collection_count' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"awards"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" / "' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'max_achievements' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '")"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"\\n"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'stats' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^<✜ STATISTICS ✜<13>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^- You typed "' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'total_inputs' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" words across "' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'turns' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" turns."' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^- You used the <LOOK<6>> verb "' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'total_looks' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" times."' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^n^- You explored "' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'total_rooms' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" different map locations."' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '   ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"\\n"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'endgame_credits' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"credits"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'credits' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^<✜ CREDITS ✜<13>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"^n^<Story & Game Design:<#fc3>> Josh Goebel"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"^n^<Testing:<#fc3>> Rhiannon Stanton, Messick Family, Dee Cooke, <Tristin Grizel Dean<#369>>[https://grizel.itch.io/]"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"^n^<Engine:<#fc3>> Adventuron 1.0 (Beta 68j), by Chris Ainsley"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"^n^<Fonts:<#fc3>> Antic Slab from <Google Fonts<#369>>[https://fonts.google.com/specimen/Antic+Slab]"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"^n^<Music:<#fc3>> Shane Iver of <Silverman Sound Studios<#369>>[https://www.silvermansound.com]"'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"^n^<Songs:<#fc3>> Fantasy Overture, Helena's Lament, Janus Turning, Underglow, Zen Garden, I Domine"`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"^c^^n^© 2022 Josh Goebel.\\nNot for commercial use. Do not redistribute."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'the_end' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"The wizard steps forward, raises his bloodwood staff..."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"...then bows low. The rest of the crew follows his lead."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"\\n\\"<We each played our parts...\\n...but you were the star.<#fff>>\\"\\n\\n"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^<✜ THE END ✜<13>>"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'win_game' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'win_game' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"^c^<CONGRATS! YOU HAVE WON!<14>>\\n"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"achievements"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"stats"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"endgame_credits"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    \n    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'gosub' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"post_game"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'post_game' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'goto' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"reception"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'help' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"- type '<LOOK<6>>' or '<LOOK<6>> <thing<#da5>>' to examine clues."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"- type '<I<6>>' or '<INVENTORY<6>>' to see what you hold (and wear)."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"- type '<GET<6>> <thing<#da5>>' to pick up an item."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"- type '<DROP<6>> <thing<#da5>>' to drop or place an item."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"- type '<ACHIEVE<6>>' to see your game achievements."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: `//:print "- type '<STATS<6>>' to see game stats (moves, etc).";`
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"- type <N<6>>, <S<6>>, <E<6>>, <W<6>>, <UP<6>>, <DOWN<6>>, etc to move."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//:if (tutorial_on == false) {' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: `//  :print "- type '<TUTORIAL ON<6>>' to turn tutorial hints on.";`
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'tutorial_on' }
{ type: 'whitespace', raw: ' ' }
{ type: 'equality', raw: '==' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'true' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '          ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"- type '<TUTORIAL OFF<6>>' to turn the tutorial off."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"- type '<SOUND<6>>' for sound settings."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"- type '<LOAD<6>>' or '<SAVE<6>>' to load or save a game."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: `"- type '<QUIT<6>>' to restart a game."` }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  \n  ' }
{ type: 'ident', raw: 'ask_tutorial' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"\\n\\n"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"Hello, I'm your friendly tutorial. I'll help you learn how to play if you're new to text adventure games."`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: `"You can shut me up at any time with <TUTORIAL OFF<6>>, so if you're on the fence, perhaps let me try to help?"`
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'ask_bool' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tutorial_on"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'question' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: 'Enable the learning tutorial? <(recommended)<10>>'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'yes_answer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'yes' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'no_answer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'no' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'tutorial_on' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"You are skipping the tutorial. A few final things:"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"- this game uses a simple verb/noun parser."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"- commands are never more than two words: <NORTH<6>>, <EAT FOOD<6>>, etc."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"- during the game you can type <HELP<6>> at any time for basic help."'
}
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'ask_fantasy_violence' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"\\n\\n"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"This game may include fantasy violence (both direct and implied)."'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'ask_bool' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"fantasy_violence_ok"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'question' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'Do you still wish to continue?' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'yes_answer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'yes' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'no_answer' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'no' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'fantasy_violence_ok' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'clear_screen' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'tutorial' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"Understood.  I hope you find another game to play, good luck!"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'lose_game' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'title_screen' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"<$${__game_name}<#fc3>>\\nv$${__game_version}"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"by Josh Goebel"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"© 2022"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"^r^(little yellow wiggly\\n means press enter)"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'press_any_key' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'bootup' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"your_earring"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'target' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"inventory"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'create' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"your_pants"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'target' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"inventory"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'wear' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"your_earring"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'wear' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"your_pants"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'update_status_effects' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"status"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'text' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '""' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_false' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_status"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'thirst' }
{ type: 'whitespace', raw: ' ' }
{ type: 'greaterThan', raw: '>' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '50' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_status"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"status"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'ident', raw: 'status' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<thirsty<7>>"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'hunger' }
{ type: 'whitespace', raw: ' ' }
{ type: 'greaterThan', raw: '>' }
{ type: 'whitespace', raw: ' ' }
{ type: 'number', raw: '50' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'has_status' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"status"' }
{ type: 'whitespace', raw: '  ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'status' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '" "' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_true' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"has_status"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_string' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"status"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'status' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<hungry<7>>"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'track_input_stats' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"total_inputs"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"2"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'match' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"examine _"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"total_looks"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"1"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_first_entered' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'add' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'var' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"total_rooms"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"1"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '// borrowed from Sentient Beings' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'auto_music' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_sound_muted' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'return' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"dream_ship"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'play_music' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"music_janus_turning"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"western_heights_dream"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'play_music' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"music_underglow"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"quiet_grove"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'negation', raw: '!' }
{ type: 'ident', raw: 'cutsceen_grove_destroy_seen' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'play_music' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"music_zen_garden"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'play_music' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"music_i_domine"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_at' }
{ type: 'openParen', raw: '(' }
{ type: 'string', raw: '"burnt_grove"' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'play_music' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"music_helenas_lament"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'play_music' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"music_fantasy_overture"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'update_volume' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_sound_muted' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_music_vol' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'volume' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"0"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'sound_volume' }
{ type: 'whitespace', raw: ' ' }
{ type: 'equality', raw: '==' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"lowest"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_music_vol' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'volume' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"3"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'sound_volume' }
{ type: 'whitespace', raw: ' ' }
{ type: 'equality', raw: '==' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"low"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_music_vol' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'volume' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"7"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'sound_volume' }
{ type: 'whitespace', raw: ' ' }
{ type: 'equality', raw: '==' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"normal"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_music_vol' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'volume' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"16"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'sound_volume' }
{ type: 'whitespace', raw: ' ' }
{ type: 'equality', raw: '==' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"high"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_music_vol' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'volume' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"40"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'else_if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'sound_volume' }
{ type: 'whitespace', raw: ' ' }
{ type: 'equality', raw: '==' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"highest"' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'set_music_vol' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'volume' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"100"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'give_award' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'collection_contains' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'collection' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"awards"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'value' }
{ type: 'whitespace', raw: ' ' }
{ type: 'pointer', raw: '->' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'award_name' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'return' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'collection_push' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'collection' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"awards"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'content' }
{ type: 'whitespace', raw: ' ' }
{ type: 'pointer', raw: '->' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'award_name' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"<Achievement<2>>: {award_name}"' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'success' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'sentence_rewriting' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{
  type: 'comment',
  raw: '//:if (noun1_is("wolf") && is_present("crumbled_statue")) {'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//  :set_sentence "$1 statue" ;' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'comment', raw: '//}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'wearing' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'subroutine' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'append' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wearing:\\s"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'look_inside' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'of' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"inventory"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'extract_the' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"description"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'store_results_in' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"tmp_list"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'show_unworn' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'add_worn_suffix_if_applicable' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"false"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print_list_verbose' }
{ type: 'whitespace', raw: '  ' }
{ type: 'string', raw: '"tmp_list"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'lead_in' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '""' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'look_inside' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'of' }
{ type: 'whitespace', raw: '               ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'inventory' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'extract_the' }
{ type: 'whitespace', raw: '      ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'id' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'store_results_in' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'tmp_list' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'print' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"wearing: "' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'collection_iterate' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"tmp_list"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'if' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'is_worn' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'item' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '        ' }
{ type: 'colon', raw: ':' }
{ type: 'ident', raw: 'append' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'openParen', raw: '(' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"- "' }
{ type: 'whitespace', raw: ' ' }
{ type: 'plus', raw: '+' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'd' }
{ type: 'openParen', raw: '(' }
{ type: 'ident', raw: 'item' }
{ type: 'openParen', raw: '(' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeParen', raw: ')' }
{ type: 'whitespace', raw: ' ' }
{ type: 'closeParen', raw: ')' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'assets' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'sounds' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'music_breathe' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'sound_sample' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"http://joshgoebel.com/adventure/breathe.mp3"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'music_faded_dream' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'sound_sample' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"http://joshgoebel.com/adventure/faded-dream.mp3"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'music_fantasy_overture' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'sound_sample' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"http://joshgoebel.com/adventure/fantasy-overture.mp3"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'music_helenas_lament' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'sound_sample' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"http://joshgoebel.com/adventure/helenas-lament.mp3"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'music_i_domine' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'sound_sample' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"http://joshgoebel.com/adventure/i-domine.mp3"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'music_janus_turning' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'sound_sample' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"http://joshgoebel.com/adventure/janus-turning.mp3"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'music_sailing_away' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'sound_sample' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"http://joshgoebel.com/adventure/sailing-away.mp3"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'music_underglow' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'sound_sample' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"http://joshgoebel.com/adventure/underglow.mp3"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'music_zen_garden' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'sound_sample' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"http://joshgoebel.com/adventure/zen-garden.mp3"'
}
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'graphics' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'loading_graphic' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'png' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"http://joshgoebel.com/adventure/island.png"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'scaling_mode' }
{ type: 'assignment', raw: '=' }
{ type: 'string', raw: '"regular"' }
{ type: 'whitespace', raw: ' ' }
{ type: 'semicolon', raw: ';' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'fonts' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'ident', raw: 'userfont_antic' }
{ type: 'whitespace', raw: ' ' }
{ type: 'colon', raw: ':' }
{ type: 'whitespace', raw: ' ' }
{ type: 'ident', raw: 'ttf' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{
  type: 'comment',
  raw: '// Extracted from https://fonts.googleapis.com/css2?family=Montserrat&display=swap'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'filepath' }
{ type: 'whitespace', raw: '     ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{
  type: 'string',
  raw: '"https://fonts.gstatic.com/s/anticslab/v15/bWt97fPFfRzkCa9Jlp6IacVcXExq9Qs.woff2"'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'snap_vert' }
{ type: 'whitespace', raw: '    ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"false"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{
  type: 'comment',
  raw: '// This is the balance between average vertical pixels and average horz pixels for'
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{
  type: 'comment',
  raw: "// use in mapping the font's sizing to the 'columns' property in the theme settings."
}
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'horz_pixels' }
{ type: 'whitespace', raw: '  ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"8"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '      ' }
{ type: 'ident', raw: 'vert_pixels' }
{ type: 'whitespace', raw: '  ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: '"15"' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '    ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'ident', raw: 'game_settings' }
{ type: 'whitespace', raw: ' ' }
{ type: 'openBracket', raw: '{' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'inventory_items_limit_var' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'inventory_limit' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'auto_pluralize_nouns' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'true' }
{ type: 'newline', raw: '\n' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'ident', raw: 'precache_strategy' }
{ type: 'whitespace', raw: ' ' }
{ type: 'assignment', raw: '=' }
{ type: 'whitespace', raw: ' ' }
{ type: 'string', raw: 'precache_all' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//auto_ask_sound_permissions = false' }
{ type: 'newline', raw: '\n' }
{ type: 'whitespace', raw: '  ' }
{ type: 'comment', raw: '//scan_entity_ids_for_vocab_items = false' }
{ type: 'newline', raw: '\n' }
{ type: 'closeBracket', raw: '}' }
open bracket for context:  game_information
open bracket for context:  on_startup
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  strings
previous sig string
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig closeBracket
safely ignoring ;
open bracket for context:  booleans
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  integers
previous sig string
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  collections
previous sig ident
semicolon!
open bracket for context:  themes
open bracket for context:  colors
open bracket for context:  lister_exits
open bracket for context:  lister_objects
open bracket for context:  lister_inventory
open bracket for context:  system_messages
open bracket for context:  colors
open bracket for context:  screen
open bracket for context:  theme_settings
open bracket for context:  on_describe
previous sig string
semicolon!
open bracket for context:  locations
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
open bracket for context:  on_command
previous sig ident
semicolon!
previous sig closeBracket
safely ignoring ;
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
open bracket for context:  on_tick
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
seeking backwards
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
open bracket for context:  on_command
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig closeBracket
safely ignoring ;
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
seeking backwards
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_tick
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_tick
previous sig string
semicolon!
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
open bracket for context:  on_tick
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_tick
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig closeBracket
safely ignoring ;
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
open bracket for context:  objects
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
open bracket for context:  connections
SKIPPING MULTI_ARRAY
SKIPPING MULTI_ARRAY
open bracket for context:  zones
open bracket for context:  barriers
open bracket for context:  on_command
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig closeBracket
safely ignoring ;
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
seeking backwards
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
seeking backwards
previous sig closeBracket
safely ignoring ;
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
seeking backwards
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
seeking backwards
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
seeking backwards
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
seeking backwards
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig string
semicolon!
previous sig string
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
previous sig ident
semicolon!
unexpected token:  { type: 'forwardSlash', raw: '/' }
{
  _items: [],
  _id: '_root',
  __game_name: 'Forgotten Island',
  __game_version: '"0.9.0"',
  start_at: { type: 'string', raw: 'washedashore' },
  game_type: { type: 'string', raw: 'verb_noun' },
  game_information: {
    _items: [],
    _id: 'game_information',
    _inline: false,
    game_name: { type: 'string', raw: '${{__game_name}}' },
    game_shortname: { type: 'string', raw: 'ForgotIsland' },
    written_by: { type: 'string', raw: 'Josh Goebel' },
    uuid: { type: 'string', raw: 'cf74ec25-337d-454f-9a0c-273d4c6bb604' },
    year_of_release: { type: 'string', raw: '2022' },
    game_version: { type: 'string', raw: '$${__game_version}' },
    copyright_message: {
      type: 'string',
      raw: 'Copyright (C) 2022 Josh Goebel. Not for commercial use. Do not redistribute.'
    },
    short_synopsis: {
      type: 'string',
      raw: 'Discover the secrets of a forgotten island'
    }
  },
  loading_screen: { type: 'string', raw: 'loading_graphic' },
  on_startup: {
    _items: [
      {
        _id: null,
        _type: 'set_theme',
        _value: { type: 'string', raw: '"main_theme"' },
        _inline: true,
        _items: []
      },
      {
        _id: null,
        _type: 'set_false',
        _value: { type: 'string', raw: '"tutorial_on"' },
        _inline: true,
        _items: []
      },
      {
        _id: null,
        _type: 'gosub',
        _value: { type: 'string', raw: '"ask_tutorial"' },
        _inline: true,
        _items: []
      },
      {
        _id: null,
        _type: 'gosub',
        _value: { type: 'string', raw: '"bootup"' },
        _inline: true,
        _items: []
      },
      {
        _id: null,
        _type: 'gosub',
        _value: { type: 'string', raw: '"auto_music"' },
        _inline: true,
        _items: []
      },
      {
        _id: null,
        _type: 'pocket',
        _value: { type: 'string', raw: '"medallion"' },
        _inline: true,
        _items: []
      }
    ],
    _id: 'on_startup',
    _inline: false
  },
  strings: {
    _items: [
      {
        _id: 'str_arg1',
        _type: 'string',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'tmp_string',
        _type: 'string',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'status',
        _type: 'string',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'blank',
        _type: 'string',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'last_soundtrack',
        _type: 'string',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'soundtrack',
        _type: 'string',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'sound_volume',
        _type: 'string',
        _value: { type: 'string', raw: '"normal"' },
        _inline: true,
        _items: [],
        scope: { type: 'string', raw: '"survivor"' }
      },
      {
        _id: 'award_name',
        _type: 'string',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'prompt',
        _type: 'string',
        _value: { type: 'string', raw: '"[]: "' },
        _inline: true,
        _items: []
      },
      {
        _id: 'flower_color',
        _type: 'string',
        _value: { type: 'string', raw: '"yellow"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'lost_jungle_desc',
        _type: 'string',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'header_text',
        _type: 'dynamic_string',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '"<"' },
          { type: 'whitespace', raw: ' ' },
          { type: 'plus', raw: '+' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ident', raw: 'h' },
          { type: 'openParen', raw: '(' },
          { type: 'closeParen', raw: ')' },
          { type: 'whitespace', raw: ' ' },
          { type: 'plus', raw: '+' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '"<5>>"' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: []
      },
      {
        _id: 'status_prompt',
        _type: 'dynamic_string',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '"[]: "' },
          { type: 'whitespace', raw: ' ' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: []
      },
      {
        _id: 'reminds_of_eye',
        _type: 'dynamic_string',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '" with dark veins running thru it"' },
          { type: 'whitespace', raw: ' ' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: []
      },
      {
        _id: 'if_only_had_spyglass',
        _type: 'dynamic_string',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'whitespace', raw: ' ' },
          { type: 'negation', raw: '!' },
          { type: 'ident', raw: 'is_carried' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"spyglass"' },
          { type: 'closeParen', raw: ')' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ternary', raw: '?' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '" If only you had a spyglass."' },
          { type: 'whitespace', raw: ' ' },
          { type: 'colon', raw: ':' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '""' },
          { type: 'whitespace', raw: '  ' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: []
      },
      {
        _id: 'jungle_room_description',
        _type: 'dynamic_string',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'whitespace', raw: ' ' },
          {
            type: 'string',
            raw: `"You're deep in the jungle.  Huge tropical trees surround you on all sides. It's easy to get lost here."`
          },
          { type: 'whitespace', raw: ' ' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: []
      },
      {
        _id: 'beach_cave_description',
        _type: 'dynamic_string',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ident', raw: 'is_candle_lit' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ternary', raw: '?' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '"There is nothing here."' },
          { type: 'whitespace', raw: ' ' },
          { type: 'colon', raw: ':' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: `"It's too dark to see much."` },
          { type: 'whitespace', raw: ' ' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: []
      },
      {
        _id: 'candle_lit_desc',
        _type: 'dynamic_string',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ident', raw: 'is_candle_lit' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ternary', raw: '?' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '" (lit)"' },
          { type: 'whitespace', raw: ' ' },
          { type: 'colon', raw: ':' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '""' },
          { type: 'whitespace', raw: ' ' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: []
      }
    ],
    _id: 'strings',
    _inline: false
  },
  booleans: {
    _items: [
      {
        _id: 'tmp_bool',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'tutorial_on',
        _type: 'boolean',
        _value: { type: 'string', raw: '"true"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'is_debug',
        _type: 'boolean',
        _value: { type: 'string', raw: '"true"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'always',
        _type: 'boolean',
        _value: { type: 'string', raw: '"true"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'never',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'has_status',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'fantasy_violence_ok',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'has_set_initial_thirst',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'is_sound_muted',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'is_wolf_awake',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'is_candle_lit',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'is_flashback',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'is_reading',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'has_won_game',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'has_seen_cliff_steps',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'has_seen_wolf',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'has_visited_grove',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'has_dreamed_of_storm',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'has_seen_altar_flashback',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'dream_intro',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'knows_to_swim',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'tut_look_debris',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'tut_look_gull',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'tut_eat_gull',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'tut_catch_gull',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'tut_look_around',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'tut_look_sand',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'cutsceen_grove_destroy_seen',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'cutsceen_plant_acorn_seen',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'cutsceen_signal_fire_seen',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'cutsceen_wizard_staff_seen',
        _type: 'boolean',
        _value: { type: 'string', raw: '"false"' },
        _inline: true,
        _items: []
      }
    ],
    _id: 'booleans',
    _inline: false
  },
  integers: {
    _items: [
      {
        _id: 'tmp_int',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'max_achievements',
        _type: 'integer',
        _value: { type: 'string', raw: '"17"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'inventory_limit',
        _type: 'integer',
        _value: { type: 'string', raw: '"15"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'number_of_stones',
        _type: 'integer',
        _value: { type: 'string', raw: '"89"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'until_wave',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'dream_counter',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'thirst',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'hunger',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'lost_jungle_counter',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'oar_hit_chest_count',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'tutorial_progress',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'wood_count',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'kill_chance',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'total_inputs',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'total_looks',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      },
      {
        _id: 'total_rooms',
        _type: 'integer',
        _value: { type: 'string', raw: '"0"' },
        _inline: true,
        _items: []
      }
    ],
    _id: 'integers',
    _inline: false
  },
  collections: {
    _items: [
      {
        _id: 'tmp_list',
        _type: 'list',
        _value: null,
        _inline: true,
        _items: []
      },
      {
        _id: 'awards',
        _type: 'set',
        _value: null,
        _inline: false,
        _items: [],
        items: {
          _array: true,
          _tokens: [
            { type: 'openArray', raw: '[' },
            { type: 'closeArray', raw: ']' }
          ]
        }
      }
    ],
    _id: 'collections',
    _inline: false
  },
  themes: {
    _items: [
      {
        _id: 'dream_theme',
        _type: 'theme',
        _value: null,
        _inline: false,
        _items: [],
        extends: { type: 'string', raw: 'main_theme' },
        colors: {
          _items: [],
          _id: 'colors',
          _inline: false,
          paper: { type: 'string', raw: '"#333"' }
        }
      },
      {
        _id: 'main_theme',
        _type: 'theme',
        _value: null,
        _inline: false,
        _items: [],
        lister_exits: {
          _items: [],
          _id: 'lister_exits',
          _inline: false,
          exit_list_capitalization: { type: 'string', raw: 'lower' },
          experimental_enable_direction_arrows: { type: 'string', raw: 'false' },
          is_list_enter: { type: 'string', raw: 'true' }
        },
        lister_objects: {
          _items: [],
          _id: 'lister_objects',
          _inline: false,
          experimental_auto_group_singular_objects: { type: 'string', raw: 'true' },
          list_type: { type: 'string', raw: '"single_line_no_article"' }
        },
        lister_inventory: {
          _items: [],
          _id: 'lister_inventory',
          _inline: false,
          experimental_auto_group_singular_objects: { type: 'string', raw: 'true' }
        },
        system_messages: {
          _items: [],
          _id: 'system_messages',
          _inline: false,
          tutorial_message_prefix: { type: 'string', raw: '""' },
          question_prompt_char: { type: 'string', raw: '"choice?"' },
          object_list_end_text: { type: 'string', raw: '""' },
          exit_list_end_text: { type: 'string', raw: '""' },
          inventory_list_header: { type: 'string', raw: '"CARRYING: "' },
          inventory_list_empty: { type: 'string', raw: '"<NOTHING<10>>"' },
          prompt_expression: { type: 'string', raw: 'status_prompt' },
          prior_prompt: {
            type: 'string',
            raw: '"{ has_status ? `({status})` : blank }"'
          },
          object_list_header: { type: 'string', raw: '"<seen:<#777>> "' },
          object_list_separator: { type: 'string', raw: '" , "' },
          exit_list_header_concise: { type: 'string', raw: '"<exits: <#777>>"' },
          exit_list_sep_verbose: { type: 'string', raw: '", "' }
        },
        colors: {
          _items: [],
          _id: 'colors',
          _inline: false,
          status_bar_paper: { type: 'string', raw: '#36c' },
          pen: { type: 'string', raw: '7' },
          exit_list_item_pen: { type: 'string', raw: '#393' },
          exit_list_punctuation_pen: { type: 'string', raw: '#fff' },
          tutorial_pen: { type: 'string', raw: '4' },
          border: { type: 'string', raw: '0' },
          header_pen: { type: 'string', raw: '5' }
        },
        screen: {
          _items: [],
          _id: 'screen',
          _inline: false,
          status_bar_padding_bottom: { type: 'string', raw: '1' },
          status_bar_padding_top: { type: 'string', raw: '1' }
        },
        theme_settings: {
          _items: [],
          _id: 'theme_settings',
          _inline: false,
          textbox_capitalization: { type: 'string', raw: 'original' },
          font: { type: 'string', raw: 'userfont_antic' },
          columns: { type: 'string', raw: '65' },
          redescribe: { type: 'string', raw: 'auto_beta' },
          enable_prior_prompt: { type: 'string', raw: 'true' },
          success_jingle: { type: 'string', raw: 'on' },
          failure_jingle: { type: 'string', raw: 'on' },
          layout: { type: 'string', raw: 'P* "header_text"- G D- X O ' },
          keyboard_click: { type: 'string', raw: 'off' },
          default_delay: { type: 'string', raw: '0' },
          parser_delay: { type: 'string', raw: '300' }
        }
      }
    ],
    _id: 'themes',
    _inline: false
  },
  on_describe: {
    _items: [
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_at' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"reception"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'tutorial',
            _value: {
              type: 'string',
              raw: '"When ready to depart, type <THE END<6>> at any time to finish."'
            },
            _inline: true,
            _items: []
          }
        ]
      }
    ],
    _id: 'on_describe',
    _inline: false
  },
  locations: {
    _items: [
      {
        _id: 'placeholder',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"dummy location for fake connections"'
        },
        _inline: true,
        _items: []
      },
      {
        _id: 'reception',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"The small cast of this grand narrative stands before you."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Meet and Greet"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'if',
              _value: [
                { type: 'openParen', raw: '(' },
                { type: 'ident', raw: 'is_present' },
                { type: 'openParen', raw: '(' },
                { type: 'string', raw: '"r_stranger"' },
                { type: 'closeParen', raw: ')' },
                { type: 'closeParen', raw: ')' }
              ],
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'match',
                  _value: {
                    type: 'string',
                    raw: '"talk stranger; look stranger"'
                  },
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'if',
                      _value: [
                        { type: 'openParen', raw: '(' },
                        { type: 'ident', raw: 'verb_is' },
                        { type: 'openParen', raw: '(' },
                        { type: 'string', raw: '"talk"' },
                        { type: 'closeParen', raw: ')' },
                        { type: 'closeParen', raw: ')' }
                      ],
                      _inline: false,
                      _items: [
                        {
                          _id: null,
                          _type: 'append',
                          _value: {
                            type: 'string',
                            raw: '"You approach the stranger."'
                          },
                          _inline: true,
                          _items: []
                        }
                      ]
                    },
                    {
                      _id: null,
                      _type: 'examine',
                      _value: null,
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: `"<As you stare, smoke rises; then a sudden bright flash... and he's gone.<13>>"`
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'press_any_key',
                      _value: null,
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"...in his place stands the wizard."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'swap',
                      _value: null,
                      _inline: true,
                      _items: [],
                      o1: { type: 'string', raw: '"r_stranger"' },
                      o2: { type: 'string', raw: '"r_wizard"' }
                    }
                  ]
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"shake hand; shake hands"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You walk about shaking hands with everyone, the wolf even raises his paw for you."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"The seagull merely looks at you quizically."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"the end"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'gosub',
                  _value: { type: 'string', raw: '"the_end"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"kiss wolf"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You lean in for a kiss..."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'press_any_key',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"...the wolf happily licks your face and slobbers all over you."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"pet wolf"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You pet the wolf and rub in behind the ears affectionately."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"It whines happily then gives you a growl just for show."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"hug wolf; snuggle wolf; cuddle wolf"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"You squeeze the wolf tight.  It's fur is incredibly warm and soft."`
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You let go right as things were about to start getting awkward."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"talk wizard"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"I'm quite pleased to make your acquaintance."`
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"Sorry about my 'pitiful pet' smack down earlier, merely playing my role to the fullest, ya know how it is."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"talk firstmate"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: '"Ahoy, mate."' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"talk captain"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"It was my honor to be your captain thru the storm."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"Remember... I told ya \\"We'll be fine\\", didn't I?"`
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: '"<The captain winks.<13>>"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"ask tree"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: '"<question. done.<14>>"' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'done',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"talk tree"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"<greet you. pleased.<14>>"'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'done',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"talk wolf; talk seagull; talk ape"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'examine',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'beach',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"A beach of beautiful white sand extends along the shoreline to the east and west.  Further to the north is the jungle."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Southern Coast"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"search debris"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'examine',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'beach_w',
        _type: 'location',
        _value: { type: 'string', raw: '"A beach of beautiful white sand."' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Southern Coast"' }
      },
      {
        _id: 'beach_ww',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"A beach of beautiful white sand. There is a rocky outcropping to the north."'
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Southern Coast"' }
      },
      {
        _id: 'beach_e',
        _type: 'location',
        _value: { type: 'string', raw: '"A beach of beautiful white sand."' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Southern Coast"' }
      },
      {
        _id: 'beach_ee',
        _type: 'location',
        _value: { type: 'string', raw: '"A beach of beautiful white sand."' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Southern Coast"' }
      },
      {
        _id: 'beach_ww_rocky',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"A small crevice disappears downwards into the rock."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Rocky Outcropping"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"go crevice; enter crevice; wiggle crevice"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'goto',
                  _value: { type: 'string', raw: '"beach_ww_cave"' },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'beach_ww_cave',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"You are standing in a small cave. {beach_cave_description}"'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Small Cave"' },
        on_tick: {
          _items: [
            {
              _id: null,
              _type: 'if',
              _value: [
                { type: 'openParen', raw: '(' },
                { type: 'ident', raw: 'is_candle_lit' },
                { type: 'whitespace', raw: ' ' },
                { type: 'and', raw: '&&' },
                { type: 'whitespace', raw: ' ' },
                { type: 'ident', raw: 'is_beside' },
                { type: 'openParen', raw: '(' },
                { type: 'string', raw: '"shadow_bear"' },
                { type: 'closeParen', raw: ')' },
                { type: 'closeParen', raw: ')' }
              ],
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"As the light fills up the small room, the bear disappears; it was just a shadow."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'destroy',
                  _value: { type: 'string', raw: '"shadow_bear"' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'press_any_key',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'redescribe',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_tick',
          _inline: false
        }
      },
      {
        _id: 'waters_edge',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"You washed ashore here. Further south out to sea a half sunken shipwreck rises from the waves."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: `"Water's Edge"` },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look waves; look sea"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"The waves look a bit angry."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"x ship; x shipwreck; x south; x flag"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"A black skull and crossbones flutters in the wind. You wonder if you could swim that far."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"south _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'if',
                  _value: [
                    { type: 'openParen', raw: '(' },
                    { type: 'ident', raw: 'is_worn' },
                    { type: 'openParen', raw: '(' },
                    { type: 'string', raw: '"medallion"' },
                    { type: 'closeParen', raw: ')' },
                    { type: 'whitespace', raw: ' ' },
                    { type: 'and', raw: '&&' },
                    { type: 'whitespace', raw: ' ' },
                    { type: 'ident', raw: 'knows_to_swim' },
                    { type: 'closeParen', raw: ')' }
                  ],
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"You swim out to the ship."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'goto',
                      _value: { type: 'string', raw: '"shipwreck"' },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'press_any_key',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                },
                {
                  _id: null,
                  _type: 'else',
                  _value: null,
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: `"How? You can't exactly walk to the ship."`
                      },
                      _inline: true,
                      _items: []
                    }
                  ]
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"swim _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'if',
                  _value: [
                    { type: 'openParen', raw: '(' },
                    { type: 'ident', raw: 'is_worn' },
                    { type: 'openParen', raw: '(' },
                    { type: 'string', raw: '"medallion"' },
                    { type: 'closeParen', raw: ')' },
                    { type: 'closeParen', raw: ')' }
                  ],
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'set_true',
                      _value: { type: 'string', raw: '"knows_to_swim"' },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"You swim out to the ship."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'goto',
                      _value: { type: 'string', raw: '"shipwreck"' },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'press_any_key',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                },
                {
                  _id: null,
                  _type: 'else',
                  _value: null,
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: `"It's pretty far out.  You aren't feeling strong or lucky enough at the moment."`
                      },
                      _inline: true,
                      _items: []
                    }
                  ]
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'washedashore',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"You wake up with a mouth full of sand; your body half in, half out of the cold sea.  You have never been happier to be alive."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"The Cold Sand"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"n _; stand _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You can barely stand. Perhaps crawl?"'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'failure',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look *; examine *"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"You can't see anything from how you're laying but sand."`
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'done',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"s _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"How? Swim?  Perhaps another day."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"spit _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"You spit out some sand. You're very thirsty."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"swim _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"You aren't feeling that lucky."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"x sea"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"You're flat on your face, but it's cold."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"crawl _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You claw your way slowly out of the water and onto dry land...\\n ...then collapse exhausted."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'success',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'if',
                  _value: [
                    { type: 'openParen', raw: '(' },
                    { type: 'ident', raw: 'tutorial_on' },
                    { type: 'closeParen', raw: ')' }
                  ],
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'tutorial',
                      _value: {
                        type: 'string',
                        raw: '"Exactly! This game uses a simple parser; commands are 1 or 2 words, always. Most commands will be verb/noun pairs, such as <EAT FOOD<6>> or <ATTACK BEAR<6>>."'
                      },
                      _inline: true,
                      _items: []
                    }
                  ]
                },
                {
                  _id: null,
                  _type: 'press_any_key',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'clear_screen',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: '"Some time later..."' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'press_any_key',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'if',
                  _value: [
                    { type: 'openParen', raw: '(' },
                    { type: 'negation', raw: '!' },
                    { type: 'ident', raw: 'tutorial_on' },
                    { type: 'closeParen', raw: ')' }
                  ],
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'set_true',
                      _value: {
                        type: 'string',
                        raw: '"has_set_initial_thirst"'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'set_integer',
                      _value: null,
                      _inline: true,
                      _items: [],
                      var: { type: 'string', raw: '"thirst"' },
                      value: { type: 'string', raw: '"75"' }
                    }
                  ]
                },
                {
                  _id: null,
                  _type: 'goto',
                  _value: { type: 'string', raw: '"beach"' },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'village_square',
        _type: 'location',
        _value: {
          type: 'string',
          raw: `"The village surrounds you on all sides, but it's far too quiet - like a ghost town."`
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Village Square"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"get fruit; get fabric; look fruit; look fabric"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"It's far too old and decayed to be of any use."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"x ghost"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: '"No ghosts here."' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_string',
                  _value: null,
                  _inline: true,
                  _items: [],
                  var: { type: 'string', raw: '"award_name"' },
                  text: { type: 'string', raw: '"Ghost Busters"' }
                },
                {
                  _id: null,
                  _type: 'gosub',
                  _value: { type: 'string', raw: '"give_award"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"drop stone; drop pebble; drop rock"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You find a small pebble nearby and drop it into the well.  You hear a splash."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_string',
                  _value: null,
                  _inline: true,
                  _items: [],
                  var: { type: 'string', raw: '"award_name"' },
                  text: { type: 'string', raw: '"Wishing Well"' }
                },
                {
                  _id: null,
                  _type: 'gosub',
                  _value: { type: 'string', raw: '"give_award"' },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'village_n',
        _type: 'location',
        _value: { type: 'string', raw: '"To the north stands a large hut."' },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Village"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"go hut"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'goto',
                  _value: { type: 'string', raw: '"village_hut"' },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'village_s',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"Small huts surround both sides of the street."'
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Village"' }
      },
      {
        _id: 'village_e',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"Small huts surround both sides of the street."'
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Village"' }
      },
      {
        _id: 'village_w',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"Small huts surround both sides of the street."'
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Village"' }
      },
      {
        _id: 'village_hut',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"This hut is homey, yet spacious - larger than the others. A thick layer of dust covers everything."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: `"Village, Elder's Hut"` },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"x dust"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You swipe your finger across the top of a surface.  Yep, dusty."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"enter fireplace"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"It's small and you wouldn't fit.  You don't possess the Christmas magics."`
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_string',
                  _value: null,
                  _inline: true,
                  _items: [],
                  var: { type: 'string', raw: '"award_name"' },
                  text: { type: 'string', raw: '"Jolly Old St. Nicholas"' }
                },
                {
                  _id: null,
                  _type: 'gosub',
                  _value: { type: 'string', raw: '"give_award"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"sit bed"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"It's more comfortable than you expected."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"sleep bed"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Ok, but just a quick nap..."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: '"Zzzz..."' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'press_any_key',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'redescribe',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'jungle_edge',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"A small footpath leads north into the jungle.  To the south is the beach."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: `"Jungle's Edge"` },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"look water; drink water; get water"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"There is no water here, you'll need to find some elsewhere."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'jungle_entrance',
        _type: 'location',
        _value: { type: 'string', raw: '"{jungle_room_description}"' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Jungle"' }
      },
      {
        _id: 'jungle_w',
        _type: 'location',
        _value: { type: 'string', raw: '"{jungle_room_description}"' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Jungle"' }
      },
      {
        _id: 'south_of_grove',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"Jungle surrounds you.  To the north is the sacred grove."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Jungle, Outside Grove"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"north _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'if',
                  _value: [
                    { type: 'openParen', raw: '(' },
                    { type: 'negation', raw: '!' },
                    {
                      type: 'ident',
                      raw: 'cutsceen_grove_destroy_seen'
                    },
                    { type: 'closeParen', raw: ')' }
                  ],
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'goto',
                      _value: { type: 'string', raw: '"quiet_grove"' },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'done',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'jungle_ww',
        _type: 'location',
        _value: { type: 'string', raw: '"{jungle_room_description}"' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Jungle"' }
      },
      {
        _id: 'jungle_e',
        _type: 'location',
        _value: { type: 'string', raw: '"{jungle_room_description}"' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Jungle"' }
      },
      {
        _id: 'jungle_ee',
        _type: 'location',
        _value: { type: 'string', raw: '"{jungle_room_description}"' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Jungle"' }
      },
      {
        _id: 'jungle_ne',
        _type: 'location',
        _value: { type: 'string', raw: '"{jungle_room_description}"' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Jungle"' }
      },
      {
        _id: 'jungle_n',
        _type: 'location',
        _value: { type: 'string', raw: '"{jungle_room_description}"' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Jungle"' }
      },
      {
        _id: 'jungle_nw',
        _type: 'location',
        _value: { type: 'string', raw: '"{jungle_room_description}"' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Jungle"' }
      },
      {
        _id: 'jungle_exit',
        _type: 'location',
        _value: { type: 'string', raw: '"{jungle_room_description}"' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Jungle"' }
      },
      {
        _id: 'lowlands',
        _type: 'location',
        _value: { type: 'string', raw: '"There is a small village here."' },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Lowlands"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"go village"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'goto',
                  _value: { type: 'string', raw: '"village_s"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look village"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'examine',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'sloping_hills',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"Gently sloping hills rise up to great heights further west. You see a village further east."'
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Sloping Hills"' }
      },
      {
        _id: 'western_heights_dream_e',
        _type: 'location',
        _value: null,
        _inline: true,
        _items: []
      },
      {
        _id: 'western_heights_dream',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"A full moon hangs high above.  The wind whips at you, threatening to cast you off the cliff and into the sea."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Western Heights"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"touch altar"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Touching the altar brought you here, but it does not seem to be how you must return..."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'done',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"listen spell; listen incantation; listen words; listen _"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"You can't make out the words."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"east _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"You can't seem to physically move from this place."`
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Yet somehow you are certain you could leave at anytime, merely by closing your eyes."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"close eyes; shut eyes; blink eyes"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You close your eyes... slowly the cold wind and rain recede until there is only silence..."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'press_any_key',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_theme',
                  _value: { type: 'string', raw: '"main_theme"' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'gosub',
                  _value: { type: 'string', raw: '"main_music_theme"' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'goto',
                  _value: { type: 'string', raw: '"western_heights"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look injury"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"You're not certain of the injury, but the wolf looks like it's in pain."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"save wolf; help wolf; free wolf; unbind wolf"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"The urge to intervene is strong..."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Yet some part of you knows these events cannot be changed."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"attack wizard; fight wizard; hit wizard; stop wizard; throw knife; stab wizard; kill wizard"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"The urge to intervene is strong..."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Yet some part of you knows these events cannot be changed."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'western_heights',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"This seems to be the highest point of the entire island, allowing you to see for miles.{if_only_had_spyglass}"'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Western Heights"' },
        on_tick: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look altar"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'if',
                  _value: [
                    { type: 'openParen', raw: '(' },
                    { type: 'negation', raw: '!' },
                    { type: 'ident', raw: 'has_seen_altar_flashback' },
                    { type: 'closeParen', raw: ')' }
                  ],
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"<You have a sudden desire to touch the altar.<#9f9>>"'
                      },
                      _inline: true,
                      _items: []
                    }
                  ]
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"x view; x point"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"The highest point of the island, the view is spectacular."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'done',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look crack"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'if',
                  _value: [
                    { type: 'openParen', raw: '(' },
                    { type: 'ident', raw: 'has_not_created' },
                    { type: 'openParen', raw: '(' },
                    { type: 'string', raw: '"red_marble"' },
                    { type: 'closeParen', raw: ')' },
                    { type: 'closeParen', raw: ')' }
                  ],
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: { type: 'string', raw: '"Wait a minute..."' },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'press_any_key',
                      _value: null,
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"There is something hiding at the very bottom of the crack."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'press_any_key',
                      _value: null,
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'create',
                      _value: { type: 'string', raw: '"red_marble"' },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"<you notice:<#777>> red marble"'
                      },
                      _inline: true,
                      _items: []
                    }
                  ]
                }
              ]
            }
          ],
          _id: 'on_tick',
          _inline: false
        },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"touch altar"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You feel a strange tingling..."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'press_any_key',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"...then a sudden headache..."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'press_any_key',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_theme',
                  _value: { type: 'string', raw: '"dream_theme"' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'clear_screen',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"...and suddenly you are here, but not here."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'goto',
                  _value: { type: 'string', raw: '"western_heights_dream"' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_true',
                  _value: { type: 'string', raw: '"has_seen_altar_flashback"' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'done',
                  _value: null,
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look down"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"It looks to be a sheer cliff dropping hundreds of feet to large rocks and angry ocean below."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look south"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"A white, sandy beach lays to the south.  Further out to sea a half sunken ship sits in the waves."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look north"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"The northern part of the island appears to be dense jungle. You can barely make out movement."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'if',
              _value: [
                { type: 'openParen', raw: '(' },
                { type: 'ident', raw: 'is_carried' },
                { type: 'openParen', raw: '(' },
                { type: 'string', raw: '"spyglass"' },
                { type: 'closeParen', raw: ')' },
                { type: 'closeParen', raw: ')' }
              ],
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'match',
                  _value: { type: 'string', raw: '"spy north"' },
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"Dense jungle.  You see a large ape swinging among the trees."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'set_string',
                      _value: null,
                      _inline: true,
                      _items: [],
                      var: { type: 'string', raw: '"award_name"' },
                      text: { type: 'string', raw: '"Planet of the Apes"' }
                    },
                    {
                      _id: null,
                      _type: 'gosub',
                      _value: { type: 'string', raw: '"give_award"' },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'done',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                },
                {
                  _id: null,
                  _type: 'match',
                  _value: { type: 'string', raw: '"spy shipwreck"' },
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: `"A half-sunken pirate ship that's seen better days."`
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'done',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                },
                {
                  _id: null,
                  _type: 'match',
                  _value: { type: 'string', raw: '"spy village"' },
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"A small rural village consisting of many huts."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'done',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                },
                {
                  _id: null,
                  _type: 'match',
                  _value: { type: 'string', raw: '"spy ocean; spy sea"' },
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"Nothing but beautiful blue as far as the eye can see."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'done',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                },
                {
                  _id: null,
                  _type: 'match',
                  _value: { type: 'string', raw: '"spy down"' },
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"Angry ocean beats agaisnt huge boulders, so close you can almost taste it."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'done',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                },
                {
                  _id: null,
                  _type: 'match',
                  _value: { type: 'string', raw: '"spy _"' },
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"You spy nothing out of the ordinary."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'done',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look west"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Ocean as far as the eye can see."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look east"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"The heights slowly slope back down slowly to gentle, rolling hills."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'cliffside_east',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"A three foot wide ledge, perhaps long enough that you could lay down, perhaps not. Vines cover much of the cliff face."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Eastern Cliffs, Ledge"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"x vine; x vines"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: '"As thick as your arm."' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"swing vines; swing vine"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Are you Tarzan now? Perhaps you might climb them though."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_string',
                  _value: null,
                  _inline: true,
                  _items: [],
                  var: { type: 'string', raw: '"award_name"' },
                  text: { type: 'string', raw: '"Tarzan"' }
                },
                {
                  _id: null,
                  _type: 'gosub',
                  _value: { type: 'string', raw: '"give_award"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"go vines; climb vines; go vine; climb vines"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'goto',
                  _value: { type: 'string', raw: '"cliffs_e_vine_top"' },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'cliffs_e_vine_top',
        _type: 'location',
        _value: {
          type: 'string',
          raw: `"You cling to the vine, it's a long way down. The safety of the ledge is beside you to the west."`
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Eastern Cliffside"' }
      },
      {
        _id: 'cliffs_e_vine_m',
        _type: 'location',
        _value: {
          type: 'string',
          raw: `"You cling to the vine, it's a long way down."`
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Eastern Cliffside"' }
      },
      {
        _id: 'cliffs_e_vine_b',
        _type: 'location',
        _value: {
          type: 'string',
          raw: `"You cling to the vine, it's still a long way down. A dark crevice seems to lead directly into the cliff."`
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Eastern Cliffside"' }
      },
      {
        _id: 'cliffs_e_cave_entrance',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"The passage narrows then heads downwards into the rock. Behind you are the vines."'
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Eastern Cave"' }
      },
      {
        _id: 'cliffs_e_cave_rear',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"The room is filled with treasure.  Too many chests to count, each one bursting with gold, gems, and precious metals."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Eastern Cave"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look dragon; find dragon"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You search, but it seems there truly is no dragon standing guard."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_string',
                  _value: null,
                  _inline: true,
                  _items: [],
                  var: { type: 'string', raw: '"award_name"' },
                  text: { type: 'string', raw: '"Paranoid Much?"' }
                },
                {
                  _id: null,
                  _type: 'gosub',
                  _value: { type: 'string', raw: '"give_award"' },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        },
        on_tick: {
          _items: [
            {
              _id: null,
              _type: 'set_string',
              _value: null,
              _inline: true,
              _items: [],
              var: { type: 'string', raw: '"award_name"' },
              text: { type: 'string', raw: '"Treasure Island"' }
            },
            {
              _id: null,
              _type: 'gosub',
              _value: { type: 'string', raw: '"give_award"' },
              _inline: true,
              _items: []
            }
          ],
          _id: 'on_tick',
          _inline: false
        }
      },
      {
        _id: 'cliffs_e',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"The jungle ends abruptly with a two-hundred foot plunge to rocky shores below. There is no obvious way down."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Eastern Cliffs"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look shores"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: '"Rocky."' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"x cliff; x edge; x plunge; x down"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You approach the edge and peek.  Seems like a long ways down..."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'cliffs_e_clearing',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"You stand in a large clearing, bordered by dense jungle to the west. A huge boulder clings resolutely to the edge of the cliff."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Eastern Cliffs,  Clearing"' },
        on_tick: { _items: [], _id: 'on_tick', _inline: false },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"sit stone; sit stones"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You sit down for a moment and ponder the life choices that led you to this point..."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"push boulder"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"It's massive.  It doesn't budge."`
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'if',
                  _value: [
                    { type: 'openParen', raw: '(' },
                    { type: 'negation', raw: '!' },
                    { type: 'ident', raw: 'has_seen_cliff_steps' },
                    { type: 'closeParen', raw: ')' }
                  ],
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"Something seems a little off."'
                      },
                      _inline: true,
                      _items: []
                    }
                  ]
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"x cliff; x edge"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You approach the edge and peek.  Seems like a long ways down..."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"count stones"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: '"24."' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"x circle"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'examine',
                  _value: { type: 'string', raw: '"circle_stones"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"x boulder"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'examine',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_true',
                  _value: { type: 'string', raw: '"has_seen_cliff_steps"' },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'lost_jungle_e',
        _type: 'location',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'lost_jungle_w',
        _type: 'location',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'lost_jungle_s',
        _type: 'location',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'lost_jungle_n',
        _type: 'location',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'lost_jungle',
        _type: 'location',
        _value: { type: 'string', raw: '"{lost_jungle_desc} You are lost."' },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Deep in the Jungle"' }
      },
      {
        _id: 'quiet_grove',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"You stand in a quiet grove filled with flowers. A single massive tree stands at the center."'
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Quiet Grove"' }
      },
      {
        _id: 'burnt_grove',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"You stand in a burnt grove filled full of nothing but ashes and acrid smoke."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"Burnt Grove"' },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look staff; get staff"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'if',
                  _value: [
                    { type: 'openParen', raw: '(' },
                    { type: 'ident', raw: 'is_present' },
                    { type: 'openParen', raw: '(' },
                    { type: 'string', raw: '"broken_staff"' },
                    { type: 'closeParen', raw: ')' },
                    { type: 'closeParen', raw: ')' }
                  ],
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'gosub',
                      _value: {
                        type: 'string',
                        raw: '"cutsceen_wizard_staff"'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'gosub',
                      _value: { type: 'string', raw: '"win_game"' },
                      _inline: true,
                      _items: []
                    }
                  ]
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'dream_ship',
        _type: 'location',
        _value: {
          type: 'string',
          raw: `"You stand resolute at the helm as a wave unlike any you've ever seen rushes towards you. Your old grand-daddy told tales of waves like this - <ship killers<15>> he called them."`
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: '"The Storm"' },
        on_tick: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look stranger"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"<You've been meaning to speak to them, but never found the time.<13>>"`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            }
          ],
          _id: 'on_tick',
          _inline: false
        },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"pray _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"\\"Dear lord...\\" You whisper your fearful request to a higher power and hope someone is listening. "'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_string',
                  _value: null,
                  _inline: true,
                  _items: [],
                  var: { type: 'string', raw: '"award_name"' },
                  text: { type: 'string', raw: '"God-fearing"' }
                },
                {
                  _id: null,
                  _type: 'gosub',
                  _value: { type: 'string', raw: '"give_award"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"drop _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"You can't really drop anything in this place..."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"north _; south _; up _; east _; west _"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You dare not leave your post."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"up _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"But why in the heck would you want to be up in the air in a storm like this?"'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"down _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Retreating below deck sounds great, but you dare not leave your post."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"hit captain; punch captain"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You consider assuming command by force, but have second thoughts.  Is a mutiny truly the answer?"'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_string',
                  _value: null,
                  _inline: true,
                  _items: [],
                  var: { type: 'string', raw: '"award_name"' },
                  text: {
                    type: 'string',
                    raw: '"Bad boys, bad boys, what ya gonna do"'
                  }
                },
                {
                  _id: null,
                  _type: 'gosub',
                  _value: { type: 'string', raw: '"give_award"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"mutiny -;kill captain; attack captain"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You reach for your knife... but have second thoughts.  Is mutiny truly the answer here?"'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_string',
                  _value: null,
                  _inline: true,
                  _items: [],
                  var: { type: 'string', raw: '"award_name"' },
                  text: {
                    type: 'string',
                    raw: '"Bad boys, bad boys, what ya gonna do"'
                  }
                },
                {
                  _id: null,
                  _type: 'gosub',
                  _value: { type: 'string', raw: '"give_award"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"abandon ship"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"No, duty compells you to stay.  That's the Captain's call, not yours."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"walk plank; jump overboard; jump water; jump ship; swim _"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"Surely things aren't that bad yet?"`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look ship; look boat"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"The Drunken Revenge. She's gotten you thru thick and thin in the past - perhaps she'll pull thru yet."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"x wave; x waves; x sea; x water"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"The wave approaching must be at least as tall as four of your own vessel stacked mast to mast. A huge wall of angry water."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"piss pants; pee pants; wet pants; pee yourself; wet yourself"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"The firstmate looks at you a awkwardly."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"...but at least the warmth running down your leg briefly wards off the chill of the night air."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"give speech"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: '"You clear your throat."' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'press_any_key',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: `"\\"It's been an honor..."` },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'pause',
                  _value: null,
                  _inline: true,
                  _items: [],
                  millis: { type: 'string', raw: '"1000"' }
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: { type: 'string', raw: '"...my friends\\""' },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'pause',
                  _value: null,
                  _inline: true,
                  _items: [],
                  millis: { type: 'string', raw: '"1000"' }
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You were never one for long speeches."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'if',
              _value: [
                { type: 'openParen', raw: '(' },
                { type: 'ident', raw: 'is_present' },
                { type: 'openParen', raw: '(' },
                { type: 'string', raw: '"d_stranger"' },
                { type: 'closeParen', raw: ')' },
                { type: 'closeParen', raw: ')' }
              ],
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'match',
                  _value: {
                    type: 'string',
                    raw: '"talk stranger; speak stranger"'
                  },
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"(too far away without yelling)"'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"They stand at the railing, staring into the ocean, seemingly unbothered by the violence of the storm."'
                      },
                      _inline: true,
                      _items: []
                    }
                  ]
                },
                {
                  _id: null,
                  _type: 'match',
                  _value: {
                    type: 'string',
                    raw: '"yell stranger; scream stranger; shout stranger"'
                  },
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"You yell, casting your voice towards the stranger."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'press_any_key',
                      _value: null,
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"Slowly they turn and you see eyes..."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'pause',
                      _value: null,
                      _inline: true,
                      _items: [],
                      millis: { type: 'string', raw: '"1000"' }
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"...like staring into a deep, dark abyss with no bottom."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'press_any_key',
                      _value: null,
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"<A spider web of lightning flashes across the sky.<14>>"'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"...and when you look back the stranger is gone."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'destroy',
                      _value: { type: 'string', raw: '"d_stranger"' },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'press_any_key',
                      _value: null,
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"Your momma always told ya get a grip on that overactive imagination of yours."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'press_any_key',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"talk firstmate; speak firstmate; look firstmate"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"\\"Ain't never me seen a storm like this, oh the stories we'll tell!\\" says the first mate with a silly grin."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look helm"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'examine',
                  _value: { type: 'string', raw: '"d_wheel"' },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look deck"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You recall the beautiful, sunny days you spent swabbing that deck in the past. You should have appreciated them more."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look leviathan"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"You don't see one (yet), you just thought you heard one."`
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Could also be your overactive imagination..."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"listen _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Wind. Rain. Waves. Shouts. Meows."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look cats"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You notice several of the felines hiding under a tarp."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look tarp"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Just a tarp. Cats are hiding under it."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look nest; look crowsnest"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Up high above.  You can see it periodically when lightning flashes across the sky."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look killer"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"The only killer you see is the wave in the distance."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"kiss captain; kiss firstmate"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Is this really the right time to share your feelings?"'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"talk captain; speak captain; look captain"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"\\"Don't worry kid, we'll be fine,\\" he boasts."`
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'press_any_key',
                  _value: null,
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"Yet you see the fear in his eyes."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"turn wheel;spin wheel;steer ship;turn ship"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: `"You spin the wheel trying to alter course, but deep inside you know it won't matter."`
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"close eyes; give up; wake _"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You close your eyes and try to will yourself awake."'
                  },
                  _inline: true,
                  _items: []
                },
                {
                  _id: null,
                  _type: 'set_integer',
                  _value: null,
                  _inline: true,
                  _items: [],
                  var: { type: 'string', raw: '"until_wave"' },
                  value: { type: 'string', raw: '"1"' }
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      },
      {
        _id: 'dream_ship_placeholder',
        _type: 'location',
        _value: { type: 'string', raw: '""' },
        _inline: true,
        _items: []
      },
      {
        _id: 'shipwreck',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"The ship is half sunken, but the skull and crossbones still flies high. To the north is the beach."'
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: '"Shipwreck"' }
      },
      {
        _id: 'ship_crowsnest',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"The skull and crossbones still flies proudly in the wind."'
        },
        _inline: true,
        _items: [],
        header: { type: 'string', raw: `"Crow's Nest"` }
      },
      {
        _id: 'ship_captains',
        _type: 'location',
        _value: {
          type: 'string',
          raw: '"Half the room is submerged beneath dark water."'
        },
        _inline: false,
        _items: [],
        header: { type: 'string', raw: `"Captain's Quarters"` },
        on_command: {
          _items: [
            {
              _id: null,
              _type: 'match',
              _value: { type: 'string', raw: '"look water"' },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'print',
                  _value: {
                    type: 'string',
                    raw: '"You wonder what could be hiding beneath the surface."'
                  },
                  _inline: true,
                  _items: []
                }
              ]
            },
            {
              _id: null,
              _type: 'match',
              _value: {
                type: 'string',
                raw: '"swim water; check water; feel water; search water"'
              },
              _inline: false,
              _items: [
                {
                  _id: null,
                  _type: 'if',
                  _value: [
                    { type: 'openParen', raw: '(' },
                    { type: 'ident', raw: 'has_not_created' },
                    { type: 'openParen', raw: '(' },
                    { type: 'string', raw: '"chest_key"' },
                    { type: 'closeParen', raw: ')' },
                    { type: 'closeParen', raw: ')' }
                  ],
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"You feel around beneath the water and grasp a small object."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: `"<you've found:<#777>> key"`
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'create',
                      _value: { type: 'string', raw: '"chest_key"' },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'done',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                },
                {
                  _id: null,
                  _type: 'else',
                  _value: null,
                  _inline: false,
                  _items: [
                    {
                      _id: null,
                      _type: 'print',
                      _value: {
                        type: 'string',
                        raw: '"You feel around beneath the water, but find nothing."'
                      },
                      _inline: true,
                      _items: []
                    },
                    {
                      _id: null,
                      _type: 'done',
                      _value: null,
                      _inline: true,
                      _items: []
                    }
                  ]
                }
              ]
            }
          ],
          _id: 'on_command',
          _inline: false
        }
      }
    ],
    _id: 'locations',
    _inline: false
  },
  objects: {
    _items: [
      {
        _id: 'r_seagull',
        _type: 'scenery',
        _value: { type: 'string', raw: '"seagull"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"reception"' },
        msg: {
          type: 'string',
          raw: `"The seagull slightly dips it's head as if taking a bow."`
        }
      },
      {
        _id: 'r_captain',
        _type: 'scenery',
        _value: { type: 'string', raw: '"<captain<#c6c>>"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"reception"' },
        msg: {
          type: 'string',
          raw: `"A patch covers one eye and a parrot rests on his shoulder. Yes, the captain is a bit stereotypical, but you'd never say that to his face."`
        }
      },
      {
        _id: 'r_firstmate',
        _type: 'scenery',
        _value: { type: 'string', raw: '"<first mate<#c6c>>"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"reception"' },
        msg: {
          type: 'string',
          raw: '"A bit of blond sandy hair escape from under a red bandana. His smile may be missing a few teeth, but is as still friendly as ever."'
        }
      },
      {
        _id: 'r_stranger',
        _type: 'scenery',
        _value: { type: 'string', raw: '"<stranger<#c6c>>"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"reception"' },
        msg: {
          type: 'string',
          raw: '"The frail old man wears in a dingy cloak.  He leans on a gnarled walking stick, as if it were a cane."'
        }
      },
      {
        _id: 'r_wizard',
        _type: 'scenery',
        _value: { type: 'string', raw: '"<wizard<#c6c>>"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: '"He wears a black cape and grips a bloodwood staff.  He smiles and makes a very deep bow."'
        }
      },
      {
        _id: 'r_wolf',
        _type: 'scenery',
        _value: { type: 'string', raw: '"<wolf<#c6c>>"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"reception"' },
        msg: {
          type: 'string',
          raw: '"A dire wolf with a light grey mane and deep <golden<#fc3>> eyes.  It yips at you and wags its tail in a friendly fashion."'
        }
      },
      {
        _id: 'r_tree',
        _type: 'scenery',
        _value: { type: 'string', raw: '"ancient tree"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"reception"' },
        msg: {
          type: 'string',
          raw: '"It towers above you, with smooth white bark and light crimson blossoms.  Every so slowly the limbs drop a bit and then rise again."'
        }
      },
      {
        _id: 'r_ape',
        _type: 'scenery',
        _value: { type: 'string', raw: '"ape"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"reception"' },
        msg: {
          type: 'string',
          raw: `"The ape scratches it's head and looks back at you."`
        }
      },
      {
        _id: 'well',
        _type: 'scenery',
        _value: { type: 'string', raw: '"a well"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"village_square"' },
        msg: {
          type: 'string',
          raw: `"It looks like hasn't been used in some time. Seems deep."`
        }
      },
      {
        _id: 'vendor_booths',
        _type: 'scenery',
        _value: { type: 'string', raw: '"vendor booths"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"village_square"' },
        msg: {
          type: 'string',
          raw: '"You see the remains of fruit that rotted long ago and faded fabrics."'
        }
      },
      {
        _id: 'bed',
        _type: 'scenery',
        _value: { type: 'string', raw: '"a bed"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"A cozy small bed."' },
        at: { type: 'string', raw: '"village_hut"' }
      },
      {
        _id: 'kettle',
        _type: 'scenery',
        _value: { type: 'string', raw: '"a kettle"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: `"A large kettle hangs over the fireplace, smells like grandma's chili."`
        },
        at: { type: 'string', raw: '"village_hut"' }
      },
      {
        _id: 'fireplace',
        _type: 'scenery',
        _value: { type: 'string', raw: '"a fireplace"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: `"Looks like it hasn't been used in many years."`
        },
        at: { type: 'string', raw: '"village_hut"' }
      },
      {
        _id: 'tome',
        _type: 'object',
        _value: { type: 'string', raw: '"a tome"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"A large book, very old."' },
        at: { type: 'string', raw: '"village_hut"' }
      },
      {
        _id: 'village',
        _type: 'scenery',
        _value: { type: 'string', raw: '"village"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: `"Appears to be a small, primitive village, but it's too quiet.  You'll need to enter to learn more."`
        },
        at: { type: 'string', raw: '"lowlands"' }
      },
      {
        _id: 'elder_hut',
        _type: 'scenery',
        _value: { type: 'string', raw: '"large hut"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: '"The hut before you is larger than the rest, but otherwise similar."'
        },
        at: { type: 'string', raw: '"village_n"' }
      },
      {
        _id: 'wounded_wolf',
        _type: 'scenery',
        _value: { type: 'string', raw: '"<wolf<#c6c>>"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights_dream"' },
        msg: {
          type: 'string',
          raw: '"The large creature is bound upon the altar and appears injured. It looks towards you, or is that merely your imagination?"'
        }
      },
      {
        _id: 'evil_wizard',
        _type: 'scenery',
        _value: { type: 'string', raw: '"<wizard<#c6c>>"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights_dream"' },
        msg: {
          type: 'string',
          raw: '"He wears a black cape and holds a bloodwood staff. He is slowly speaking the words of some sort of incantation or spell."'
        }
      },
      {
        _id: 'bloodwood',
        _type: 'scenery',
        _value: { type: 'string', raw: '"bloodwood"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights_dream"' },
        msg: {
          type: 'string',
          raw: `"Very rare, from the Blood Forest. It is said that removing a single limb from that forest traps and binds the tree's soul to the wood for eternity."`
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'bloodwood_staff',
        _type: 'scenery',
        _value: { type: 'string', raw: '"a bloodwood staff"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights_dream"' },
        msg: {
          type: 'string',
          raw: '"The bloodwood staff is at 7 feet long and a dark redish brown. Red mists swirl inside the staff."'
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'wizard_cape',
        _type: 'scenery',
        _value: { type: 'string', raw: '"a cape"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights_dream"' },
        msg: {
          type: 'string',
          raw: `"The wizard's black cape is blowing about madly in the wind."`
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'moonstone_altar',
        _type: 'scenery',
        _value: { type: 'string', raw: '"moonstone altar"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights_dream"' },
        msg: {
          type: 'string',
          raw: '"A massive moonstone altar.  It glows a bright blueish yellow in the moonlight."'
        }
      },
      {
        _id: 'moon',
        _type: 'scenery',
        _value: { type: 'string', raw: '"moon"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights_dream"' },
        msg: {
          type: 'string',
          raw: '"A full moon; you swear it looms larger than usual."'
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'moonlight',
        _type: 'scenery',
        _value: { type: 'string', raw: '"moonlight"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights_dream"' },
        msg: {
          type: 'string',
          raw: '"The moonlight feels as if it carries a slight chill."'
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'd_sea',
        _type: 'scenery',
        _value: { type: 'string', raw: '"sea"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights_dream"' },
        msg: {
          type: 'string',
          raw: '"A stormy sea swirls and churns far below."'
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'blazing_bonfire',
        _type: 'scenery',
        _value: { type: 'string', raw: '"raging bonfire"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights_dream"' },
        msg: {
          type: 'string',
          raw: '"A massive bonfire lights the night, yet provides no warmth."'
        }
      },
      {
        _id: 'charred_ashes',
        _type: 'scenery',
        _value: { type: 'string', raw: '"charred ashes"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights"' },
        msg: {
          type: 'string',
          raw: '"Appears to be the remains of a large bonfire from many moons ago. This would be the perfect spot to build a signal fire."'
        }
      },
      {
        _id: 'stone_altar',
        _type: 'scenery',
        _value: { type: 'string', raw: '"stone altar"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights"' },
        msg: {
          type: 'string',
          raw: '"A massive moonstone altar. An impossible crack intersects it from top to bottom."'
        }
      },
      {
        _id: 'altar_crack',
        _type: 'scenery',
        _value: { type: 'string', raw: '"a crack"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights"' },
        msg: {
          type: 'string',
          raw: '"It almost looks as if it was violently torn in half. What forces could do such a thing?"'
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'altar_moonstone',
        _type: 'scenery',
        _value: { type: 'string', raw: '"moonstone"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"western_heights"' },
        msg: {
          type: 'string',
          raw: '"Slightly bluer than limestone; glows when exposed to moonlight; known to be almost indestructable. The superstitious say it posses magical properties."'
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'wolf',
        _type: 'object',
        _value: { type: 'string', raw: '"a <dire wolf<#c6c>>"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"quiet_grove"' },
        msg: {
          type: 'string',
          raw: '"A dire wolf with a light grey mane and deep <golden<#fc3>> eyes."'
        }
      },
      {
        _id: 'tall_tree',
        _type: 'scenery',
        _value: { type: 'string', raw: '"an ancient tree"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"quiet_grove"' },
        msg: {
          type: 'string',
          raw: '"It towers above you, with smooth white bark and light crimson blossoms. It could easily be thousands of years old - or older."'
        }
      },
      {
        _id: 'grove_flowers',
        _type: 'scenery',
        _value: { type: 'string', raw: '"flowers"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"quiet_grove"' },
        msg: {
          type: 'string',
          raw: '"You wander among the flowers. Such <impossible hues<#r>> and shades of color, and a rich smell of chocolate and sunshine."'
        }
      },
      {
        _id: 'burnt_tree',
        _type: 'scenery',
        _value: { type: 'string', raw: '"a dead tree"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"burnt_grove"' },
        msg: {
          type: 'string',
          raw: '"Dead. The life force you sensed before is gone."'
        }
      },
      {
        _id: 'broken_staff',
        _type: 'object',
        _value: { type: 'string', raw: '"a broken staff"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: `"You wizard's staff is broken in half and powerless."`
        }
      },
      {
        _id: 'd_captain',
        _type: 'scenery',
        _value: { type: 'string', raw: '"<captain<#c6c>>"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"dream_ship"' }
      },
      {
        _id: 'd_firstmate',
        _type: 'scenery',
        _value: { type: 'string', raw: '"<firstmate<#c6c>>"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"dream_ship"' }
      },
      {
        _id: 'd_stranger',
        _type: 'scenery',
        _value: { type: 'string', raw: '"<stranger<#c6c>>"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"dream_ship"' },
        msg: {
          type: 'string',
          raw: '"A subject of debate among the crew.  They boarded at the last moment and have kept to themselves.  An old, gnarled walking stick never leaves their side."'
        }
      },
      {
        _id: 'd_wheel',
        _type: 'scenery',
        _value: { type: 'string', raw: `"ship's wheel"` },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"dream_ship"' },
        msg: {
          type: 'string',
          raw: `"The wheel is hand-crafted with the finest Darkwood from the Isle of blah blah blah... honestly you weren't paying all that much attention when the Captain blathered on and on about it during the tour."`
        }
      },
      {
        _id: 'd_plank',
        _type: 'scenery',
        _value: { type: 'string', raw: '"plank"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"dream_ship"' },
        msg: { type: 'string', raw: `"You've seen plenty walk it."` }
      },
      {
        _id: 'd_mast',
        _type: 'scenery',
        _value: { type: 'string', raw: '"mast"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"dream_ship"' },
        msg: {
          type: 'string',
          raw: `"It extends upwards into the dark night. You know someone is manning the crow's nest, but don't envy them."`
        }
      },
      {
        _id: 'vines',
        _type: 'scenery',
        _value: { type: 'string', raw: '"vines"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"cliffside_east"' },
        msg: { type: 'string', raw: '"As thick as your arm."' }
      },
      {
        _id: 'medallion',
        _type: 'object',
        _value: { type: 'string', raw: '"a silver medallion"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: `"It's attached to leather cordage and seems cold to the touch."`
        },
        get_message: { type: 'string', raw: '"You suddenly feel luckier."' },
        wearable: { type: 'string', raw: '"true"' },
        at: { type: 'string', raw: '"cliffside_east"' }
      },
      {
        _id: 'red_marble',
        _type: 'object',
        _value: { type: 'string', raw: '"a red marble"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: '"A small, smooth red pebble{reminds_of_eye}. It feels hot to the touch, as if it was alive."'
        }
      },
      {
        _id: 'blue_marble',
        _type: 'object',
        _value: { type: 'string', raw: '"a blue marble"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: '"A small, smooth, blue pebble{reminds_of_eye}. It feels hot to the touch, as if it was alive."'
        }
      },
      {
        _id: 'your_pants',
        _type: 'object',
        _value: { type: 'string', raw: '"some pants"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"Comfortable everyday sailor pants."' },
        wearable: { type: 'string', raw: '"true"' }
      },
      {
        _id: 'your_earring',
        _type: 'object',
        _value: { type: 'string', raw: '"a gold earring"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"A small silver teardrop earring"' },
        wearable: { type: 'string', raw: '"true"' }
      },
      {
        _id: 'footpath',
        _type: 'scenery',
        _value: { type: 'string', raw: '"footpath"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"jungle_edge"' },
        msg: {
          type: 'string',
          raw: '"A bit overgrown, but obviously it was once a well-worn path."'
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'jungle_beach',
        _type: 'scenery',
        _value: { type: 'string', raw: '"beach"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"jungle_edge"' },
        msg: {
          type: 'string',
          raw: '"The white sand glitters as if inviting you back to the safety of the beach."'
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'rocky_crevice',
        _type: 'scenery',
        _value: { type: 'string', raw: '"crevice"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach_ww_rocky"' },
        msg: {
          type: 'string',
          raw: `"It'd be tight, but you believe you could wiggle thru if you gave it a shot."`
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'rocky_rock',
        _type: 'scenery',
        _value: { type: 'string', raw: '"rock"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach_ww_rocky"' },
        msg: {
          type: 'string',
          raw: '"A large outcropping of rock extends onto the beach."'
        },
        conspicuous: { type: 'string', raw: '"false"' }
      },
      {
        _id: 'pool',
        _type: 'scenery',
        _value: { type: 'string', raw: '"a pool"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach_ww_rocky"' },
        msg: {
          type: 'string',
          raw: '"A small pool of crystal clear water. You see your reflection - not one of your better days."'
        }
      },
      {
        _id: 'knife',
        _type: 'object',
        _value: { type: 'string', raw: '"a knife"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"waters_edge"' },
        msg: { type: 'string', raw: '"It appears quite sharp."' }
      },
      {
        _id: 'oar',
        _type: 'object',
        _value: { type: 'string', raw: '"an oar"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach_w"' },
        msg: {
          type: 'string',
          raw: '"A long rowboat oar; used for paddling."'
        }
      },
      {
        _id: 'broken_oar',
        _type: 'object',
        _value: { type: 'string', raw: '"a broken oar"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"Broken in half, useless."' }
      },
      {
        _id: 'coconut_trees',
        _type: 'object',
        _value: { type: 'string', raw: '"coconut trees"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach_w"' },
        msg: {
          type: 'string',
          raw: '"Coconuts are delicious. But they are up too high."'
        }
      },
      {
        _id: 'coconut',
        _type: 'object',
        _value: { type: 'string', raw: '"a coconut"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"A delicious coconut."' }
      },
      {
        _id: 'seagull',
        _type: 'scenery',
        _value: { type: 'string', raw: '"seagull"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach"' },
        msg: { type: 'string', raw: '"What a beautiful, delicious bird."' }
      },
      {
        _id: 'dead_seagull',
        _type: 'scenery',
        _value: { type: 'string', raw: '"dead seagull"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"Your stomach rumbles loudly."' }
      },
      {
        _id: 'debris',
        _type: 'scenery',
        _value: { type: 'string', raw: '"random debris"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach"' },
        msg: {
          type: 'string',
          raw: '"Assorted debris from the wreck. Nothing useful at the moment."'
        }
      },
      {
        _id: 'seashell',
        _type: 'object',
        _value: { type: 'string', raw: '"a seashell"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"waters_edge"' },
        msg: {
          type: 'string',
          raw: '"Reminds you of picking up seashells as a child."'
        }
      },
      {
        _id: 'stone',
        _type: 'object',
        _value: { type: 'string', raw: '"a stone"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: '"One of the stones from the strange pile."'
        }
      },
      {
        _id: 'pile_stones',
        _type: 'scenery',
        _value: { type: 'string', raw: '"a pile of stones"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach_ee"' },
        msg: {
          type: 'string',
          raw: '"A pile of perhaps 100 smooth, rounded stones."'
        }
      },
      {
        _id: 'shadow_bear',
        _type: 'scenery',
        _value: { type: 'string', raw: '"huge black bear"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach_ww_cave"' }
      },
      {
        _id: 'ships_wheel',
        _type: 'scenery',
        _value: { type: 'string', raw: `"the ship's wheel"` },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: `"The ship's wheel. You must have never even let go - your grand-daddy would be so proud."`
        },
        at: { type: 'string', raw: '"waters_edge"' }
      },
      {
        _id: 'bottle',
        _type: 'object',
        _value: { type: 'string', raw: '"a bottle"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: `"A beautiful blue frosted glass bottle that looks as if it's been tossed on the waves for years."`
        }
      },
      {
        _id: 'bottle_message',
        _type: 'object',
        _value: { type: 'string', raw: '"a message"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: '"It reads: \\"Trapped on an island - send help.\\""'
        }
      },
      {
        _id: 'msg_bottle',
        _type: 'object',
        _value: { type: 'string', raw: '"a bottle"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach_w"' },
        msg: {
          type: 'string',
          raw: `"A beautiful blue frosted glass bottle that looks as if it's been tossed on the waves for years.  There is a message inside."`
        }
      },
      {
        _id: 'chest',
        _type: 'scenery',
        _value: { type: 'string', raw: '"a locked chest"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach_e"' },
        msg: {
          type: 'string',
          raw: '"Massive solid oak chest (locked). Perhaps you could smash it open?"'
        }
      },
      {
        _id: 'open_chest',
        _type: 'scenery',
        _value: { type: 'string', raw: '"an oak chest"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"Massive solid oak chest. (open)"' }
      },
      {
        _id: 'chest_key',
        _type: 'object',
        _value: { type: 'string', raw: '"a key"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"A small, brass skeleton key."' }
      },
      {
        _id: 'gold_coins',
        _type: 'object',
        _value: { type: 'string', raw: '"gold coins"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"A small handful of gold coins."' }
      },
      {
        _id: 'matchbook',
        _type: 'object',
        _value: { type: 'string', raw: '"a matchbook"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"A small book of matches."' }
      },
      {
        _id: 'love_letters',
        _type: 'object',
        _value: { type: 'string', raw: '"love letters"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: `"Poetry and love letters to the Captain's old girlfriend."`
        }
      },
      {
        _id: 'driftwood',
        _type: 'object',
        _value: { type: 'string', raw: '"driftwood"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"beach_ww"' },
        msg: {
          type: 'string',
          raw: '"Sunbleached and rough, been drifting a while."'
        }
      },
      {
        _id: 'chopped_driftwood',
        _type: 'object',
        _value: { type: 'string', raw: '"chopped driftwood"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"A pile of chopped driftwood."' }
      },
      {
        _id: 'chopped_oak',
        _type: 'object',
        _value: { type: 'string', raw: '"chopped oak"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"A pile of chopped oak."' }
      },
      {
        _id: 'chopped_darkwood',
        _type: 'object',
        _value: { type: 'string', raw: '"chopped darkwood"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"A pile of chopped darkwood."' }
      },
      {
        _id: 'signal_fire',
        _type: 'scenery',
        _value: { type: 'string', raw: '"signal fire"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: '"A huge blaze, it should be possible to see the smoke for miles."'
        }
      },
      {
        _id: 'treasure_treasure',
        _type: 'scenery',
        _value: { type: 'string', raw: '"treasure"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"cliffs_e_cave_rear"' },
        msg: {
          type: 'string',
          raw: '"So much treasure, you half expect to find a dragon lurking around the corner."'
        }
      },
      {
        _id: 'treasure_chests',
        _type: 'scenery',
        _value: { type: 'string', raw: '"chests"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"cliffs_e_cave_rear"' },
        conspicuous: { type: 'string', raw: '"false"' },
        msg: { type: 'string', raw: '"There are far too many to count."' }
      },
      {
        _id: 'treasure_crown',
        _type: 'object',
        _value: { type: 'string', raw: '"a crown"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"cliffs_e_cave_rear"' },
        msg: {
          type: 'string',
          raw: '"Fit for a king, or at least a duke."'
        },
        wearable: { type: 'string', raw: '"true"' }
      },
      {
        _id: 'treasure_gems',
        _type: 'scenery',
        _value: { type: 'string', raw: '"gems"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"cliffs_e_cave_rear"' },
        conspicuous: { type: 'string', raw: '"false"' },
        msg: { type: 'string', raw: '"So many gems..."' }
      },
      {
        _id: 'treasure_metals',
        _type: 'scenery',
        _value: { type: 'string', raw: '"metals"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"cliffs_e_cave_rear"' },
        conspicuous: { type: 'string', raw: '"false"' },
        msg: { type: 'string', raw: '"Gold, silver, moonstone..."' }
      },
      {
        _id: 'boulder',
        _type: 'scenery',
        _value: { type: 'string', raw: '"boulder"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"cliffs_e_clearing"' },
        msg: {
          type: 'string',
          raw: `"It's massive.  Looking closer you notice that rough and uneven steps carved into the boulder lead downwards."`
        }
      },
      {
        _id: 'wolf_statue',
        _type: 'scenery',
        _value: { type: 'string', raw: '"statue"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"cliffs_e_clearing"' },
        msg: {
          type: 'string',
          raw: '"In the middle of the clearing is a statue of a massive wolf, every bit as tall as you.  Strangely, it appears to be missing its eyes."'
        }
      },
      {
        _id: 'wolf_statue2',
        _type: 'scenery',
        _value: { type: 'string', raw: '"wolf statue"' },
        _inline: true,
        _items: [],
        noun: { type: 'string', raw: '"statue"' },
        msg: {
          type: 'string',
          raw: '"In the middle of the clearing is a statue of a massive wolf, every bit as tall as you.  Strangely, it appears to be missing its eyes."'
        }
      },
      {
        _id: 'wolf_statue3',
        _type: 'scenery',
        _value: { type: 'string', raw: '"wolf statue"' },
        _inline: true,
        _items: [],
        noun: { type: 'string', raw: '"statue"' },
        msg: {
          type: 'string',
          raw: '"In the middle of the clearing is a statue of a massive wolf, every bit as tall as you. Its eyes are a dull gold color."'
        }
      },
      {
        _id: 'crumbled_statue',
        _type: 'scenery',
        _value: { type: 'string', raw: '"crumbled statue"' },
        _inline: true,
        _items: [],
        noun: { type: 'string', raw: '"statue"' },
        msg: {
          type: 'string',
          raw: '"The crumbled remains of the statue litter the clearing."'
        }
      },
      {
        _id: 'circle_stones',
        _type: 'scenery',
        _value: { type: 'string', raw: '"circle of stones"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: '"Two dozen large stones each the size of your head form a circle around the statue."'
        },
        at: { type: 'string', raw: '"cliffs_e_clearing"' }
      },
      {
        _id: 'spyglass',
        _type: 'object',
        _value: { type: 'string', raw: '"a spyglass"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"ship_crowsnest"' },
        msg: {
          type: 'string',
          raw: '"A spyglass, good for looking long distances."'
        }
      },
      {
        _id: 'captains_logbook',
        _type: 'object',
        _value: { type: 'string', raw: `"captain's log"` },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"ship_captains"' },
        msg: {
          type: 'string',
          raw: '"This huge tome is where the Captain logged the missions."'
        }
      },
      {
        _id: 'candle',
        _type: 'object',
        _value: { type: 'string', raw: '"a candle{candle_lit_desc}"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"ship_captains"' },
        msg: {
          type: 'string',
          raw: '"Just an ordinary candle, smells like honey."'
        }
      },
      {
        _id: 'charts',
        _type: 'object',
        _value: { type: 'string', raw: '"nautical charts"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"ship_captains"' },
        msg: {
          type: 'string',
          raw: '"For now, scrap paper. Perhaps useful if you ever get off this island."'
        }
      },
      {
        _id: 'book',
        _type: 'object',
        _value: { type: 'string', raw: '"a book"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"ship_captains"' },
        msg: { type: 'string', raw: '"Moby Dick"' }
      },
      {
        _id: 'moby_book',
        _type: 'object',
        _value: { type: 'string', raw: '"Moby Dick (book)"' },
        _inline: true,
        _items: [],
        msg: { type: 'string', raw: '"Moby Dick"' },
        noun: { type: 'string', raw: '"book"' }
      },
      {
        _id: 'axe',
        _type: 'object',
        _value: { type: 'string', raw: '"an axe"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"shipwreck"' },
        msg: {
          type: 'string',
          raw: '"Good for chopping up wood, you suppose."'
        }
      },
      {
        _id: 'mast',
        _type: 'scenery',
        _value: { type: 'string', raw: '"mast"' },
        _inline: true,
        _items: [],
        at: { type: 'string', raw: '"shipwreck"' },
        msg: { type: 'string', raw: '"The Crows Nest is up there."' }
      },
      {
        _id: 'acorn',
        _type: 'object',
        _value: { type: 'string', raw: '"an acorn"' },
        _inline: true,
        _items: [],
        msg: {
          type: 'string',
          raw: '"Looks like an acorn. Smells like an acorn."'
        }
      }
    ],
    _id: 'objects',
    _inline: false
  },
  connections: {
    _items: [],
    _id: 'connections',
    _inline: false,
    from: {
      _array: true,
      _tokens: [
        { type: 'openArray', raw: '[' },
        { type: 'newline', raw: '\n' },
        { type: 'whitespace', raw: '    ' },
        { type: 'ident', raw: 'washedashore' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'north' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'placeholder' },
        { type: 'comma', raw: ',' },
        { type: 'newline', raw: '\n' },
        { type: 'whitespace', raw: '    ' },
        { type: 'ident', raw: 'waters_edge' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'north' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'beach' },
        { type: 'comma', raw: ',' },
        { type: 'newline', raw: '\n' },
        { type: 'whitespace', raw: '    ' },
        { type: 'ident', raw: 'waters_edge' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'south' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'shipwreck' },
        { type: 'comma', raw: ',' },
        { type: 'newline', raw: '\n' },
        { type: 'newline', raw: '\n' },
        { type: 'whitespace', raw: '    ' },
        { type: 'comment', raw: '// dream intro' },
        { type: 'newline', raw: '\n' },
        { type: 'whitespace', raw: '    ' },
        { type: 'ident', raw: 'dream_ship' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'north' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'dream_ship_placeholder' },
        { type: 'comma', raw: ',' },
        { type: 'newline', raw: '\n' },
        { type: 'whitespace', raw: '    ' },
        { type: 'ident', raw: 'dream_ship' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'south' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'dream_ship_placeholder' },
        { type: 'comma', raw: ',' },
        { type: 'newline', raw: '\n' },
        { type: 'whitespace', raw: '    ' },
        { type: 'ident', raw: 'dream_ship' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'down' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'dream_ship_placeholder' },
        { type: 'comma', raw: ',' },
        { type: 'newline', raw: '\n' },
        { type: 'whitespace', raw: '    ' },
        { type: 'ident', raw: 'dream_ship' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'up' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'dream_ship_placeholder' },
        { type: 'comma', raw: ',' },
        { type: 'newline', raw: '\n' },
        { type: 'newline', raw: '\n' },
        { type: 'whitespace', raw: '    ' },
        { type: 'comment', raw: '// shipwreck' },
        { type: 'newline', raw: '\n' },
        { type: 'whitespace', raw: '    ' },
        { type: 'ident', raw: 'shipwreck' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'up' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'ship_crowsnest' },
        { type: 'comma', raw: ',' },
        { type: 'newline', raw: '\n' },
        { type: 'whitespace', raw: '    ' },
        { type: 'ident', raw: 'shipwreck' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'down' },
        { type: 'comma', raw: ',' },
        { type: 'whitespace', raw: ' ' },
        { type: 'ident', raw: 'ship_captains' },
        { type: 'comma', raw: ',' },
        { type: 'newline', raw: '\n' },
        ... 343 more items
      ]
    }
  },
  zones: {
    _items: [
      {
        _id: 'village_zone',
        _type: 'zone',
        _value: null,
        _inline: false,
        _items: [],
        locations: {
          _array: true,
          _tokens: [
            { type: 'openArray', raw: '[' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'village_square' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'village_n' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'village_s' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'village_e' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'village_w' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'village_hut' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '    ' },
            { type: 'closeArray', raw: ']' }
          ]
        }
      },
      {
        _id: 'heights_zone',
        _type: 'zone',
        _value: null,
        _inline: false,
        _items: [],
        locations: {
          _array: true,
          _tokens: [
            { type: 'openArray', raw: '[' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'western_heights' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'cliffs_e' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'cliffs_e_clearing' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '    ' },
            { type: 'closeArray', raw: ']' }
          ]
        }
      },
      {
        _id: 'beach_zone',
        _type: 'zone',
        _value: null,
        _inline: false,
        _items: [],
        locations: {
          _array: true,
          _tokens: [
            { type: 'openArray', raw: '[' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'beach' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'beach_e' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'beach_ee' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'beach_w' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'beach_ww' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'waters_edge' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '    ' },
            { type: 'closeArray', raw: ']' }
          ]
        }
      },
      {
        _id: 'jungle_zone',
        _type: 'zone',
        _value: null,
        _inline: false,
        _items: [],
        locations: {
          _array: true,
          _tokens: [
            { type: 'openArray', raw: '[' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'jungle_entrance' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'jungle_w' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'jungle_ww' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'jungle_e' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'jungle_ee' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'jungle_ne' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'jungle_n' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'jungle_nw' },
            { type: 'comma', raw: ',' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '      ' },
            { type: 'ident', raw: 'jungle_exit' },
            { type: 'newline', raw: '\n' },
            { type: 'whitespace', raw: '    ' },
            { type: 'closeArray', raw: ']' }
          ]
        }
      }
    ],
    _id: 'zones',
    _inline: false
  },
  barriers: {
    _items: [
      {
        _id: 'access_to_groves',
        _type: 'block_path',
        _value: null,
        _inline: false,
        _items: [],
        from: { type: 'string', raw: '"jungle_ww"' },
        to: { type: 'string', raw: '"quiet_grove"' },
        block_when_not: { type: 'string', raw: 'has_visited_grove' },
        show_blocked_exit: { type: 'string', raw: 'false' }
      },
      {
        _id: 'east_cave_light',
        _type: 'block_path',
        _value: null,
        _inline: false,
        _items: [],
        from: { type: 'string', raw: 'cliffs_e_cave_entrance' },
        to: { type: 'string', raw: 'cliffs_e_cave_rear' },
        block_when_not: { type: 'string', raw: 'is_candle_lit' },
        show_blocked_exit: { type: 'string', raw: 'true' },
        message: {
          type: 'string',
          raw: `"It's too dark to proceed any further without a light source."`
        }
      },
      {
        _id: 'hidden_cliff',
        _type: 'block_path',
        _value: null,
        _inline: false,
        _items: [],
        from: { type: 'string', raw: 'cliffs_e_clearing' },
        to: { type: 'string', raw: 'cliffside_east' },
        block_when_not: { type: 'string', raw: 'has_seen_cliff_steps' },
        show_blocked_exit: { type: 'string', raw: 'false' }
      },
      {
        _id: 'hidden_vines',
        _type: 'block_path',
        _value: null,
        _inline: false,
        _items: [],
        from: { type: 'string', raw: 'cliffside_east' },
        to: { type: 'string', raw: 'cliffs_e_vine_top' },
        block_when: { type: 'string', raw: 'always' },
        show_blocked_exit: { type: 'string', raw: 'false' }
      },
      {
        _id: 'swim_to_ship',
        _type: 'block_path',
        _value: null,
        _inline: false,
        _items: [],
        from: { type: 'string', raw: 'waters_edge' },
        to: { type: 'string', raw: 'shipwreck' },
        block_when_not: { type: 'string', raw: 'knows_to_swim' },
        show_blocked_exit: { type: 'string', raw: 'false' }
      }
    ],
    _id: 'barriers',
    _inline: false
  },
  on_command: {
    _items: [
      {
        _id: null,
        _type: 'gosub',
        _value: { type: 'string', raw: '"sentence_rewriting"' },
        _inline: true,
        _items: []
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'inputs' },
          { type: 'openParen', raw: '(' },
          { type: 'closeParen', raw: ')' },
          { type: 'whitespace', raw: ' ' },
          { type: 'greaterThan', raw: '>' },
          { type: 'whitespace', raw: ' ' },
          { type: 'number', raw: '2' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"This game requires only two word inputs."'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'done',
            _value: null,
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"help -"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'gosub',
            _value: { type: 'string', raw: '"help"' },
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"cheat map"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"^n^\\s        VVV  J  -  J  -  J - J - E"'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"^n^\\s         V   |           |       |"'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"^n^\\s W - . - . - J           J       E"'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"^n^\\s                         |"'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"^n^\\s                 J - J - J "'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"^n^\\s                         |"'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"^n^\\s                 B - B - B - B - B"'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"^n^\\s                         |"'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"^n^\\s                       Wreck "'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: { type: 'string', raw: '"^n^\\sJ = Jungle"' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: { type: 'string', raw: '"^n^\\sB = Beach"' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: { type: 'string', raw: '"^n^\\sW = Western Heights"' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: { type: 'string', raw: '"^n^\\sE = Eastern Cliffs"' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'print',
            _value: { type: 'string', raw: '"^n^\\sV = Village"' },
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"use *"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"Objects may not be \\"used\\". Please try a different verb/noun."'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'tutorial',
            _value: { type: 'string', raw: '"For example, you might try:\\n"' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'tutorial',
            _value: {
              type: 'string',
              raw: '"- <unlock chest<6>> instead of <use key<6>>"'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'tutorial',
            _value: {
              type: 'string',
              raw: '"- <light candle<6>> instead of <use match<6>>"'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'tutorial',
            _value: {
              type: 'string',
              raw: '"- <spy north<6>> instead of <use spyglass<6>>"'
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'done',
            _value: null,
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"look around"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: `"Looking 'around' doesn't work.\\nInstead, try just <look<6>> or <look object<6>>."`
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'done',
            _value: null,
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"tutorial off"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'set_false',
            _value: { type: 'string', raw: '"tutorial_on"' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'negation', raw: '!' },
              { type: 'ident', raw: 'has_set_initial_thirst' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'set_true',
                _value: { type: 'string', raw: '"has_set_initial_thirst"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'set_integer',
                _value: null,
                _inline: true,
                _items: [],
                var: { type: 'string', raw: '"thirst"' },
                value: { type: 'string', raw: '"75"' }
              }
            ]
          },
          {
            _id: null,
            _type: 'tutorial',
            _value: { type: 'string', raw: '"Tutorial turned off."' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'done',
            _value: null,
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"tutorial on"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'set_true',
            _value: { type: 'string', raw: '"tutorial_on"' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'tutorial',
            _value: { type: 'string', raw: '"Tutorial turned on."' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'done',
            _value: null,
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_at' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"village_zone"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"look hut; look huts"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"The huts appear to be made of a mixtures of straw, mud, and stone."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_at' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"village_n"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'examine',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"knock huts"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"No one is home."' },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_carried' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"candle"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"light candle"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"matchbook"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: { type: 'string', raw: '"You light the candle."' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'set_true',
                    _value: { type: 'string', raw: '"is_candle_lit"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'press_any_key',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'redescribe',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'else',
                _value: null,
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Light it with what? You have no matches."'
                    },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"blow candle; extinguish candle"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_candle_lit' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You blow the candle out."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'set_false',
                    _value: { type: 'string', raw: '"is_candle_lit"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'else',
                _value: null,
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: { type: 'string', raw: `"Why? It's not lit."` },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_beside' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"gold_coins"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"get gold"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'get',
                _value: { type: 'string', raw: '"gold_coins"' },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"look gold"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'examine',
                _value: { type: 'string', raw: '"gold_coins"' },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"love_letters"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"read letters; read poetry"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You grab a letter and read:"'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'press_any_key',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"^c^Brandy,"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'pause',
                _value: { type: 'string', raw: '"1000"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: `"^c^you're a fine girl,"` },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'pause',
                _value: { type: 'string', raw: '"1000"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"^c^what a good wife you would be,"'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'pause',
                _value: { type: 'string', raw: '"1000"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"^c^your eyes could steal this sailor from the sea,"'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'pause',
                _value: { type: 'string', raw: '"1000"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"^c^but my life,"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'pause',
                _value: { type: 'string', raw: '"1000"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"^c^my lover,"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'pause',
                _value: { type: 'string', raw: '"1000"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"^c^my lady..."' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'pause',
                _value: { type: 'string', raw: '"1000"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"^c^...is the sea."' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'pause',
                _value: { type: 'string', raw: '"1000"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"\\nYou blush and decide to read no more.\\nYou never knew the Captain was such a lady's man."`
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_carried' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"spyglass"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 'is_at' },
              { type: 'openParen', raw: '(' },
              { type: 'string', raw: '"cliffs_e"' },
              { type: 'closeParen', raw: ')' },
              { type: 'whitespace', raw: ' ' },
              { type: 'or', raw: '||' },
              { type: 'whitespace', raw: ' ' },
              { type: 'ident', raw: 'is_at' },
              { type: 'openParen', raw: '(' },
              { type: 'string', raw: '"cliffs_e_clearing"' },
              { type: 'closeParen', raw: ')' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'match',
                _value: {
                  type: 'string',
                  raw: '"spy north; spy east; spy ocean"'
                },
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Ocean as far as the eye can see."'
                    },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'match',
                _value: { type: 'string', raw: '"spy south; spy west"' },
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: `"You can't, the view is blocked by jungle."`
                    },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'else',
            _value: null,
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'match',
                _value: { type: 'string', raw: '"spy _"' },
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: `"You'll too low to spy much here, try again from a greater height."`
                    },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_carried' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"matchbook"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"light match"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"The match burns out almost as quickly as you light it."'
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_carried' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"acorn"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"plant acorn"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"You somehow feel this isn't the time."`
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_at' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"western_heights"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"place wood"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'drop',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"light fire; set fire; start fire; make fire; build fire; set fire; burn wood"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'set_integer',
                _value: null,
                _inline: true,
                _items: [],
                var: { type: 'string', raw: '"wood_count"' },
                value: { type: 'string', raw: '"0"' }
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"chopped_driftwood"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'add',
                    _value: null,
                    _inline: true,
                    _items: [],
                    var: { type: 'string', raw: '"wood_count"' },
                    value: { type: 'string', raw: '"1"' }
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"chopped_oak"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'add',
                    _value: null,
                    _inline: true,
                    _items: [],
                    var: { type: 'string', raw: '"wood_count"' },
                    value: { type: 'string', raw: '"1"' }
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"chopped_darkwood"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'add',
                    _value: null,
                    _inline: true,
                    _items: [],
                    var: { type: 'string', raw: '"wood_count"' },
                    value: { type: 'string', raw: '"1"' }
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"oar"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'add',
                    _value: null,
                    _inline: true,
                    _items: [],
                    var: { type: 'string', raw: '"wood_count"' },
                    value: { type: 'string', raw: '"1"' }
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"broken_oar"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'add',
                    _value: null,
                    _inline: true,
                    _items: [],
                    var: { type: 'string', raw: '"wood_count"' },
                    value: { type: 'string', raw: '"1"' }
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'wood_count' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'lessThan', raw: '<' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'number', raw: '2' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'if',
                    _value: [
                      { type: 'openParen', raw: '(' },
                      { type: 'ident', raw: 'wood_count' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'equality', raw: '==' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'number', raw: '0' },
                      { type: 'closeParen', raw: ')' }
                    ],
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"And burn what? The ashes?"'
                        },
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: `"For a good sized fire you'll need at least two bundles of wood."`
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'negation', raw: '!' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"love_letters"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'and', raw: '&&' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'negation', raw: '!' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"charts"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'and', raw: '&&' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'negation', raw: '!' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"moby_book"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: `"You'll need some sort of paper to get the fire started."`
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'negation', raw: '!' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"matchbook"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You need matches or some way to ignite the fire."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"chopped_driftwood"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"chopped_driftwood"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"chopped_oak"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"chopped_oak"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"chopped_darkwood"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"chopped_darkwood"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"oar"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"oar"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"broken_oar"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"broken_oar"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'create',
                _value: { type: 'string', raw: '"signal_fire"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"love_letters"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"love_letters"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'else_if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"charts"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"charts"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'else_if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"moby_book"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"moby_book"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'set_string',
                _value: null,
                _inline: true,
                _items: [],
                var: { type: 'string', raw: '"award_name"' },
                text: { type: 'string', raw: '"Signal Fire"' }
              },
              {
                _id: null,
                _type: 'gosub',
                _value: { type: 'string', raw: '"give_award"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_carried' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"matchbook"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"light fire; set fire; start fire; make fire"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"Why would you do that here?"'
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"book"' },
          { type: 'closeParen', raw: ')' },
          { type: 'whitespace', raw: ' ' },
          { type: 'or', raw: '||' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"moby_book"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"read book"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"Great idea."' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"You'll put that on your list; just as soon as you get off this island."`
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'set_string',
                _value: null,
                _inline: true,
                _items: [],
                var: { type: 'string', raw: '"award_name"' },
                text: { type: 'string', raw: '"Bookworm"' }
              },
              {
                _id: null,
                _type: 'gosub',
                _value: { type: 'string', raw: '"give_award"' },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"look book"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'examine',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'swap',
                _value: null,
                _inline: true,
                _items: [],
                o1: { type: 'string', raw: '"book"' },
                o2: { type: 'string', raw: '"moby_book"' }
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"tome"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"get tome"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You cannot.  Some magic ties it to this place."'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"read tome; open tome"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'set_true',
                _value: { type: 'string', raw: '"is_reading"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'while',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_reading' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'clear_screen',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: `"^n^<Elder's Hut - reading<5>>"`
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You sit down on the bed and slowly thumb thru the pages."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'add_choice',
                    _value: { type: 'string', raw: '"a final stand"' },
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"I depart now to face the wizard with what little courage and magics I possess."'
                        },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"...I fear both shall be insufficient."'
                        },
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'add_choice',
                    _value: { type: 'string', raw: '"the wolf"' },
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"The wolf is as old as time; protector of our people, guardian of the island and sacred grove."'
                        },
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'add_choice',
                    _value: { type: 'string', raw: '"the wizard"' },
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"This dark figure has held many names and his tales would fill many books."'
                        },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"The wizard tricked the wolf, gouged its eyes (stealing its powers), and then placed it into a dark, dreamless slumber."'
                        },
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'add_choice',
                    _value: { type: 'string', raw: '"a sacred grove"' },
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"There stands a wise, sacred tree in the center of the island that we worship."'
                        },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"Surely the way to the grove will remain elusive to the wizard. It must."'
                        },
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'add_choice',
                    _value: { type: 'string', raw: '"my people"' },
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"I do not know what has become of my people."'
                        },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"I fear I will never know."'
                        },
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'add_choice',
                    _value: { type: 'string', raw: '"a hero foretold"' },
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"All of this was long ago foretold... also that one day a hero would come - to right the old wrongs."'
                        },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"Seek the wolf... and perhaps then the tree would offer help..."'
                        },
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'add_choice',
                    _value: {
                      type: 'string',
                      raw: `"stop (I'm done reading)"`
                    },
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'redescribe',
                        _value: null,
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'set_false',
                        _value: { type: 'string', raw: '"is_reading"' },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'done',
                        _value: null,
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'choose',
                    _value: {
                      type: 'string',
                      raw: '"<a few stand out:<#666>>"'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'press_any_key',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"wolf"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"look wolf"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'examine',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"<The wolf matches your stare until you look away.<13>>"'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"talk wolf"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You prepare your best friendly animal voice."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"\\"Hey there wolfy boy. Let's be friends.\\""`
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"<The wolf just stares at you without understanding.<13>>"'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"pet wolf; hug wolf; touch wolf"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"It doesn't look like it's desiring your affection at the moment."`
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"wolf_statue"' },
          { type: 'closeParen', raw: ')' },
          { type: 'whitespace', raw: ' ' },
          { type: 'or', raw: '||' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"wolf_statue2"' },
          { type: 'closeParen', raw: ')' },
          { type: 'whitespace', raw: ' ' },
          { type: 'or', raw: '||' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"wolf_statue3"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"look wolf"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"wolf_statue"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'examine',
                    _value: { type: 'string', raw: '"wolf_statue"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"wolf_statue2"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'examine',
                    _value: { type: 'string', raw: '"wolf_statue2"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"wolf_statue3"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'examine',
                    _value: { type: 'string', raw: '"wolf_statue3"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"touch statue; pet wolf; touch wolf"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"The stone is smooth, yet also somehow... lifelike...?"'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"...as if you're feeling real fur, petting an actual wolf."`
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"wolf_statue"' },
          { type: 'closeParen', raw: ')' },
          { type: 'whitespace', raw: ' ' },
          { type: 'or', raw: '||' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"wolf_statue2"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"look statue"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'examine',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"wolf_statue"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'swap',
                    _value: null,
                    _inline: true,
                    _items: [],
                    o1: { type: 'string', raw: '"wolf_statue"' },
                    o2: { type: 'string', raw: '"wolf_statue2"' }
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"insert eyes; place eyes; add eyes; put eyes; fill sockets; complete statue"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"red_marble"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'and', raw: '&&' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"blue_marble"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"The stone eyes snap into place; their colors fading to a dull gold."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"<You imagine you feel powerful energies swirling about you.<13>>"'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'press_any_key',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: `"The statue appears to be tensing it's muscles."`
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'press_any_key',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Suddenly the statue explodes into a cloud of dust and rubble, throwing you backwards..."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'press_any_key',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"...from inside the cloud two bright, <golden<#fc3>> eyes stare out at you..."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'press_any_key',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"wolf_statue"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"wolf_statue2"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"wolf_statue3"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'create',
                    _value: { type: 'string', raw: '"crumbled_statue"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'create',
                    _value: { type: 'string', raw: '"wolf"' },
                    _inline: true,
                    _items: [],
                    target: { type: 'string', raw: '"cliffs_e_clearing"' }
                  },
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"blue_marble"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"red_marble"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'set_true',
                    _value: { type: 'string', raw: '"is_wolf_awake"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'set_true',
                    _value: { type: 'string', raw: '"has_seen_wolf"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'else_if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"red_marble"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'or', raw: '||' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"blue_marble"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"<You imagine you hear a howl in the distance.<13>>"'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You slowly insert your single marble, but it seems to do nothing... so you remove it."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Perhaps you need a pair?"'
                    },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"look eyes"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"The statue has no eyes, only empty sockets.  One socket is pale blue, the other a dark shade of red."'
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"dead_seagull"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"eat bird; cook bird; roast bird"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You tear into the small, but delicious meal."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'set_string',
                _value: null,
                _inline: true,
                _items: [],
                var: { type: 'string', raw: '"award_name"' },
                text: { type: 'string', raw: '"Perseverance"' }
              },
              {
                _id: null,
                _type: 'gosub',
                _value: { type: 'string', raw: '"give_award"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'destroy',
                _value: { type: 'string', raw: '"dead_seagull"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"seagull"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"kill bird; attack bird"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"You imagine dinner, but first you'd have to catch it..."`
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"get bird"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"First you'd need to catch it..."`
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"eat bird; cook bird; roast bird"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"Yum, but first you'd have to catch it..."`
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"catch bird"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'failure',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"The seagull flies further away and looks back at you."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You imagine it laughing, daring you to chase it."'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"chase bird; run bird"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You chase the seagull in circles..."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'press_any_key',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'failure',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"...until finally you collapse from exhaustion."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"How could you get the jump on this darn seagull?"'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"jump bird; pounce bird"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You wait until it seems distracted then jump..."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'press_any_key',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'failure',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"...landing flat on your face in the sand."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"Is this gull impossible to surprise?"'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"surprise bird"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You really wish you knew how."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"In a fair fight you could knock it out with a quick one-two punch."'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"hit bird; punch bird; box bird"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"You swing..."' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'press_any_key',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'failure',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"...and a miss. Perhaps throw something at it?"'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"throw knife; toss knife"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 's1' },
                  { type: 'openParen', raw: '(' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'or', raw: '||' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 's1' },
                  { type: 'openParen', raw: '(' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: [
                      { type: 'openParen', raw: '(' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'string', raw: '"You throw "' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'plus', raw: '+' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'ident', raw: 'd' },
                      { type: 'openParen', raw: '(' },
                      { type: 'ident', raw: 's1' },
                      { type: 'openParen', raw: '(' },
                      { type: 'closeParen', raw: ')' },
                      { type: 'closeParen', raw: ')' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'plus', raw: '+' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'string', raw: '" at the seagull..."' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'closeParen', raw: ')' }
                    ],
                    _inline: false,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'press_any_key',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'store_random',
                    _value: null,
                    _inline: true,
                    _items: [],
                    var: { type: 'string', raw: '"tmp_int"' }
                  },
                  {
                    _id: null,
                    _type: 'if',
                    _value: [
                      { type: 'openParen', raw: '(' },
                      { type: 'ident', raw: 'kill_chance' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'lessThan', raw: '<' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'ident', raw: 'tmp_int' },
                      { type: 'closeParen', raw: ')' }
                    ],
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'if',
                        _value: [
                          { type: 'openParen', raw: '(' },
                          { type: 'ident', raw: 'is_worn' },
                          { type: 'openParen', raw: '(' },
                          { type: 'string', raw: '"medallion"' },
                          { type: 'closeParen', raw: ')' },
                          { type: 'closeParen', raw: ')' }
                        ],
                        _inline: false,
                        _items: [
                          {
                            _id: null,
                            _type: 'add',
                            _value: null,
                            _inline: true,
                            _items: [],
                            var: { type: 'string', raw: '"kill_chance"' },
                            value: { type: 'string', raw: '"10"' }
                          }
                        ]
                      },
                      {
                        _id: null,
                        _type: 'else',
                        _value: null,
                        _inline: false,
                        _items: [
                          {
                            _id: null,
                            _type: 'add',
                            _value: null,
                            _inline: true,
                            _items: [],
                            var: { type: 'string', raw: '"kill_chance"' },
                            value: { type: 'string', raw: '"5"' }
                          }
                        ]
                      },
                      {
                        _id: null,
                        _type: 'append',
                        _value: { type: 'string', raw: '"...and miss. "' },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'failure',
                        _value: null,
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'cycle',
                        _value: null,
                        _inline: false,
                        _items: [
                          {
                            _id: null,
                            _type: 'print',
                            _value: {
                              type: 'string',
                              raw: '"But it was so close!"'
                            },
                            _inline: true,
                            _items: []
                          },
                          {
                            _id: null,
                            _type: 'print',
                            _value: {
                              type: 'string',
                              raw: '"Surely next time."'
                            },
                            _inline: true,
                            _items: []
                          },
                          {
                            _id: null,
                            _type: 'print',
                            _value: {
                              type: 'string',
                              raw: '"Never give up, never surrender."'
                            },
                            _inline: true,
                            _items: []
                          },
                          {
                            _id: null,
                            _type: 'print',
                            _value: {
                              type: 'string',
                              raw: '"You give yourself a pep talk."'
                            },
                            _inline: true,
                            _items: []
                          },
                          {
                            _id: null,
                            _type: 'print',
                            _value: {
                              type: 'string',
                              raw: '"You should have tried harder for your boyscout hunting badge."'
                            },
                            _inline: true,
                            _items: []
                          },
                          {
                            _id: null,
                            _type: 'print',
                            _value: { type: 'string', raw: '"Grrr!"' },
                            _inline: true,
                            _items: []
                          },
                          {
                            _id: null,
                            _type: 'print',
                            _value: { type: 'string', raw: '"Ungh!"' },
                            _inline: true,
                            _items: []
                          },
                          {
                            _id: null,
                            _type: 'print',
                            _value: { type: 'string', raw: '"Darn!"' },
                            _inline: true,
                            _items: []
                          }
                        ],
                        key: { type: 'string', raw: '"knife_misses"' },
                        predictable_order: { type: 'string', raw: '"false"' },
                        skip_interval: { type: 'string', raw: '"0"' }
                      },
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"You retrieve your knife from the sand."'
                        },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"The seagull is no longer amused."'
                        },
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'else',
                    _value: null,
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"...and your blade flies true."'
                        },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'success',
                        _value: null,
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'swap',
                        _value: null,
                        _inline: true,
                        _items: [],
                        o1: { type: 'string', raw: '"seagull"' },
                        o2: { type: 'string', raw: '"dead_seagull"' }
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"throw *; toss *"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_beside' },
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 's1' },
                  { type: 'openParen', raw: '(' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'or', raw: '||' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 's1' },
                  { type: 'openParen', raw: '(' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: [
                      { type: 'openParen', raw: '(' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'string', raw: '"You throw "' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'plus', raw: '+' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'ident', raw: 'd' },
                      { type: 'openParen', raw: '(' },
                      { type: 'ident', raw: 's1' },
                      { type: 'openParen', raw: '(' },
                      { type: 'closeParen', raw: ')' },
                      { type: 'closeParen', raw: ')' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'plus', raw: '+' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'string', raw: '" at the seagull."' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'closeParen', raw: ')' }
                    ],
                    _inline: false,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"The seagull looks amused."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'if',
                    _value: [
                      { type: 'openParen', raw: '(' },
                      { type: 'ident', raw: 'is_carried' },
                      { type: 'openParen', raw: '(' },
                      { type: 'ident', raw: 's1' },
                      { type: 'openParen', raw: '(' },
                      { type: 'closeParen', raw: ')' },
                      { type: 'closeParen', raw: ')' },
                      { type: 'closeParen', raw: ')' }
                    ],
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'drop',
                        _value: null,
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_at' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"jungle_edge"' },
          { type: 'closeParen', raw: ')' },
          { type: 'whitespace', raw: ' ' },
          { type: 'and', raw: '&&' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ident', raw: 'thirst' },
          { type: 'whitespace', raw: ' ' },
          { type: 'greaterThan', raw: '>' },
          { type: 'whitespace', raw: ' ' },
          { type: 'number', raw: '50' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"north -"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"You're dying of thirst.\\nYou really should look for water before venturing deeper inland."`
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"coconut_trees"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"climb tree"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"No way, the coconuts are up way too high. There must be another way."'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"eat coconut"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'negation', raw: '!' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"coconut"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"If only... they are up so high in the trees beyond your grasp."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"shake tree; shake trees; wiggle tree; wiggle trees"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You give it a good shake..."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_exists' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"coconut"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: { type: 'string', raw: '"... and nothing."' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'if',
                    _value: [
                      { type: 'openParen', raw: '(' },
                      { type: 'ident', raw: 'is_present' },
                      { type: 'openParen', raw: '(' },
                      { type: 'string', raw: '"coconut"' },
                      { type: 'closeParen', raw: ')' },
                      { type: 'closeParen', raw: ')' }
                    ],
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: `"You've already shaken the coconut from the tree!"`
                        },
                        _inline: true,
                        _items: []
                      }
                    ]
                  }
                ]
              },
              {
                _id: null,
                _type: 'else',
                _value: null,
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'press_any_key',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'success',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"A coconut falls from the tree."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'create',
                    _value: { type: 'string', raw: '"coconut"' },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"coconut"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"crack coconut; split coconut; smash coconut; break coconut; open coconut"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"Your grand-daddy never taught ya to crack open a coconut."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You could just cut into it with your trusty knife."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'negation', raw: '!' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"knife"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"...but where oh where is your trusty knife?"'
                    },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"stab coconut"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"knife"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Geez!  You want to eat it, not kill it!"'
                    },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'else',
                _value: null,
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: { type: 'string', raw: '"Stab it with what?"' },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"squeeze coconut"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"You squeeze the coconut until you're blue in the face."`
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"eat coconut; cut coconut; slice cococut; pry coconut; knife coconut"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"knife"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You cut into the coconut with your knife.\\nDelicious."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'set_integer',
                    _value: null,
                    _inline: true,
                    _items: [],
                    var: { type: 'string', raw: '"hunger"' },
                    value: { type: 'string', raw: '"0"' }
                  },
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"coconut"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: `"You're less hungry, but still thirsty. Need agua."`
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"cut coconut; slice coconut; pry coconut"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'negation', raw: '!' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"knife"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Great idea, if only you had a knife!"'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Where oh where is your trusty knife?"'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"eat coconut"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'negation', raw: '!' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"knife"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You need some way to get inside the coconut."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"get wheel"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 'is_present' },
              { type: 'whitespace', raw: ' ' },
              { type: 'string', raw: '"ships_wheel"' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"It's far too large to just carry around.\\nBesides, what would you need it for?"`
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: {
          type: 'string',
          raw: '"push wheel; pull wheel; drag wheel; move wheel; roll wheel"'
        },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: `"That seems like a lot of work. Why? You can't imagine what you would need it for."`
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'done',
            _value: null,
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '"driftwood"' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"break wood; cut wood"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"If only you had a tool for that..."'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"get wood; get driftwood"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"It's too large to carry as it is.\\nYou'd first need to break it into smaller pieces."`
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_carried' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '"axe"' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"chop wheel; split wheel; axe wheel"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'string', raw: '"ships_wheel"' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You shed a tear as you chop."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"ships_wheel"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'create',
                    _value: { type: 'string', raw: '"chopped_darkwood"' },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"chop chest; split chest; axe chest"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"chest"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: `"That might damage it's contents! Perhaps open it first?"`
                    },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"open_chest"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You chop the chest into a neat pile of wood."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"open_chest"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'create',
                    _value: { type: 'string', raw: '"chopped_oak"' },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"chop wood; split wood; axe wood"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_present' },
                  { type: 'whitespace', raw: ' ' },
                  { type: 'string', raw: '"driftwood"' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'destroy',
                    _value: { type: 'string', raw: '"driftwood"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'create',
                    _value: { type: 'string', raw: '"chopped_driftwood"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You chop the wood into smaller pieces."'
                    },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"open_chest"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"lock chest; close chest"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"Why bother?"' },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'else_if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"chest"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"open chest"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: `"It's locked."` },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"unlock chest"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'negation', raw: '!' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"chest_key"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: { type: 'string', raw: `"You'll need the key."` },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You insert the key.  It turns hesistantly, with a final loud click as the mechanism unlocks."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'press_any_key',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'create',
                _value: { type: 'string', raw: '"love_letters"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'create',
                _value: { type: 'string', raw: '"gold_coins"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'create',
                _value: { type: 'string', raw: '"matchbook"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'create',
                _value: { type: 'string', raw: '"blue_marble"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'swap',
                _value: null,
                _inline: true,
                _items: [],
                o1: { type: 'string', raw: '"chest"' },
                o2: { type: 'string', raw: '"open_chest"' }
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"hit chest; whack chest; break chest; smash chest"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"oar"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'cycle',
                    _value: null,
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: `"You give it a good hard whack with the oar.\\nNothing. But perhaps you didn't swing hard enough?"`
                        },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: `"You swing harder.\\nThat's it, it looks like perhaps it's giving."`
                        },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: `"Third time's the charm?\\nNope."`
                        },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"The oar cracks in two."'
                        },
                        _inline: true,
                        _items: []
                      }
                    ],
                    key: { type: 'string', raw: '"hit_chest"' },
                    predictable_order: { type: 'string', raw: '"true"' },
                    skip_interval: { type: 'string', raw: '"0"' },
                    max_loops: { type: 'string', raw: '"1"' }
                  },
                  {
                    _id: null,
                    _type: 'increment',
                    _value: { type: 'string', raw: '"oar_hit_chest_count"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'if',
                    _value: [
                      { type: 'openParen', raw: '(' },
                      { type: 'ident', raw: 'oar_hit_chest_count' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'greaterThan', raw: '>' },
                      { type: 'whitespace', raw: ' ' },
                      { type: 'number', raw: '3' },
                      { type: 'closeParen', raw: ')' }
                    ],
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'swap',
                        _value: null,
                        _inline: true,
                        _items: [],
                        o1: { type: 'string', raw: '"oar"' },
                        o2: { type: 'string', raw: '"broken_oar"' }
                      },
                      {
                        _id: null,
                        _type: 'drop',
                        _value: { type: 'string', raw: '"broken_oar"' },
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'press_any_key',
                        _value: null,
                        _inline: true,
                        _items: []
                      },
                      {
                        _id: null,
                        _type: 'redescribe',
                        _value: null,
                        _inline: true,
                        _items: []
                      }
                    ]
                  }
                ]
              },
              {
                _id: null,
                _type: 'else',
                _value: null,
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'if',
                    _value: [
                      { type: 'openParen', raw: '(' },
                      { type: 'ident', raw: 'is_carried' },
                      { type: 'openParen', raw: '(' },
                      { type: 'string', raw: '"broken_oar"' },
                      { type: 'closeParen', raw: ')' },
                      { type: 'closeParen', raw: ')' }
                    ],
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: { type: 'string', raw: '"Again? Seriously?"' },
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'else',
                    _value: null,
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'print',
                        _value: {
                          type: 'string',
                          raw: '"You hit it as hard as you can.\\nYour hand hurts."'
                        },
                        _inline: true,
                        _items: []
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"follow wolf"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 'is_at' },
              { type: 'openParen', raw: '(' },
              { type: 'string', raw: '"cliffs_e_clearing"' },
              { type: 'closeParen', raw: ')' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"Follow it where? It's just sitting there."`
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'else',
            _value: null,
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"<With one last look at you, the wolf plunges into the jungle.<13>>\\n You rush after and are hopefully lost in only minutes."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'set_integer',
                _value: null,
                _inline: true,
                _items: [],
                var: { type: 'string', raw: '"lost_jungle_counter"' },
                value: { type: 'string', raw: '"0"' }
              },
              {
                _id: null,
                _type: 'goto',
                _value: { type: 'string', raw: '"lost_jungle"' },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_at' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"lost_jungle"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"look wolf; follow wolf"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"The wolf is just too fast, it knows the jungle."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: `"You've lost it's trail."` },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"north -; south -; east -; west -"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'increment',
                _value: { type: 'string', raw: '"lost_jungle_counter"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'cycle',
                _value: null,
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: { type: 'string', raw: '"You are so very lost."' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Every tree looks the same."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Wait, that Y shaped tree looks familiar."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Nope, just your imagination."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Fear starts to nibble at the corners of your mind."'
                    },
                    _inline: true,
                    _items: []
                  }
                ],
                key: { type: 'string', raw: '"lost_events"' },
                predictable_order: { type: 'string', raw: '"true"' },
                skip_interval: { type: 'string', raw: '"0"' }
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'lost_jungle_counter' },
                  { type: 'greaterThan', raw: '>' },
                  { type: 'number', raw: '5' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'goto',
                    _value: { type: 'string', raw: '"quiet_grove"' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'create',
                    _value: { type: 'string', raw: '"wolf"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'press_any_key',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'redescribe',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_at' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"quiet_grove"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"talk tree; speak tree"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"You have a feeling it's already listening.\\nWhat would you <ask<6>> of it?"`
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"touch tree"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You feel briefly feel connected with a life force impossible to describe or imagine."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"It's too much, and you jerk your hand away."`
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask tree"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"Ask it what?"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'tutorial',
                _value: {
                  type: 'string',
                  raw: '"Try <ask (subject)<6>> such as <ask weather<6>>."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask _"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'cycle',
                _value: null,
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Wind whistles thru the branches."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: { type: 'string', raw: '"Leaves rustle softly."' },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"A gentle breeze; the branches dance."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"The leaves whisper softly."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Branches click and rattle in the wind."'
                    },
                    _inline: true,
                    _items: []
                  }
                ],
                key: { type: 'string', raw: '"woods_events"' },
                predictable_order: { type: 'string', raw: '"false"' },
                skip_interval: { type: 'string', raw: '"0"' }
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask life"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<fourty two<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"ask wisdom; ask patience; ask truth"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<much good.<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"ask fire; ask earth; ask wind; ask water"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<elemental. power.<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask love"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<magic. deep.<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask altar"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<tragic. necessary.<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask acorn"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<help. plant.<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask plant"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<new life. good.<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask help"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<help.<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"A small acorn falls to the ground."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'create',
                _value: { type: 'string', raw: '"acorn"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask flowers"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<for others<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask island"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<here<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"ask treasure; ask gold; ask money"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<greed. sad.<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask wolf; ask dragon"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<old ones<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask stranger"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"<evil one. many guises.<14>>"'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask wizard"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<evil one<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask people"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<wizard slaves<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask ship; ask shipwreck"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<bring hero<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask age"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<long. ago. time.<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask name; ask who"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<many names.<14>>"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"ask _"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"... silence ..."' },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"take flowers; pick flowers; get flowers"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"<The wolf growls as you reach towards a flower.<13>>"'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"You reconsider."' },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"south -"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"acorn"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You imagine you see a dark figure out of the corner of your eye..."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'goto',
                    _value: { type: 'string', raw: '"south_of_grove"' },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"inv _"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'inventory',
            _value: null,
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 'is_worn' },
              { type: 'openParen', raw: '(' },
              { type: 'string', raw: '"medallion"' },
              { type: 'closeParen', raw: ')' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'append',
                _value: { type: 'string', raw: '"buffs: "' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"<luck<12>>"' },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_carried' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"medallion"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"wear medallion"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'wear',
                _value: { type: 'string', raw: '"medallion"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You shiver, but suddenly feel quite a bit luckier."'
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"shadow_bear"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"look bear; touch bear; talk bear; attack bear; hit bear; stab bear"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"Nope, just a shadow."' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'destroy',
                _value: { type: 'string', raw: '"shadow_bear"' },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"pool"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 'is_carried' },
              { type: 'openParen', raw: '(' },
              { type: 'string', raw: '"bottle"' },
              { type: 'closeParen', raw: ')' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'match',
                _value: { type: 'string', raw: '"get water; fill bottle"' },
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You seem to have lost the cork, oops."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 'is_carried' },
              { type: 'openParen', raw: '(' },
              { type: 'string', raw: '"msg_bottle"' },
              { type: 'closeParen', raw: ')' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'match',
                _value: { type: 'string', raw: '"get water; fill bottle"' },
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"The bottle already has something in it."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"swim -; swim pool"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You wish.  If only the pool was a bit larger..."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'done',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: {
              type: 'string',
              raw: '"drink water; drink pool; drink _"'
            },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'set_integer',
                _value: null,
                _inline: true,
                _items: [],
                var: { type: 'string', raw: '"thirst"' },
                value: { type: 'string', raw: '"0"' }
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"You didn't know water could taste this good."`
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'has_dreamed_of_storm' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'add_choice',
                    _value: { type: 'string', raw: '"dream again"' },
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'set_false',
                        _value: {
                          type: 'string',
                          raw: '"has_dreamed_of_storm"'
                        },
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'add_choice',
                    _value: {
                      type: 'string',
                      raw: '"no thanks, just the water"'
                    },
                    _inline: false,
                    _items: [
                      {
                        _id: null,
                        _type: 'done',
                        _value: null,
                        _inline: true,
                        _items: []
                      }
                    ]
                  },
                  {
                    _id: null,
                    _type: 'choose',
                    _value: {
                      type: 'string',
                      raw: '"You recall your memories of the storm..."'
                    },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'negation', raw: '!' },
                  { type: 'ident', raw: 'has_dreamed_of_storm' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"Refreshed, you close your eyes for just a brief moment..."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'press_any_key',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: `"And soon you're fast asleep..."`
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'gosub',
                    _value: { type: 'string', raw: '"dream_of_storm"' },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"captains_logbook"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"read logbook"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"Last entry:"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"I worry we were deceived - that we will never find this dreaded island. Worse, I fear what might be waiting for us if we do."'
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '"pile_stones"' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"x stone"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'negation', raw: '!' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"stone"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: `"You examine one stone.  It's a rock."`
                    },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"count stones"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You slowly and deliberately count each stone. There are exactly {number_of_stones}."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'set_string',
                _value: null,
                _inline: true,
                _items: [],
                var: { type: 'string', raw: '"award_name"' },
                text: { type: 'string', raw: '"OCD"' }
              },
              {
                _id: null,
                _type: 'gosub',
                _value: { type: 'string', raw: '"give_award"' },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"get stones"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"No way you're going to carry them all."`
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"get stone"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'has_not_created' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"stone"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'add',
                    _value: null,
                    _inline: true,
                    _items: [],
                    var: { type: 'string', raw: '"number_of_stones"' },
                    value: { type: 'string', raw: '"-1"' }
                  },
                  {
                    _id: null,
                    _type: 'print',
                    _value: {
                      type: 'string',
                      raw: '"You pocket one of the stones."'
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'pocket',
                    _value: { type: 'string', raw: '"stone"' },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"bottle"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: []
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"bottle_message"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"read message; look message"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'examine',
                _value: null,
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'set_string',
                _value: null,
                _inline: true,
                _items: [],
                var: { type: 'string', raw: '"award_name"' },
                text: { type: 'string', raw: '"Message In a Bottle"' }
              },
              {
                _id: null,
                _type: 'gosub',
                _value: { type: 'string', raw: '"give_award"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'press_any_key',
                _value: null,
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '"msg_bottle"' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"throw bottle; toss bottle"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You throw the bottle far out to sea."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'destroy',
                _value: { type: 'string', raw: '"msg_bottle"' },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"read bottle"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"It has no label to read. There is a message inside."'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"smash bottle; break bottle"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"Why so violent? Did you consider just opening it?"'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"read message; look message"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"It's still sealed inside the bottle. You'd first need to open the bottle."`
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"get message; open bottle"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You open the bottle and take out the message."'
                },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'swap',
                _value: null,
                _inline: true,
                _items: [],
                o1: { type: 'string', raw: '"msg_bottle"' },
                o2: { type: 'string', raw: '"bottle"' }
              },
              {
                _id: null,
                _type: 'if',
                _value: [
                  { type: 'openParen', raw: '(' },
                  { type: 'ident', raw: 'is_carried' },
                  { type: 'openParen', raw: '(' },
                  { type: 'string', raw: '"bottle"' },
                  { type: 'closeParen', raw: ')' },
                  { type: 'closeParen', raw: ')' }
                ],
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'pocket',
                    _value: { type: 'string', raw: '"bottle_message"' },
                    _inline: true,
                    _items: []
                  }
                ]
              },
              {
                _id: null,
                _type: 'else',
                _value: null,
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'create',
                    _value: { type: 'string', raw: '"bottle_message"' },
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_present' },
          { type: 'whitespace', raw: ' ' },
          { type: 'string', raw: '"seashell"' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"listen seashell"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"You hear ocean waves."' },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"help directions; help dir"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'tutorial',
            _value: {
              type: 'string',
              raw: `"<north<12>> and <south<12>> are opposites, as are <east<12>> and <west<12>>.  return to <water's edge<12>> using <south<6>>."`
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'tutorial',
            _value: { type: 'string', raw: '"<__<0>>N\\rW + E\\n<__<0>>S"' },
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"stat _"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 'thirst' },
              { type: 'whitespace', raw: ' ' },
              { type: 'greaterThan', raw: '>' },
              { type: 'whitespace', raw: ' ' },
              { type: 'number', raw: '50' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"- you are thirsty"' },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 'hunger' },
              { type: 'whitespace', raw: ' ' },
              { type: 'greaterThan', raw: '>' },
              { type: 'whitespace', raw: ' ' },
              { type: 'number', raw: '50' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"- you are hungry"' },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'index_of' },
          { type: 'whitespace', raw: ' ' },
          { type: 'openBracket', raw: '{' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ident', raw: 'outer' },
          { type: 'whitespace', raw: ' ' },
          { type: 'pointer', raw: '->' },
          { type: 'whitespace', raw: ' ' },
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'd' },
          { type: 'openParen', raw: '(' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ident', raw: 'inner' },
          { type: 'whitespace', raw: ' ' },
          { type: 'pointer', raw: '->' },
          { type: 'whitespace', raw: ' ' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"jungle"' },
          { type: 'closeParen', raw: ')' },
          { type: 'whitespace', raw: ' ' },
          { type: 'closeBracket', raw: '}' },
          { type: 'whitespace', raw: ' ' },
          { type: 'notEquality', raw: '!=' },
          { type: 'whitespace', raw: ' ' },
          { type: 'minus', raw: '-' },
          { type: 'number', raw: '1' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"look jungle"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"A dense jungle, of the more tropical variety."'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"x trees"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"Huge. Tropical."' },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'is_at' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"beach_zone"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"drink water; get water"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"What water?"' },
                _inline: true,
                _items: []
              },
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You know better thank to drink salt water."'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"dig sand"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You dig for some time, but discover nothing but more sand."'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"look beach"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: { type: 'string', raw: '"Such beautiful white sand."' },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'match',
            _value: { type: 'string', raw: '"look sand"' },
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"Your average beautiful white tropical island sand, and plenty of it."'
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: {
          type: 'string',
          raw: '"achievements -; achieve -; awards -"'
        },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'gosub',
            _value: { type: 'string', raw: '"achievements"' },
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"wearing -"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'gosub',
            _value: { type: 'string', raw: '"wearing"' },
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"clear -"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'clear_screen',
            _value: null,
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"goals - "' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'gosub',
            _value: { type: 'string', raw: '"goals"' },
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"lol -"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: '"You laugh at loud, then wonder if you are starting to lose your mind."'
            },
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"touch yourself; touch myself"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'print',
            _value: { type: 'string', raw: '"Perhaps later?"' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'done',
            _value: null,
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"pinch arm; pinch myself"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'print',
            _value: {
              type: 'string',
              raw: `"Nope, doesn't seem like you're dreaming."`
            },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'done',
            _value: null,
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"the end"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'print',
            _value: { type: 'string', raw: '"A bit premature?"' },
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: {
          type: 'string',
          raw: '"push *; pull *; drag *; move *; roll *"'
        },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'disambiguate_s1',
            _value: { type: 'string', raw: '"present"' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 'is_present' },
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 's1' },
              { type: 'openParen', raw: '(' },
              { type: 'closeParen', raw: ')' },
              { type: 'closeParen', raw: ')' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"Perhaps you could, but why would you want to?"'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'else',
            _value: null,
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"I'm not sure what you're referring to."`
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"touch _"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'disambiguate_s1',
            _value: { type: 'string', raw: '"present"' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 'is_present' },
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 's1' },
              { type: 'openParen', raw: '(' },
              { type: 'closeParen', raw: ')' },
              { type: 'closeParen', raw: ')' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: '"You feel nothing unexpected."'
                },
                _inline: true,
                _items: []
              }
            ]
          },
          {
            _id: null,
            _type: 'else',
            _value: null,
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'print',
                _value: {
                  type: 'string',
                  raw: `"I'm not sure what you're referring to."`
                },
                _inline: true,
                _items: []
              }
            ]
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"eat _"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'print',
            _value: { type: 'string', raw: `"Are you sure that's edible?"` },
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"about _;credits _"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'gosub',
            _value: { type: 'string', raw: '"credits"' },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'done',
            _value: null,
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"stats -"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'gosub',
            _value: { type: 'string', raw: '"stats"' },
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'match',
        _value: { type: 'string', raw: '"whoami -"' },
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'print',
            _value: { type: 'string', raw: `"You're asking me? ... ..."` },
            _inline: true,
            _items: []
          },
          {
            _id: null,
            _type: 'set_string',
            _value: null,
            _inline: true,
            _items: [],
            var: { type: 'string', raw: '"award_name"' },
            text: { type: 'string', raw: '"Know Thyself"' }
          },
          {
            _id: null,
            _type: 'gosub',
            _value: { type: 'string', raw: '"give_award"' },
            _inline: true,
            _items: []
          }
        ]
      },
      {
        _id: null,
        _type: 'if',
        _value: [
          { type: 'openParen', raw: '(' },
          { type: 'ident', raw: 'tutorial_on' },
          { type: 'whitespace', raw: ' ' },
          { type: 'and', raw: '&&' },
          { type: 'whitespace', raw: ' ' },
          { type: 'ident', raw: 'is_at' },
          { type: 'openParen', raw: '(' },
          { type: 'string', raw: '"beach"' },
          { type: 'closeParen', raw: ')' },
          { type: 'closeParen', raw: ')' }
        ],
        _inline: false,
        _items: [
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'negation', raw: '!' },
              { type: 'ident', raw: 'tut_look_sand' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'match',
                _value: { type: 'string', raw: '"south _"' },
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'tutorial',
                    _value: {
                      type: 'string',
                      raw: `"I'd suggest you finish the tutorial before exploring further. It'll take only a few minutes."`
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'tutorial',
                    _value: {
                      type: 'string',
                      raw: `"Otherwise, type <tutorial off<6>> and I'll get our of your way."`
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'press_any_key',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'redescribe',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          },
          {
            _id: null,
            _type: 'if',
            _value: [
              { type: 'openParen', raw: '(' },
              { type: 'ident', raw: 'tutorial_progress' },
              { type: 'lessThan', raw: '<' },
              { type: 'number', raw: '4' },
              { type: 'closeParen', raw: ')' }
            ],
            _inline: false,
            _items: [
              {
                _id: null,
                _type: 'match',
                _value: { type: 'string', raw: '"north _; east _; west _"' },
                _inline: false,
                _items: [
                  {
                    _id: null,
                    _type: 'tutorial',
                    _value: {
                      type: 'string',
                      raw: `"I'd suggest you finish the tutorial before exploring further. It'll take only a few minutes."`
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'tutorial',
                    _value: {
                      type: 'string',
                      raw: `"Otherwise, type <tutorial off<6>> and I'll get our of your way."`
                    },
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'press_any_key',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'redescribe',
                    _value: null,
                    _inline: true,
                    _items: []
                  },
                  {
                    _id: null,
                    _type: 'done',
                    _value: null,
                    _inline: true,
                    _items: []
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    _id: 'on_command',
    _inline: false
  }
}
context
[
  { type: 'whitespace', raw: '  ' },
  { type: 'closeBracket', raw: '}' },
  { type: 'newline', raw: '\n' },
  { type: 'newline', raw: '\n' },
  { type: 'closeBracket', raw: '}' },
  { type: 'whitespace', raw: ' ' },
  { type: 'forwardSlash', raw: '/', broken: 'HERE' },
  { type: 'times', raw: '*' },
  { type: 'whitespace', raw: ' ' },
  { type: 'ident', raw: 'end' }
]
